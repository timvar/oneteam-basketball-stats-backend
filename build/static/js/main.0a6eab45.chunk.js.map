{"version":3,"sources":["data/players.ts","views/Header/index.tsx","views/Home/index.tsx","constants/colors.ts","store/event/actions.ts","store/event/types.ts","store/stat/actions.ts","store/stat/types.ts","store/event/reducers.ts","store/stat/reducers.ts","constants/gameEvents.ts","store/player/reducers.ts","store/player/types.ts","store/index.ts","components/buttons/GreenButton.tsx","components/buttons/OrangeButton.tsx","components/buttons/BlueButton.tsx","components/buttons/GreyButton.tsx","EventButtons/index.tsx","components/buttons/PlayerButton.tsx","components/buttons/EmptyButton.tsx","PlayerButtons/index.tsx","views/Record/index.tsx","views/Team/PlayerItem.tsx","components/modals/PlayerAddDialog/index.tsx","components/modals/PlayerUpdateDialog/index.tsx","views/Team/index.tsx","store/player/actions.ts","views/Stats/index.tsx","views/Login/index.tsx","App.tsx","index.tsx"],"names":["playerList","id","playerNumber","playerName","useStyles","makeStyles","theme","createStyles","root","flexGrow","menuButton","marginRight","spacing","title","list","width","fullList","Header","classes","React","useState","drawerOpen","setDrawerOpen","menuTitle","setMenuTitle","toggleDrawer","open","event","type","key","className","AppBar","position","Toolbar","IconButton","edge","color","aria-label","onClick","Typography","variant","Drawer","anchor","onClose","role","onKeyDown","List","ListItem","component","Link","to","button","ListItemIcon","ListItemText","display","Home","successColor","lightGreen","failColor","deepOrange","otherColor","indigo","undoColor","grey","unusedColor","setEvent","data","payload","addStat","initialState","gameEvent","undefined","eventReducer","state","action","stats","updateStat","stat","newStat","onePm","onePa","twoPm","twoPa","threePm","threePa","orb","drb","ast","blk","stl","statReducer","currStat","emptyStat","console","log","find","s","updatedStats","map","players","playerReducer","currPlayer","p","updatedPlayers","rootReducer","combineReducers","lastEvent","getEvent","store","createStore","composeWithDevTools","applyMiddleware","thunk","background","border","borderRadius","height","padding","margin","fontSize","GreenButton","showPlayerButtons","dispatch","useDispatch","Button","getState","OrangeButton","BlueButton","GreyButton","EventButtons","Grid","container","direction","justify","alignItems","Box","bgcolor","marginTop","PlayerButton","EmptyButton","disabled","PlayerButtons","SetPlayers","useEffect","Record","SetShowPlayerButtons","PlayerItem","player","handlePlayerUpdate","ListItemAvatar","Avatar","primary","ListItemSecondaryAction","style","PlayerAddDialog","modalOpen","onSubmit","setPlayerName","setPlayerNumber","Dialog","DialogContent","preventDefault","Math","floor","random","Number","noValidate","autoComplete","TextField","autoFocus","fullWidth","marginBottom","name","onChange","target","value","placeholder","required","size","marginLeft","PlayerUpdateDialog","String","updatedPlayer","maxWidth","demo","backgroundColor","palette","paper","Team","addDialogOpen","setAddDialogOpen","updateDialogOpen","setUpdateDialogOpen","setPlayer","openUpdateDialog","playerToUpdate","closeAddDialog","closeUpdateDialog","item","xs","md","values","useRowStyles","borderBottom","cell","Row","row","setOpen","shootingdata","made","attempt","pct","toFixed","TableRow","TableCell","align","paddingBottom","paddingTop","colSpan","Collapse","in","timeout","unmountOnExit","Table","TableHead","TableBody","Stats","TableContainer","Paper","stickyHeader","Login","App","createMuiTheme","ThemeProvider","path","render","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.0a6eab45.chunk.js","sourcesContent":["import { Player } from '../store/player/types';\n\nexport const playerList: Player[] = [\n  {\n    id: 3,\n    playerNumber: 20,\n    playerName: 'Sara',\n  },\n  {\n    id: 4,\n    playerNumber: 21,\n    playerName: 'Jenna',\n  },\n  {\n    id: 5,\n    playerNumber: 23,\n    playerName: 'Aila',\n  },\n  {\n    id: 6,\n    playerNumber: 24,\n    playerName: 'Silja',\n  },\n  {\n    id: 7,\n    playerNumber: 30,\n    playerName: 'Helka',\n  },\n  {\n    id: 8,\n    playerNumber: 34,\n    playerName: 'Tessa',\n  },\n  {\n    id: 9,\n    playerNumber: 41,\n    playerName: 'Nicole',\n  },\n  {\n    id: 10,\n    playerNumber: 44,\n    playerName: 'Peppi',\n  },\n];\n","import React from 'react';\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport {\n  Drawer,\n  List,\n  ListItem,\n  ListItemIcon,\n  ListItemText,\n} from '@material-ui/core';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport HomeIcon from '@material-ui/icons/Home';\n\nimport { Link } from 'react-router-dom';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      flexGrow: 1,\n    },\n    menuButton: {\n      marginRight: theme.spacing(2),\n    },\n    title: {\n      flexGrow: 1,\n    },\n    list: {\n      width: 250,\n    },\n    fullList: {\n      width: 'auto',\n    },\n  })\n);\n\nconst Header: React.FC = () => {\n  const classes = useStyles();\n  const [drawerOpen, setDrawerOpen] = React.useState(false);\n  const [menuTitle, setMenuTitle] = React.useState('');\n\n  const toggleDrawer = (open: boolean) => (\n    event: React.KeyboardEvent | React.MouseEvent\n  ) => {\n    if (\n      event.type === 'keydown' &&\n      ((event as React.KeyboardEvent).key === 'Tab' ||\n        (event as React.KeyboardEvent).key === 'Shift')\n    ) {\n      return;\n    }\n    setDrawerOpen(open);\n  };\n\n  const list = () => (\n    <div\n      className={classes.list}\n      role=\"presentation\"\n      onClick={toggleDrawer(false)}\n      onKeyDown={toggleDrawer(false)}\n    >\n      <List>\n        <ListItem\n          onClick={() => setMenuTitle('Home')}\n          component={Link}\n          to=\"/\"\n          button\n        >\n          <ListItemIcon>\n            <HomeIcon />\n          </ListItemIcon>\n          <ListItemText>\n            <Typography variant=\"button\" display=\"block\" color=\"textSecondary\">\n              Home\n            </Typography>\n          </ListItemText>\n        </ListItem>\n        <ListItem\n          onClick={() => setMenuTitle('Team')}\n          component={Link}\n          to=\"/team\"\n          button\n        >\n          <ListItemIcon>\n            <HomeIcon />\n          </ListItemIcon>\n          <ListItemText>\n            <Typography variant=\"button\" display=\"block\" color=\"textSecondary\">\n              Team\n            </Typography>\n          </ListItemText>\n        </ListItem>\n        <ListItem\n          onClick={() => setMenuTitle('Record')}\n          component={Link}\n          to=\"/record\"\n          button\n        >\n          <ListItemIcon>\n            <HomeIcon />\n          </ListItemIcon>\n          <ListItemText>\n            <Typography variant=\"button\" display=\"block\" color=\"textSecondary\">\n              Record\n            </Typography>\n          </ListItemText>\n        </ListItem>\n        <ListItem\n          onClick={() => setMenuTitle('Stats')}\n          component={Link}\n          to=\"/stats\"\n          button\n        >\n          <ListItemIcon>\n            <HomeIcon />\n          </ListItemIcon>\n          <ListItemText>\n            <Typography variant=\"button\" display=\"block\" color=\"textSecondary\">\n              Stats\n            </Typography>\n          </ListItemText>\n        </ListItem>\n        <ListItem\n          onClick={() => setMenuTitle('Login')}\n          component={Link}\n          to=\"/login\"\n          button\n        >\n          <ListItemIcon>\n            <HomeIcon />\n          </ListItemIcon>\n          <ListItemText>\n            <Typography variant=\"button\" display=\"block\" color=\"textSecondary\">\n              Login\n            </Typography>\n          </ListItemText>\n        </ListItem>\n      </List>\n    </div>\n  );\n\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"static\">\n        <Toolbar>\n          <IconButton\n            edge=\"start\"\n            className={classes.menuButton}\n            color=\"inherit\"\n            aria-label=\"menu\"\n            onClick={toggleDrawer(true)}\n          >\n            <MenuIcon />\n          </IconButton>\n          <Typography variant=\"h5\">{menuTitle}</Typography>\n        </Toolbar>\n        <Drawer anchor=\"right\" open={drawerOpen} onClose={toggleDrawer(false)}>\n          {list()}\n        </Drawer>\n      </AppBar>\n    </div>\n  );\n};\n\nexport default Header;\n","import React from 'react';\n\nconst Home: React.FC = () => {\n  return <></>;\n};\n\nexport default Home;\n","import { lightGreen, deepOrange, indigo, grey } from '@material-ui/core/colors';\n\nexport const successColor = lightGreen[700];\nexport const failColor = deepOrange[700];\nexport const otherColor = indigo[700];\nexport const undoColor = grey[700];\nexport const unusedColor = grey[300];\n","import { GameEvent, PlayerNumber, SET_GAME_EVENT, SET_PLAYER } from './types';\n\nexport const setPlayer = (data: PlayerNumber) => {\n  return {\n    type: SET_PLAYER,\n    payload: data,\n  };\n};\n\nexport const setEvent = (data: GameEvent) => {\n  return {\n    type: SET_GAME_EVENT,\n    payload: data,\n  };\n};\n","export interface GameEvent {\n  gameEvent: string;\n}\n\nexport interface PlayerNumber {\n  playerNumber: number;\n}\n\nexport interface EventState {\n  gameEvent: string;\n  playerNumber: number | undefined;\n}\n\nexport const SET_GAME_EVENT = 'SET_GAME_EVENT';\nexport const SET_PLAYER = 'SET_PLAYER';\n\ninterface SetGameEventAction {\n  type: typeof SET_GAME_EVENT;\n  payload: GameEvent;\n}\n\ninterface SetPlayerAction {\n  type: typeof SET_PLAYER;\n  payload: PlayerNumber;\n}\n\nexport type EventActionTypes = SetGameEventAction | SetPlayerAction;\n","import { ADD_STAT, LastEvent } from './types';\n\nexport const addStat = (data: LastEvent) => {\n  return {\n    type: ADD_STAT,\n    payload: data,\n  };\n};\n","export interface Stat {\n  playerNumber: number | undefined;\n  onePm: number;\n  twoPm: number;\n  threePm: number;\n  onePa: number;\n  twoPa: number;\n  threePa: number;\n  orb: number;\n  to: number;\n  drb: number;\n  ast: number;\n  blk: number;\n  stl: number;\n}\n\nexport interface LastEvent {\n  gameEvent: string;\n  playerNumber: number | undefined;\n}\n\nexport interface StatState {\n  stats: Stat[];\n}\n\nexport const ADD_STAT = 'ADD_STAT';\n\ninterface AddStatAction {\n  type: typeof ADD_STAT;\n  payload: LastEvent;\n}\n\nexport type StatActionTypes = AddStatAction;\n","import {\n  EventState,\n  SET_GAME_EVENT,\n  SET_PLAYER,\n  EventActionTypes,\n} from './types';\n\nconst initialState: EventState = {\n  gameEvent: '',\n  playerNumber: undefined,\n};\n\nconst eventReducer = (\n  state = initialState,\n  action: EventActionTypes\n): EventState => {\n  switch (action.type) {\n    case SET_GAME_EVENT:\n      return { ...state, gameEvent: action.payload.gameEvent };\n    case SET_PLAYER:\n      return { ...state, playerNumber: action.payload.playerNumber };\n    default:\n      return state;\n  }\n};\n\nexport default eventReducer;\n","import { StatState, ADD_STAT, StatActionTypes, Stat } from './types';\nimport {\n  ONEPM,\n  TWOPM,\n  THREEPM,\n  ONEPA,\n  TWOPA,\n  THREEPA,\n  ORB,\n  TO,\n  DRB,\n  AST,\n  BLK,\n  STL,\n} from '../../constants/gameEvents';\n\nconst initialState: StatState = {\n  stats: [],\n};\n\nconst updateStat = (stat: Stat, event: string): Stat => {\n  const newStat = stat;\n  switch (event) {\n    case ONEPM:\n      newStat.onePm += 1;\n      newStat.onePa += 1;\n      return newStat;\n    case TWOPM:\n      newStat.twoPm += 1;\n      newStat.twoPa += 1;\n      return newStat;\n    case THREEPM:\n      newStat.threePm += 1;\n      newStat.threePa += 1;\n      return newStat;\n    case ONEPA:\n      newStat.onePa += 1;\n      return newStat;\n    case TWOPA:\n      newStat.twoPa += 1;\n      return newStat;\n    case THREEPA:\n      newStat.threePa += 1;\n      return newStat;\n    case ORB:\n      newStat.orb += 1;\n      return newStat;\n    case TO:\n      newStat.to += 1;\n      return newStat;\n    case DRB:\n      newStat.drb += 1;\n      return newStat;\n    case AST:\n      newStat.ast += 1;\n      return newStat;\n    case BLK:\n      newStat.blk += 1;\n      return newStat;\n    case STL:\n      newStat.stl += 1;\n      return newStat;\n    default:\n      return stat;\n  }\n};\n\nconst statReducer = (\n  state = initialState,\n  action: StatActionTypes\n): StatState => {\n  const emptyStat: Stat = {\n    playerNumber: undefined,\n    onePm: 0,\n    twoPm: 0,\n    threePm: 0,\n    onePa: 0,\n    twoPa: 0,\n    threePa: 0,\n    orb: 0,\n    to: 0,\n    drb: 0,\n    ast: 0,\n    blk: 0,\n    stl: 0,\n  };\n  let currStat: Stat;\n\n  switch (action.type) {\n    case ADD_STAT:\n      console.log('ADD_STAT', action.payload);\n      if (\n        state.stats.find((s) => s.playerNumber === action.payload.playerNumber)\n      ) {\n        currStat = state.stats.find(\n          (s) => s.playerNumber === action.payload.playerNumber\n        )!;\n        currStat = updateStat(currStat, action.payload.gameEvent);\n        const updatedStats = state.stats.map((s) =>\n          s.playerNumber === action.payload.playerNumber ? currStat : s\n        );\n        return { stats: [...updatedStats] };\n      }\n      currStat = emptyStat;\n      currStat.playerNumber = action.payload.playerNumber;\n      currStat = updateStat(currStat, action.payload.gameEvent);\n      return { stats: [...state.stats, currStat] };\n\n    default:\n      return state;\n  }\n};\n\nexport default statReducer;\n","export const ONEPM = '1PM';\nexport const TWOPM = '2PM';\nexport const THREEPM = '3PM';\nexport const ONEPA = '1PA';\nexport const TWOPA = '2PA';\nexport const THREEPA = '3PA';\nexport const ORB = 'ORB';\nexport const TO = 'TO';\nexport const DRB = 'DRB';\nexport const AST = 'AST';\nexport const BLK = 'BLK';\nexport const STL = 'STL';\n","import {\n  PlayerState,\n  ADD_PLAYER,\n  UPDATE_PLAYER,\n  INIT_PLAYERS,\n  PlayerActionTypes,\n  Player,\n} from './types';\n\nconst initialState: PlayerState = {\n  players: [],\n};\n\nconst playerReducer = (\n  state = initialState,\n  action: PlayerActionTypes\n): PlayerState => {\n  let currPlayer: Player;\n\n  switch (action.type) {\n    case INIT_PLAYERS:\n      return { players: [...action.payload] };\n    case ADD_PLAYER:\n      return { players: [...state.players, action.payload] };\n    case UPDATE_PLAYER:\n      if (state.players.find((p) => p.id === action.payload.id)) {\n        currPlayer = state.players.find((p) => p.id === action.payload.id)!;\n        currPlayer.playerName = action.payload.playerName;\n        currPlayer.playerNumber = action.payload.playerNumber;\n        const updatedPlayers = state.players.map((p) =>\n          p.id === action.payload.id ? currPlayer : p\n        );\n        return { players: [...updatedPlayers] };\n      }\n      return state;\n    default:\n      return state;\n  }\n};\n\nexport default playerReducer;\n","export interface Player {\n  id: number | undefined;\n  playerNumber: number | undefined;\n  playerName: string;\n}\n\nexport interface PlayerState {\n  players: Player[];\n}\n\nexport const ADD_PLAYER = 'ADD_PLAYER';\nexport const UPDATE_PLAYER = 'UPDATE_PLAYER';\nexport const INIT_PLAYERS = 'INIT_PLAYERS';\n\ninterface AddPlayerAction {\n  type: typeof ADD_PLAYER;\n  payload: Player;\n}\n\ninterface UpdatePlayerAction {\n  type: typeof UPDATE_PLAYER;\n  payload: Player;\n}\n\ninterface InitPlayersAction {\n  type: typeof INIT_PLAYERS;\n  payload: Player[];\n}\n\nexport type PlayerActionTypes =\n  | AddPlayerAction\n  | UpdatePlayerAction\n  | InitPlayersAction;\n","import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport eventReducer from './event/reducers';\nimport statReducer from './stat/reducers';\nimport playerReducer from './player/reducers';\n\nconst rootReducer = combineReducers({\n  lastEvent: eventReducer,\n  players: playerReducer,\n  stats: statReducer,\n});\n\nexport const getEvent = (state: AppState) => {\n  return state.lastEvent;\n};\n\nexport const getPlayers = (state: AppState) => {\n  return state.players;\n};\n\nexport const getStats = (state: AppState) => {\n  return state.stats;\n};\n\nexport type AppState = ReturnType<typeof rootReducer>;\n\nconst store = createStore(\n  rootReducer,\n  composeWithDevTools(applyMiddleware(thunk))\n);\n\nexport default store;\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport { successColor } from '../../constants/colors';\nimport { setEvent } from '../../store/event/actions';\nimport { addStat } from '../../store/stat/actions';\nimport store, { getEvent } from '../../store';\n\nconst useStyles = makeStyles({\n  root: {\n    background: successColor,\n    border: 0,\n    borderRadius: 3,\n    color: 'white',\n    height: 100,\n    width: '100%',\n    padding: '0 30px',\n    margin: '8px',\n    fontSize: 28,\n  },\n});\n\ninterface Props {\n  gameEvent: string;\n  showPlayerButtons: (value: boolean) => void;\n}\n\nconst GreenButton: React.FC<Props> = ({ gameEvent, showPlayerButtons }) => {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const handleClick = () => {\n    showPlayerButtons(true);\n    dispatch(setEvent({ gameEvent }));\n    dispatch(addStat(getEvent(store.getState())));\n  };\n  return (\n    <Button onClick={handleClick} className={classes.root}>\n      {gameEvent}\n    </Button>\n  );\n};\n\nexport default GreenButton;\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport { failColor } from '../../constants/colors';\nimport { setEvent } from '../../store/event/actions';\nimport { addStat } from '../../store/stat/actions';\nimport store, { getEvent } from '../../store';\n\nconst useStyles = makeStyles({\n  root: {\n    background: failColor,\n    border: 0,\n    borderRadius: 3,\n    color: 'white',\n    height: 100,\n    width: '100%',\n    padding: '0 30px',\n    margin: '8px',\n    fontSize: 28,\n  },\n});\n\ninterface Props {\n  gameEvent: string;\n  showPlayerButtons: (value: boolean) => void;\n}\n\nconst OrangeButton: React.FC<Props> = ({ gameEvent, showPlayerButtons }) => {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const handleClick = () => {\n    showPlayerButtons(true);\n    dispatch(setEvent({ gameEvent }));\n    dispatch(addStat(getEvent(store.getState())));\n  };\n  return (\n    <Button onClick={handleClick} className={classes.root}>\n      {gameEvent}\n    </Button>\n  );\n};\n\nexport default OrangeButton;\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport { otherColor } from '../../constants/colors';\nimport { setEvent } from '../../store/event/actions';\nimport { addStat } from '../../store/stat/actions';\nimport store, { getEvent } from '../../store';\n\nconst useStyles = makeStyles({\n  root: {\n    background: otherColor,\n    border: 0,\n    borderRadius: 3,\n    color: 'white',\n    height: 100,\n    width: '100%',\n    padding: '0 30px',\n    margin: '8px',\n    fontSize: 28,\n  },\n});\n\ninterface Props {\n  gameEvent: string;\n  showPlayerButtons: (value: boolean) => void;\n}\n\nconst BlueButton: React.FC<Props> = ({ gameEvent, showPlayerButtons }) => {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const handleClick = () => {\n    showPlayerButtons(true);\n    dispatch(setEvent({ gameEvent }));\n    dispatch(addStat(getEvent(store.getState())));\n  };\n  return (\n    <Button onClick={handleClick} className={classes.root}>\n      {gameEvent}\n    </Button>\n  );\n};\n\nexport default BlueButton;\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport { undoColor } from '../../constants/colors';\n\nconst useStyles = makeStyles({\n  root: {\n    background: undoColor,\n    border: 0,\n    borderRadius: 3,\n    color: 'white',\n    height: 80,\n    width: '100%',\n    padding: '0 30px',\n    margin: '8px',\n    fontSize: 28,\n  },\n});\n\ninterface Props {\n  gameEvent: string;\n  showPlayerButtons: (value: boolean) => void;\n}\n\nconst GreyButton: React.FC<Props> = ({ gameEvent, showPlayerButtons }) => {\n  const classes = useStyles();\n  const handleClick = () => {\n    showPlayerButtons(true);\n  };\n  return (\n    <Button onClick={handleClick} className={classes.root}>\n      {gameEvent}\n    </Button>\n  );\n};\n\nexport default GreyButton;\n","import React from 'react';\nimport { Box, Grid } from '@material-ui/core';\nimport GreenButton from '../components/buttons/GreenButton';\nimport OrangeButton from '../components/buttons/OrangeButton';\nimport BlueButton from '../components/buttons/BlueButton';\nimport GreyButton from '../components/buttons/GreyButton';\nimport {\n  ONEPM,\n  TWOPM,\n  THREEPM,\n  ONEPA,\n  TWOPA,\n  THREEPA,\n  ORB,\n  TO,\n  DRB,\n  AST,\n  BLK,\n  STL,\n} from '../constants/gameEvents';\n\ninterface Props {\n  showPlayerButtons: (value: boolean) => void;\n}\n\nconst EventButtons: React.FC<Props> = ({ showPlayerButtons }) => {\n  return (\n    <Grid container direction=\"column\" justify=\"center\" alignItems=\"center\">\n      <Box\n        display=\"flex\"\n        bgcolor=\"white\"\n        width=\"100%\"\n        height=\"100%\"\n        marginTop={0}\n      >\n        <GreenButton gameEvent={ONEPM} showPlayerButtons={showPlayerButtons} />\n        <GreenButton gameEvent={TWOPM} showPlayerButtons={showPlayerButtons} />\n        <GreenButton\n          gameEvent={THREEPM}\n          showPlayerButtons={showPlayerButtons}\n        />\n      </Box>\n      <Box\n        display=\"flex\"\n        bgcolor=\"white\"\n        width=\"100%\"\n        height=\"100%\"\n        marginTop={0}\n      >\n        <OrangeButton gameEvent={ONEPA} showPlayerButtons={showPlayerButtons} />\n        <OrangeButton gameEvent={TWOPA} showPlayerButtons={showPlayerButtons} />\n        <OrangeButton\n          gameEvent={THREEPA}\n          showPlayerButtons={showPlayerButtons}\n        />\n      </Box>\n      <Box\n        display=\"flex\"\n        bgcolor=\"white\"\n        width=\"100%\"\n        height=\"100%\"\n        marginTop={0}\n      >\n        <BlueButton gameEvent={ORB} showPlayerButtons={showPlayerButtons} />\n        <OrangeButton gameEvent={TO} showPlayerButtons={showPlayerButtons} />\n        <BlueButton gameEvent={DRB} showPlayerButtons={showPlayerButtons} />\n      </Box>\n      <Box\n        display=\"flex\"\n        bgcolor=\"white\"\n        width=\"100%\"\n        height=\"100%\"\n        marginTop={0}\n      >\n        <BlueButton gameEvent={AST} showPlayerButtons={showPlayerButtons} />\n        <BlueButton gameEvent={BLK} showPlayerButtons={showPlayerButtons} />\n        <BlueButton gameEvent={STL} showPlayerButtons={showPlayerButtons} />\n      </Box>\n      <Box display=\"flex\" bgcolor=\"white\" width=\"100%\" marginTop={0}>\n        <GreyButton gameEvent=\"UNDO\" showPlayerButtons={showPlayerButtons} />\n      </Box>\n    </Grid>\n  );\n};\n\nexport default EventButtons;\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport { useDispatch } from 'react-redux';\nimport { otherColor } from '../../constants/colors';\nimport { setPlayer } from '../../store/event/actions';\n\nconst useStyles = makeStyles({\n  root: {\n    background: otherColor,\n    border: 0,\n    borderRadius: 3,\n    color: 'white',\n    height: 100,\n    width: '100%',\n    padding: '0 30px',\n    margin: '8px',\n    fontSize: 28,\n  },\n});\n\ninterface Props {\n  playerNumber: number;\n  showPlayerButtons: (value: boolean) => void;\n}\n\nconst PlayerButton: React.FC<Props> = ({ playerNumber, showPlayerButtons }) => {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const handleClick = () => {\n    dispatch(setPlayer({ playerNumber }));\n    showPlayerButtons(false);\n  };\n  return (\n    <Button onClick={handleClick} className={classes.root}>\n      {playerNumber}\n    </Button>\n  );\n};\n\nexport default PlayerButton;\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport { unusedColor } from '../../constants/colors';\n\nconst useStyles = makeStyles({\n  root: {\n    background: unusedColor,\n    border: 0,\n    borderRadius: 3,\n    color: 'white',\n    height: 100,\n    width: '100%',\n    padding: '0 30px',\n    margin: '8px',\n    fontSize: 28,\n  },\n});\n\nconst EmptyButton: React.FC = () => {\n  const classes = useStyles();\n\n  return (\n    <Button disabled className={classes.root}>\n      ---\n    </Button>\n  );\n};\n\nexport default EmptyButton;\n","import React from 'react';\nimport { Box, Grid } from '@material-ui/core';\nimport PlayerButton from '../components/buttons/PlayerButton';\nimport EmptyButton from '../components/buttons/EmptyButton';\nimport { playerList } from '../data/players';\nimport { Player } from '../store/player/types';\n\ninterface Props {\n  showPlayerButtons: (value: boolean) => void;\n}\n\nconst PlayerButtons: React.FC<Props> = ({ showPlayerButtons }) => {\n  const [players, SetPlayers] = React.useState<Player[]>([]);\n  React.useEffect(() => {\n    SetPlayers(playerList);\n  }, []);\n  return (\n    <Grid container direction=\"column\" justify=\"center\" alignItems=\"center\">\n      <Box\n        display=\"flex\"\n        bgcolor=\"white\"\n        width=\"100%\"\n        height=\"100%\"\n        marginTop={0}\n      >\n        {players[0] && players[0].playerNumber ? (\n          <PlayerButton\n            playerNumber={players[0].playerNumber}\n            showPlayerButtons={showPlayerButtons}\n          />\n        ) : (\n          <EmptyButton />\n        )}\n        {players[1] && players[1].playerNumber ? (\n          <PlayerButton\n            playerNumber={players[1].playerNumber}\n            showPlayerButtons={showPlayerButtons}\n          />\n        ) : (\n          <EmptyButton />\n        )}\n        {players[2] && players[2].playerNumber ? (\n          <PlayerButton\n            playerNumber={players[2].playerNumber}\n            showPlayerButtons={showPlayerButtons}\n          />\n        ) : (\n          <EmptyButton />\n        )}\n      </Box>\n      <Box\n        display=\"flex\"\n        bgcolor=\"white\"\n        width=\"100%\"\n        height=\"100%\"\n        marginTop={0}\n      >\n        {players[3] && players[3].playerNumber ? (\n          <PlayerButton\n            playerNumber={players[3].playerNumber}\n            showPlayerButtons={showPlayerButtons}\n          />\n        ) : (\n          <EmptyButton />\n        )}\n        {players[4] && players[4].playerNumber ? (\n          <PlayerButton\n            playerNumber={players[4].playerNumber}\n            showPlayerButtons={showPlayerButtons}\n          />\n        ) : (\n          <EmptyButton />\n        )}\n        {players[5] && players[5].playerNumber ? (\n          <PlayerButton\n            playerNumber={players[5].playerNumber}\n            showPlayerButtons={showPlayerButtons}\n          />\n        ) : (\n          <EmptyButton />\n        )}\n      </Box>\n      <Box\n        display=\"flex\"\n        bgcolor=\"white\"\n        width=\"100%\"\n        height=\"100%\"\n        marginTop={0}\n      >\n        {players[6] && players[6].playerNumber ? (\n          <PlayerButton\n            playerNumber={players[6].playerNumber}\n            showPlayerButtons={showPlayerButtons}\n          />\n        ) : (\n          <EmptyButton />\n        )}\n        {players[7] && players[7].playerNumber ? (\n          <PlayerButton\n            playerNumber={players[7].playerNumber}\n            showPlayerButtons={showPlayerButtons}\n          />\n        ) : (\n          <EmptyButton />\n        )}\n        {players[8] && players[8].playerNumber ? (\n          <PlayerButton\n            playerNumber={players[8].playerNumber}\n            showPlayerButtons={showPlayerButtons}\n          />\n        ) : (\n          <EmptyButton />\n        )}\n      </Box>\n      <Box\n        display=\"flex\"\n        bgcolor=\"white\"\n        width=\"100%\"\n        height=\"100%\"\n        marginTop={0}\n      >\n        {players[9] && players[9].playerNumber ? (\n          <PlayerButton\n            playerNumber={players[9].playerNumber}\n            showPlayerButtons={showPlayerButtons}\n          />\n        ) : (\n          <EmptyButton />\n        )}\n        {players[10] && players[10].playerNumber ? (\n          <PlayerButton\n            playerNumber={players[10].playerNumber}\n            showPlayerButtons={showPlayerButtons}\n          />\n        ) : (\n          <EmptyButton />\n        )}\n        {players[11] && players[11].playerNumber ? (\n          <PlayerButton\n            playerNumber={players[11].playerNumber}\n            showPlayerButtons={showPlayerButtons}\n          />\n        ) : (\n          <EmptyButton />\n        )}\n      </Box>\n    </Grid>\n  );\n};\n\nexport default PlayerButtons;\n","import React from 'react';\nimport EventButtons from '../../EventButtons';\nimport PlayerButtons from '../../PlayerButtons';\n\nconst Record: React.FC = () => {\n  const [showPlayerButtons, SetShowPlayerButtons] = React.useState(true);\n  return (\n    <>\n      {showPlayerButtons ? (\n        <PlayerButtons showPlayerButtons={SetShowPlayerButtons} />\n      ) : (\n        <EventButtons showPlayerButtons={SetShowPlayerButtons} />\n      )}\n    </>\n  );\n};\n\nexport default Record;\n","import React from 'react';\nimport {\n  Typography,\n  ListItem,\n  ListItemAvatar,\n  Avatar,\n  ListItemText,\n  ListItemSecondaryAction,\n  IconButton,\n} from '@material-ui/core';\nimport EditIcon from '@material-ui/icons/Edit';\nimport { successColor } from '../../constants/colors';\nimport { Player } from '../../store/player/types';\n\ninterface Props {\n  player: Player;\n  handlePlayerUpdate: (player: Player) => void;\n}\n\nconst PlayerItem: React.FC<Props> = ({ player, handlePlayerUpdate }) => {\n  return (\n    <ListItem>\n      <ListItemAvatar>\n        <Avatar>\n          <Typography variant=\"h6\">{player.playerNumber}</Typography>\n        </Avatar>\n      </ListItemAvatar>\n      <ListItemText\n        primary={\n          <Typography variant=\"h5\" color=\"textSecondary\">\n            {player.playerName}\n          </Typography>\n        }\n      />\n      <ListItemSecondaryAction>\n        <IconButton edge=\"end\" onClick={() => handlePlayerUpdate(player)}>\n          <EditIcon style={{ fontSize: 32, color: successColor }} />\n        </IconButton>\n      </ListItemSecondaryAction>\n    </ListItem>\n  );\n};\n\nexport default PlayerItem;\n","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport { Player } from '../../../store/player/types';\n\ninterface Props {\n  modalOpen: boolean;\n  onClose: () => void;\n  onSubmit: (player: Player) => void;\n}\n\nconst PlayerAddDialog: React.FC<Props> = ({ modalOpen, onClose, onSubmit }) => {\n  const [playerName, setPlayerName] = React.useState<string>('');\n  const [playerNumber, setPlayerNumber] = React.useState<string>('');\n\n  const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    const player = {\n      // TODO: REMOVE id (tulee Mongosta)\n      id: Math.floor(Math.random() * 1000000),\n      playerNumber: Number(playerNumber),\n      playerName,\n    };\n    setPlayerName('');\n    setPlayerNumber('');\n    onSubmit(player);\n  };\n\n  const handleNameChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setPlayerName(event.target.value);\n    console.log(playerName);\n  };\n\n  const handleNumberChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setPlayerNumber(event.target.value);\n    console.log(playerNumber);\n  };\n\n  return (\n    <div>\n      <Dialog open={modalOpen} onClose={onClose}>\n        <DialogContent>\n          <form onSubmit={handleSubmit} noValidate autoComplete=\"off\">\n            <TextField\n              autoFocus={true}\n              fullWidth\n              style={{ marginBottom: 16 }}\n              name=\"playerName\"\n              onChange={handleNameChange}\n              placeholder=\"Player Name\"\n              required={true}\n              size=\"small\"\n              type=\"text\"\n              value={playerName}\n              variant=\"outlined\"\n            />\n            <TextField\n              fullWidth\n              style={{ marginBottom: 24 }}\n              name=\"playerNumber\"\n              onChange={handleNumberChange}\n              placeholder=\"Player Number\"\n              required={true}\n              size=\"small\"\n              value={playerNumber}\n              variant=\"outlined\"\n            />\n            <Button\n              variant=\"outlined\"\n              type=\"submit\"\n              color=\"primary\"\n              style={{ marginBottom: 8, marginRight: 8 }}\n            >\n              Add\n            </Button>\n            <Button\n              variant=\"outlined\"\n              onClick={onClose}\n              color=\"secondary\"\n              style={{ marginBottom: 8, marginLeft: 8 }}\n            >\n              Cancel\n            </Button>\n          </form>\n        </DialogContent>\n      </Dialog>\n    </div>\n  );\n};\n\nexport default PlayerAddDialog;\n","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport { Player } from '../../../store/player/types';\n\ninterface Props {\n  modalOpen: boolean;\n  onClose: () => void;\n  onSubmit: (player: Player) => void;\n  player: Player;\n}\n\nconst PlayerUpdateDialog: React.FC<Props> = ({\n  modalOpen,\n  onClose,\n  onSubmit,\n  player,\n}) => {\n  const [playerName, setPlayerName] = React.useState<string>('');\n  const [playerNumber, setPlayerNumber] = React.useState<string>('');\n\n  React.useEffect(() => {\n    setPlayerName(player.playerName);\n    setPlayerNumber(String(player.playerNumber));\n  }, [player.playerName, player.playerNumber]);\n\n  const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    const updatedPlayer: Player = {\n      id: player.id,\n      playerName,\n      playerNumber: Number(playerNumber),\n    };\n    setPlayerName('');\n    setPlayerNumber('');\n    onSubmit(updatedPlayer);\n  };\n\n  const handleNameChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setPlayerName(event.target.value);\n    console.log(playerName);\n  };\n\n  const handleNumberChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setPlayerNumber(event.target.value);\n    console.log(playerNumber);\n  };\n\n  return (\n    <div>\n      <Dialog open={modalOpen} onClose={onClose}>\n        <DialogContent>\n          <form onSubmit={handleSubmit} noValidate autoComplete=\"off\">\n            <TextField\n              autoFocus={true}\n              fullWidth\n              style={{ marginBottom: 16 }}\n              name=\"playerName\"\n              onChange={handleNameChange}\n              placeholder=\"Player Name\"\n              required={true}\n              size=\"small\"\n              type=\"text\"\n              value={playerName}\n              variant=\"outlined\"\n            />\n            <TextField\n              fullWidth\n              style={{ marginBottom: 24 }}\n              name=\"playerNumber\"\n              onChange={handleNumberChange}\n              placeholder=\"Player Number\"\n              required={true}\n              size=\"small\"\n              value={playerNumber}\n              variant=\"outlined\"\n            />\n            <Button\n              variant=\"outlined\"\n              type=\"submit\"\n              color=\"primary\"\n              style={{ marginBottom: 8, marginRight: 8 }}\n            >\n              Update\n            </Button>\n            <Button\n              variant=\"outlined\"\n              onClick={onClose}\n              color=\"secondary\"\n              style={{ marginBottom: 8, marginLeft: 8 }}\n            >\n              Cancel\n            </Button>\n          </form>\n        </DialogContent>\n      </Dialog>\n    </div>\n  );\n};\n\nexport default PlayerUpdateDialog;\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { makeStyles, Theme, createStyles } from '@material-ui/core/styles';\nimport { Grid, List, IconButton } from '@material-ui/core';\nimport AddCircleOutlineIcon from '@material-ui/icons/AddCircleOutline';\nimport { successColor } from '../../constants/colors';\n\nimport PlayerItem from './PlayerItem';\nimport { Player } from '../../store/player/types';\nimport PlayerAddDialog from '../../components/modals/PlayerAddDialog';\nimport PlayerUpdateDialog from '../../components/modals/PlayerUpdateDialog';\nimport store, { getPlayers } from '../../store';\nimport { addPlayer, updatePlayer } from '../../store/player/actions';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      flexGrow: 1,\n      maxWidth: 752,\n    },\n    demo: {\n      backgroundColor: theme.palette.background.paper,\n    },\n  })\n);\n\nconst Team: React.FC = () => {\n  const dispatch = useDispatch();\n  const classes = useStyles();\n  const [addDialogOpen, setAddDialogOpen] = React.useState<boolean>(false);\n  const [updateDialogOpen, setUpdateDialogOpen] = React.useState<boolean>(\n    false\n  );\n  const [player, setPlayer] = React.useState<Player>({\n    id: undefined,\n    playerName: '',\n    playerNumber: undefined,\n  });\n\n  const openAddDialog = (): void => setAddDialogOpen(true);\n  const openUpdateDialog = (playerToUpdate: Player): void => {\n    console.log('updatePlayer', playerToUpdate);\n    setPlayer(playerToUpdate);\n    setUpdateDialogOpen(true);\n  };\n\n  const closeAddDialog = (): void => {\n    setAddDialogOpen(false);\n  };\n  const closeUpdateDialog = (): void => {\n    setUpdateDialogOpen(false);\n  };\n\n  const handleAddPlayer = (values: Player): void => {\n    closeAddDialog();\n    dispatch(addPlayer(values));\n    console.log('add player', values);\n  };\n\n  const handleUpdatePlayer = (values: Player): void => {\n    closeUpdateDialog();\n    dispatch(updatePlayer(values));\n    console.log('update player', values);\n  };\n\n  return (\n    <div className={classes.root}>\n      <Grid item xs={12} md={6}>\n        <div className={classes.demo}>\n          <List>\n            {getPlayers(store.getState()).players.map((p) => (\n              <PlayerItem\n                key={p.id}\n                player={p}\n                handlePlayerUpdate={openUpdateDialog}\n              />\n            ))}\n          </List>\n          <IconButton onClick={() => openAddDialog()}>\n            <AddCircleOutlineIcon\n              style={{ fontSize: 48, color: successColor }}\n            />\n          </IconButton>\n\n          <PlayerUpdateDialog\n            modalOpen={updateDialogOpen}\n            player={player}\n            onClose={closeUpdateDialog}\n            onSubmit={handleUpdatePlayer}\n          />\n\n          <PlayerAddDialog\n            modalOpen={addDialogOpen}\n            onClose={closeAddDialog}\n            onSubmit={handleAddPlayer}\n          />\n        </div>\n      </Grid>\n    </div>\n  );\n};\n\nexport default Team;\n","import { Player, ADD_PLAYER, UPDATE_PLAYER, INIT_PLAYERS } from './types';\n\nexport const addPlayer = (payload: Player) => {\n  return {\n    type: ADD_PLAYER,\n    payload,\n  };\n};\n\nexport const updatePlayer = (payload: Player) => {\n  return {\n    type: UPDATE_PLAYER,\n    payload,\n  };\n};\n\nexport const initPlayers = (payload: Player[]) => {\n  return {\n    type: INIT_PLAYERS,\n    payload,\n  };\n};\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Box from '@material-ui/core/Box';\nimport Collapse from '@material-ui/core/Collapse';\nimport IconButton from '@material-ui/core/IconButton';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport KeyboardArrowDownIcon from '@material-ui/icons/KeyboardArrowDown';\nimport KeyboardArrowUpIcon from '@material-ui/icons/KeyboardArrowUp';\nimport store, { getStats } from '../../store';\nimport { Stat } from '../../store/stat/types';\n\nconst useRowStyles = makeStyles((theme) => ({\n  root: {\n    '& > *': {\n      borderBottom: 'unset',\n    },\n  },\n  cell: {\n    width: 30,\n  },\n}));\n\ninterface Props {\n  row: Stat;\n}\n\nconst Row: React.FC<Props> = ({ row }) => {\n  const [open, setOpen] = React.useState(false);\n  const classes = useRowStyles();\n\n  const shootingdata = (made: number, attempt: number): string => {\n    const pct = ((100 * made) / attempt).toFixed(0);\n    return attempt > 0 ? `${made}/${attempt}/${pct}` : '0/0/0';\n  };\n\n  return (\n    <>\n      <TableRow className={classes.root}>\n        <TableCell padding=\"none\" size=\"small\" className={classes.cell}>\n          <IconButton size=\"small\" onClick={() => setOpen(!open)}>\n            {open ? <KeyboardArrowUpIcon /> : <KeyboardArrowDownIcon />}\n          </IconButton>\n        </TableCell>\n        <TableCell\n          padding=\"none\"\n          size=\"small\"\n          className={classes.cell}\n          align=\"center\"\n        >\n          {row.playerNumber}\n        </TableCell>\n        <TableCell\n          padding=\"none\"\n          size=\"small\"\n          className={classes.cell}\n          align=\"center\"\n        >\n          {row.onePm + row.twoPm * 2 + row.threePm * 3}\n        </TableCell>\n        <TableCell\n          padding=\"none\"\n          size=\"small\"\n          className={classes.cell}\n          align=\"center\"\n        >\n          {row.ast}\n        </TableCell>\n        <TableCell\n          padding=\"none\"\n          size=\"small\"\n          className={classes.cell}\n          align=\"center\"\n        >\n          {row.stl}\n        </TableCell>\n        <TableCell\n          padding=\"none\"\n          size=\"small\"\n          className={classes.cell}\n          align=\"center\"\n        >\n          {row.orb + row.drb}\n        </TableCell>\n        <TableCell\n          padding=\"none\"\n          size=\"small\"\n          className={classes.cell}\n          align=\"center\"\n        >\n          {row.blk}\n        </TableCell>\n        <TableCell\n          padding=\"none\"\n          size=\"small\"\n          className={classes.cell}\n          align=\"center\"\n        >\n          {row.to}\n        </TableCell>\n      </TableRow>\n      <TableRow>\n        <TableCell style={{ paddingBottom: 0, paddingTop: 0 }} colSpan={12}>\n          <Collapse in={open} timeout=\"auto\" unmountOnExit>\n            <Box margin={1}>\n              <Table>\n                <TableHead>\n                  <TableRow>\n                    <TableCell\n                      padding=\"none\"\n                      className={classes.cell}\n                      align=\"center\"\n                    >\n                      1P M/A/%\n                    </TableCell>\n                    <TableCell\n                      padding=\"none\"\n                      className={classes.cell}\n                      align=\"center\"\n                    >\n                      2P M/A/%\n                    </TableCell>\n                    <TableCell\n                      padding=\"none\"\n                      className={classes.cell}\n                      align=\"center\"\n                    >\n                      3P M/A/%\n                    </TableCell>\n                    <TableCell\n                      padding=\"none\"\n                      className={classes.cell}\n                      align=\"center\"\n                    >\n                      ORB/DRB\n                    </TableCell>\n                    <TableCell\n                      padding=\"none\"\n                      className={classes.cell}\n                      align=\"center\"\n                    >\n                      EFF\n                    </TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  <TableRow>\n                    <TableCell\n                      padding=\"none\"\n                      className={classes.cell}\n                      align=\"center\"\n                    >\n                      {shootingdata(row.onePm, row.onePa)}\n                    </TableCell>\n                    <TableCell\n                      padding=\"none\"\n                      className={classes.cell}\n                      align=\"center\"\n                    >\n                      {shootingdata(row.twoPm, row.twoPa)}\n                    </TableCell>\n                    <TableCell\n                      padding=\"none\"\n                      className={classes.cell}\n                      align=\"center\"\n                    >\n                      {shootingdata(row.threePm, row.threePa)}\n                    </TableCell>\n                    <TableCell\n                      padding=\"none\"\n                      className={classes.cell}\n                      align=\"center\"\n                    >\n                      {`${row.orb} / ${row.drb}`}\n                    </TableCell>\n                    <TableCell\n                      padding=\"none\"\n                      className={classes.cell}\n                      align=\"center\"\n                    >\n                      EFF\n                    </TableCell>\n                  </TableRow>\n                </TableBody>\n              </Table>\n            </Box>\n          </Collapse>\n        </TableCell>\n      </TableRow>\n    </>\n  );\n};\n\nconst Stats: React.FC = () => {\n  const classes = useRowStyles();\n\n  return (\n    <TableContainer component={Paper}>\n      <Table stickyHeader>\n        <TableHead>\n          <TableRow>\n            <TableCell\n              padding=\"none\"\n              size=\"small\"\n              className={classes.cell}\n              align=\"center\"\n            />\n            <TableCell\n              padding=\"none\"\n              size=\"small\"\n              className={classes.cell}\n              align=\"center\"\n            >\n              ###\n            </TableCell>\n            <TableCell\n              padding=\"none\"\n              size=\"small\"\n              className={classes.cell}\n              align=\"center\"\n            >\n              PTS\n            </TableCell>\n            <TableCell\n              padding=\"none\"\n              size=\"small\"\n              className={classes.cell}\n              align=\"center\"\n            >\n              AST\n            </TableCell>\n            <TableCell\n              padding=\"none\"\n              size=\"small\"\n              className={classes.cell}\n              align=\"center\"\n            >\n              STL\n            </TableCell>\n            <TableCell\n              padding=\"none\"\n              size=\"small\"\n              className={classes.cell}\n              align=\"center\"\n            >\n              REB\n            </TableCell>\n            <TableCell\n              padding=\"none\"\n              size=\"small\"\n              className={classes.cell}\n              align=\"center\"\n            >\n              BLK\n            </TableCell>\n            <TableCell\n              padding=\"none\"\n              size=\"small\"\n              className={classes.cell}\n              align=\"center\"\n            >\n              TO\n            </TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {getStats(store.getState()).stats.map((row) => (\n            <Row key={row.playerNumber} row={row} />\n          ))}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n};\n\nexport default Stats;\n","import React from 'react';\n\nconst Login: React.FC = () => {\n  return <></>;\n};\n\nexport default Login;\n","import React from 'react';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core/styles';\nimport { useDispatch } from 'react-redux';\nimport { initPlayers } from './store/player/actions';\nimport { playerList } from './data/players';\nimport Header from './views/Header';\nimport Home from './views/Home';\nimport Record from './views/Record';\nimport Team from './views/Team';\nimport Stats from './views/Stats';\nimport Login from './views/Login';\n\nconst App: React.FC = () => {\n  const dispatch = useDispatch();\n  const theme = createMuiTheme();\n\n  React.useEffect(() => {\n    dispatch(initPlayers(playerList));\n  }, [dispatch]);\n\n  return (\n    <Router>\n      <ThemeProvider theme={theme}>\n        <Header />\n        <Switch>\n          <Route path=\"/team\" render={() => <Team />} />\n          <Route path=\"/stats\" render={() => <Stats />} />\n          <Route path=\"/login\" render={() => <Login />} />\n          <Route path=\"/record\" render={() => <Record />} />\n          <Route path=\"/\" render={() => <Home />} />\n        </Switch>\n      </ThemeProvider>\n    </Router>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport App from './App';\nimport store from './store';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}
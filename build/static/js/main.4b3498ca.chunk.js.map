{"version":3,"sources":["store/user/actions.ts","store/user/types.ts","components/button/OkButton.tsx","components/button/CancelButton.tsx","components/dialog/LoginDialog/index.tsx","services/login.ts","store/event/reducers.ts","store/event/types.ts","constants/gameEvents.ts","store/stat/reducers.ts","store/stat/types.ts","store/player/reducers.ts","store/player/types.ts","store/user/reducers.ts","store/team/reducers.ts","store/team/types.ts","store/game/reducers.ts","store/game/types.ts","store/roster/reducers.ts","store/roster/types.ts","store/header/reducers.ts","store/header/types.ts","store/score/reducers.ts","store/score/types.ts","store/index.ts","utils/index.ts","services/teams.ts","store/team/actions.ts","services/players.ts","store/player/actions.ts","store/header/actions.ts","services/games.ts","store/game/actions.ts","store/roster/actions.ts","store/stat/actions.ts","views/Header/LoggedInMenu.tsx","constants/text.ts","views/Header/LoggedOutMenu.tsx","views/Header/index.tsx","views/Home/index.tsx","constants/colors.ts","store/event/actions.ts","components/button/GreenButton.tsx","store/score/actions.ts","components/button/OrangeButton.tsx","components/button/BlueButton.tsx","components/button/UndoButton.tsx","EventButtons/index.tsx","components/button/PlayerButton.tsx","components/button/EmptyButton.tsx","PlayerButtons/index.tsx","components/select/TeamSelect/index.tsx","components/dialog/GameAddDialog/index.tsx","services/stats.ts","components/stepper/RecordStepper/index.tsx","components/dialog/SelectRosterDialog/RosterItem.tsx","components/dialog/SelectRosterDialog/ShowRoster.tsx","components/button/RosterOkButton.tsx","components/dialog/SelectRosterDialog/index.tsx","components/dialog/AlertDialog/index.tsx","components/button/DeleteButton.tsx","components/button/StopButton.tsx","views/Record/index.tsx","components/button/EditButton.tsx","components/ListItem/index.tsx","components/dialog/PlayerAddDialog/index.tsx","components/dialog/PlayerUpdateDialog/index.tsx","components/button/PersonAddButton.tsx","views/PlayerView/index.tsx","components/dialog/TeamAddDialog/index.tsx","components/dialog/TeamUpdateDialog/index.tsx","components/button/TeamAddButton.tsx","components/TeamListItem/index.tsx","views/TeamView/index.tsx","components/table/StatTable/StatRow.tsx","components/table/StatTable/StatTableHeader.tsx","components/button/RestartButton.tsx","views/LoggedOutStats/index.tsx","components/table/GameTable/Row.tsx","components/table/GameTable/index.tsx","views/StatSelect/index.tsx","views/GameStats/index.tsx","views/LoggedOutPlayerView/index.tsx","views/LoggedOutRecord/index.tsx","App.tsx","index.tsx"],"names":["loginUser","payload","type","useStyles","makeStyles","theme","createStyles","okIcon","fontSize","color","teal","OkButton","classes","IconButton","edge","className","cancelIcon","palette","primary","main","CancelButton","action","onClick","LoginDialog","modalOpen","onClose","onSubmit","React","useState","username","setUsername","password","setPassword","Dialog","open","DialogContent","event","preventDefault","user","noValidate","autoComplete","TextField","autoFocus","fullWidth","style","marginBottom","name","onChange","target","value","placeholder","required","size","variant","Box","display","flexDirection","justifyContent","px","login","credentials","a","axios","post","data","initialState","events","eventReducer","newEvent","newEventList","state","gameEvent","id","uuid","playerNumber","unshift","length","pop","filter","evt","TO","stats","addStat","stat","newStat","onePm","onePa","twoPm","twoPa","threePm","threePa","orb","to","drb","ast","blk","stl","removeStat","statReducer","currStat","emptyStat","find","s","updatedStats","map","players","playerReducer","currPlayer","p","playerName","updatedPlayers","userReducer","teams","teamReducer","currTeam","teamName","game","homeTeam","awayTeam","gameNumber","description","gameDate","team","gameReducer","roster","rosterReducer","newRoster","title","headerReducer","score","scoreReducer","newScore","rootReducer","combineReducers","header","getEvent","getEvents","getPlayers","getStats","getUser","getTeams","getToken","token","getScore","store","createStore","composeWithDevTools","applyMiddleware","thunk","setAuthHeader","headers","Authorization","getAll","getState","config","get","getGamesByTeam","createTeam","undefined","updateTeam","put","addTeam","teamInput","dispatch","teamService","Error","addTeamAction","createPlayer","player","addPlayer","playerInput","playerService","addPlayerAction","updatePlayer","resetPlayers","setHeaderTitle","getStatsByGame","createGame","addGame","gameInput","gameService","addGameAction","addToRoster","resetRoster","resetStats","LoggedInMenu","useDispatch","List","component","Link","button","ListItemIcon","ListItemText","Typography","root","flexGrow","menuButton","marginRight","spacing","list","width","fullList","avatar","orange","height","backgroundColor","grey","boxShadow","basketball","appbar","borderRadius","dark","Header","loggedIn","setLoggedIn","history","useHistory","drawerOpen","setDrawerOpen","dialogOpen","setDialogOpen","closeDialog","handleLogin","values","loginService","window","localStorage","setItem","JSON","stringify","push","console","error","toggleDrawer","key","AppBar","position","Toolbar","removeItem","Avatar","Button","Drawer","anchor","role","onKeyDown","LoggedOutMenu","Home","successColor","lightGreen","failColor","deepOrange","otherColor","lightBlue","setEvent","removeEvent","background","border","padding","margin","GreenButton","showPlayerButtons","setSnackbar","OrangeButton","setOrangeSnack","BlueButton","setBlueSnack","UndoButton","EventButtons","Grid","container","direction","justify","alignItems","bgcolor","marginTop","paddingTop","PlayerButton","secondary","light","EmptyButton","disabled","PlayerButtons","SetPlayers","useEffect","sort","b","formControl","TeamSelect","submit","setTeam","FormControl","InputLabel","Select","label","labelId","teamId","item","MenuItem","GameAddDialog","setHomeTeam","setAwayTeam","setGameNumber","setDescription","setGameDate","selectedTeam","setSelectedTeam","createStat","actionsContainer","resetContainer","RecordStepper","showNextView","activeStep","setActiveStep","steps","handleNextStep","prevActiveStep","Stepper","orientation","index","Step","StepLabel","StepContent","checkbox","RosterItem","checked","setChecked","borderColor","marginLeft","py","Checkbox","log","rosterUpdate","inputProps","ShowRoster","RosterOkButton","SelectRosterDialog","AlertDialog","aria-labelledby","aria-describedby","DialogContentText","DialogActions","deleteIcon","DeleteButton","iconbutton","stopIcon","StopButton","paddingLeft","gameEventList","orangeSnack","orangeSnackText","blueSnack","blueSnackText","greenSnack","greenSnackText","divider","EventAvatar","Record","showStepper","setShowStepper","showGameAddDialog","setShowGameAddDialog","showSelectRoster","setShowSelectRoster","setShowPlayerButtons","recordGame","setRecordGame","addGameDialogOpen","setAddGameDialogOpen","selectRosterDialogOpen","setSelectRosterDialogOpen","setGreenSnack","closeAddGameDialog","handleAddGame","message","align","Divider","mx","paddingBottom","statEvent","handleDeleteEvent","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","reason","saveStats","statToDB","forEach","statService","editIcon","EditButton","ListItem","handlePlayerUpdate","PlayerAddDialog","setPlayerName","setPlayerNumber","Number","PlayerUpdateDialog","String","updatedPlayer","personAdd","icon","PersonAddButton","Fab","PlayerView","addDialogOpen","setAddDialogOpen","updateDialogOpen","setUpdateDialogOpen","setPlayer","closeAddDialog","openUpdateDialog","playerToUpdate","closeUpdateDialog","handleAddPlayer","mt","mb","TeamAddDialog","setTeamName","TeamUpdateDialog","updatedTeam","TeamAddButton","TeamListItem","handleTeamUpdate","TeamView","addTeamDialogOpen","setAddTeamDialogOpen","updateTeamDialogOpen","setUpdateTeamDialogOpen","closeAddTeamDialog","openUpdateTeamDialog","teamToUpdate","closeUpdateTeamDialog","handleAddTeam","updateTeamAction","useRowStyles","borderBottom","cell","tablerow","StatRow","row","setOpen","shootingdata","made","attempt","pct","toFixed","TableRow","TableCell","result","efficiency","colSpan","Collapse","in","timeout","unmountOnExit","Table","TableHead","TableBody","fgm","fga","fgpct","StatTableHeader","replayIcon","RestartButton","table","Stats","stickyHeader","Row","handleClick","GameTable","games","TableContainer","Paper","Statselect","setGames","handleTeamSelect","gameData","GameStats","useParams","setStats","then","statData","LoggedOutPlayerView","newPlayer","LoggedOutRecord","THEME","createMuiTheme","typography","fontFamily","fontWeightLight","fontWeightRegular","fontWeightMedium","pink","blueGrey","App","loggedInUser","getItem","parse","ThemeProvider","exact","path","render","StatSelect","LoggedOutStats","renderApp","ReactDOM","document","getElementById","subscribe"],"mappings":"+TASaA,EAAY,SAACC,GACxB,MAAO,CACLC,KCOiB,QDNjBD,Y,kOENEE,EAAYC,aAAW,SAACC,GAAD,OAC3BC,YAAa,CACXC,OAAQ,CACNC,SAAU,GACVC,MAAOC,IAAK,WAeHC,EAVY,WACzB,IAAMC,EAAUT,IAEhB,OACE,kBAACU,EAAA,EAAD,CAAYC,KAAK,QAAQZ,KAAK,UAC5B,kBAAC,IAAD,CAAiBa,UAAWH,EAAQL,W,iBCfpCJ,EAAYC,aAAW,SAACC,GAAD,OAC3BC,YAAa,CACXU,WAAY,CACVR,SAAU,GACVC,MAAOJ,EAAMY,QAAQC,QAAQC,WAmBpBC,EAVuB,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACjCT,EAAUT,IAEhB,OACE,kBAACU,EAAA,EAAD,CAAYC,KAAK,QAAQQ,QAASD,GAChC,kBAAC,IAAD,CAAoBN,UAAWH,EAAQI,eC6D9BO,EArEsB,SAAC,GAAsC,IAApCC,EAAmC,EAAnCA,UAAWC,EAAwB,EAAxBA,QAASC,EAAe,EAAfA,SAAe,EACzCC,IAAMC,SAAiB,IADkB,mBAClEC,EADkE,KACxDC,EADwD,OAEzCH,IAAMC,SAAiB,IAFkB,mBAElEG,EAFkE,KAExDC,EAFwD,KAuBzE,OACE,6BACE,kBAACC,EAAA,EAAD,CAAQC,KAAMV,EAAWC,QAASA,GAChC,kBAACU,EAAA,EAAD,KACE,0BAAMT,SAvBO,SAACU,GACpBA,EAAMC,iBACN,IAAMC,EAAO,CACXT,WACAE,YAEFD,EAAY,IACZE,EAAY,IACZN,EAASY,IAe2BC,YAAU,EAACC,aAAa,OACpD,kBAACC,EAAA,EAAD,CACEC,WAAW,EACXC,WAAS,EACTC,MAAO,CAAEC,aAAc,IACvBC,KAAK,WACLC,SAlBiB,SAACX,GAC5BN,EAAYM,EAAMY,OAAOC,QAkBfC,YAAY,WACZC,UAAU,EACVC,KAAK,QACLlD,KAAK,OACL+C,MAAOpB,EACPwB,QAAQ,aAEV,kBAACZ,EAAA,EAAD,CACEE,WAAS,EACTC,MAAO,CAAEC,aAAc,IACvBC,KAAK,WACLC,SA1BiB,SAACX,GAC5BJ,EAAYI,EAAMY,OAAOC,QA0BfC,YAAY,WACZC,UAAU,EACVC,KAAK,QACLlD,KAAK,WACL+C,MAAOlB,EACPsB,QAAQ,aAEV,kBAACC,EAAA,EAAD,CACEC,QAAQ,OACRC,cAAc,MACdC,eAAe,gBACfC,GAAI,GAEJ,kBAAC,EAAD,MACA,kBAAC,EAAD,CAAcrC,OAAQI,U,iBCtE9BkC,EAAK,uCAAG,WAAOC,GAAP,SAAAC,EAAA,sEACEC,IAAMC,KAHN,aAGoBH,GADtB,uCACoCI,MADpC,2CAAH,sDAII,IAAEL,S,wDCCXM,GAA2B,CAC/BC,OAAQ,IAkCKC,GA/BM,WAGH,IACZC,EACAC,EAJJC,EAEe,uDAFPL,GACR5C,EACe,uCAGf,OAAQA,EAAOnB,MACb,ICD0B,iBDIxB,OAFAmE,EAAY,aAAOC,EAAMJ,SACZ,GAAGK,UAAYlD,EAAOpB,QAAQsE,UACpC,6BAAKD,GAAZ,IAAmBJ,OAAQG,IAC7B,ICJsB,aDepB,OAVAD,EAAW,CACTI,GAAIC,kBACJF,UAAW,GACXG,aAAcrD,EAAOpB,QAAQyE,eAE/BL,EAAY,aAAOC,EAAMJ,SACZS,QAAQP,GACjBC,EAAaO,OAAS,GACxBP,EAAaQ,MAER,6BAAKP,GAAZ,IAAmBJ,OAAQG,IAC7B,ICfwB,eDiBtB,OADAA,EAAeC,EAAMJ,OAAOY,QAAO,SAACC,GAAD,OAASA,EAAIP,KAAOnD,EAAOpB,WACvD,6BAAKqE,GAAZ,IAAmBJ,OAAQG,IAC7B,QACE,OAAOC,IElCAU,GAAK,KCgBZf,GAA0B,CAC9BgB,MAAO,IAGHC,GAAU,SAACC,EAAY/C,GAC3B,IAAMgD,EAAUD,EAChB,OAAQ/C,GACN,ID9BiB,MCiCf,OAFAgD,EAAQC,OAAS,EACjBD,EAAQE,OAAS,EACVF,EACT,IDjCiB,MCoCf,OAFAA,EAAQG,OAAS,EACjBH,EAAQI,OAAS,EACVJ,EACT,IDpCmB,MCuCjB,OAFAA,EAAQK,SAAW,EACnBL,EAAQM,SAAW,EACZN,EACT,IDvCiB,MCyCf,OADAA,EAAQE,OAAS,EACVF,EACT,IDzCiB,MC2Cf,OADAA,EAAQI,OAAS,EACVJ,EACT,ID3CmB,MC6CjB,OADAA,EAAQM,SAAW,EACZN,EACT,ID7Ce,MC+Cb,OADAA,EAAQO,KAAO,EACRP,EACT,KAAKJ,GAEH,OADAI,EAAQQ,IAAM,EACPR,EACT,IDjDe,MCmDb,OADAA,EAAQS,KAAO,EACRT,EACT,IDnDe,MCqDb,OADAA,EAAQU,KAAO,EACRV,EACT,IDrDe,MCuDb,OADAA,EAAQW,KAAO,EACRX,EACT,IDvDe,MCyDb,OADAA,EAAQY,KAAO,EACRZ,EACT,QACE,OAAOD,IAIPc,GAAa,SAACd,EAAY/C,GAC9B,IAAMgD,EAAUD,EAChB,OAAQ/C,GACN,ID7EiB,MCgFf,OAFAgD,EAAQC,OAAS,EACjBD,EAAQE,OAAS,EACVF,EACT,IDhFiB,MCmFf,OAFAA,EAAQG,OAAS,EACjBH,EAAQI,OAAS,EACVJ,EACT,IDnFmB,MCsFjB,OAFAA,EAAQK,SAAW,EACnBL,EAAQM,SAAW,EACZN,EACT,IDtFiB,MCwFf,OADAA,EAAQE,OAAS,EACVF,EACT,IDxFiB,MC0Ff,OADAA,EAAQI,OAAS,EACVJ,EACT,ID1FmB,MC4FjB,OADAA,EAAQM,SAAW,EACZN,EACT,ID5Fe,MC8Fb,OADAA,EAAQO,KAAO,EACRP,EACT,KAAKJ,GAEH,OADAI,EAAQQ,IAAM,EACPR,EACT,IDhGe,MCkGb,OADAA,EAAQS,KAAO,EACRT,EACT,IDlGe,MCoGb,OADAA,EAAQU,KAAO,EACRV,EACT,IDpGe,MCsGb,OADAA,EAAQW,KAAO,EACRX,EACT,IDtGe,MCwGb,OADAA,EAAQY,KAAO,EACRZ,EACT,QACE,OAAOD,IAgEEe,GA5DK,WAGH,IAgBXC,EAlBJ7B,EAEc,uDAFNL,GACR5C,EACc,uCACR+E,EAAkB,CACtB1B,aAAc,EACdW,MAAO,EACPE,MAAO,EACPE,QAAS,EACTH,MAAO,EACPE,MAAO,EACPE,QAAS,EACTC,IAAK,EACLC,GAAI,EACJC,IAAK,EACLC,IAAK,EACLC,IAAK,EACLC,IAAK,GAIP,OAAQ3E,EAAOnB,MACb,ICjFoB,WDkFlB,GACEoE,EAAMW,MAAMoB,MAAK,SAACC,GAAD,OAAOA,EAAE5B,eAAiBrD,EAAOpB,QAAQyE,gBAC1D,CACAyB,EAAW7B,EAAMW,MAAMoB,MACrB,SAACC,GAAD,OAAOA,EAAE5B,eAAiBrD,EAAOpB,QAAQyE,gBAE3CyB,EAAWjB,GAAQiB,EAAU9E,EAAOpB,QAAQsE,WAC5C,IAAMgC,EAAejC,EAAMW,MAAMuB,KAAI,SAACF,GAAD,OACnCA,EAAE5B,eAAiBrD,EAAOpB,QAAQyE,aAAeyB,EAAWG,KAE9D,MAAO,CAAErB,MAAM,aAAKsB,IAKtB,OAHAJ,EAAWC,GACF1B,aAAerD,EAAOpB,QAAQyE,aACvCyB,EAAWjB,GAAQiB,EAAU9E,EAAOpB,QAAQsE,WACrC,6BAAKD,GAAZ,IAAmBW,MAAM,GAAD,oBAAMX,EAAMW,OAAZ,CAAmBkB,MAC7C,ICjGuB,cDkGrB,OAAO,6BAAK7B,GAAZ,IAAmBW,MAAO5D,EAAOpB,UACnC,IClGuB,cDmGrB,GACEqE,EAAMW,MAAMoB,MAAK,SAACC,GAAD,OAAOA,EAAE5B,eAAiBrD,EAAOpB,QAAQyE,gBAC1D,CACAyB,EAAW7B,EAAMW,MAAMoB,MACrB,SAACC,GAAD,OAAOA,EAAE5B,eAAiBrD,EAAOpB,QAAQyE,gBAE3CyB,EAAWF,GAAWE,EAAU9E,EAAOpB,QAAQsE,WAC/C,IAAMgC,EAAejC,EAAMW,MAAMuB,KAAI,SAACF,GAAD,OACnCA,EAAE5B,eAAiBrD,EAAOpB,QAAQyE,aAAeyB,EAAWG,KAE9D,OAAO,6BAAKhC,GAAZ,IAAmBW,MAAM,aAAKsB,KAEhC,OAAOjC,EACT,QACE,OAAOA,IEvKPL,GAA4B,CAChCwC,QAAS,IAgCIC,GA7BO,WAGH,IACbC,EAHJrC,EAEgB,uDAFRL,GACR5C,EACgB,uCAGhB,OAAQA,EAAOnB,MACb,ICAwB,eDCtB,OAAO,6BAAKoE,GAAZ,IAAmBmC,QAASpF,EAAOpB,UACrC,ICJsB,aDKpB,OAAO,6BAAKqE,GAAZ,IAAmBmC,QAAQ,GAAD,oBAAMnC,EAAMmC,SAAZ,CAAqBpF,EAAOpB,YACxD,ICLyB,gBDMvB,GAAIqE,EAAMmC,QAAQJ,MAAK,SAACO,GAAD,OAAOA,EAAEpC,KAAOnD,EAAOpB,QAAQuE,MAAK,EACzDmC,EAAarC,EAAMmC,QAAQJ,MAAK,SAACO,GAAD,OAAOA,EAAEpC,KAAOnD,EAAOpB,QAAQuE,OACpDqC,WAAaxF,EAAOpB,QAAQ4G,WACvCF,EAAWjC,aAAerD,EAAOpB,QAAQyE,aACzC,IAAMoC,EAAiBxC,EAAMmC,QAAQD,KAAI,SAACI,GAAD,OACvCA,EAAEpC,KAAOnD,EAAOpB,QAAQuE,GAAKmC,EAAaC,KAE5C,OAAO,6BAAKtC,GAAZ,IAAmBmC,QAAQ,aAAKK,KAElC,OAAOxC,EACT,ICdyB,gBDevB,OAAO,6BAAKA,GAAZ,IAAmBmC,QAASpF,EAAOpB,UACrC,QACE,OAAOqE,IErCPL,GAA0B,CAC9B3B,KAAM,MAgBOyE,GAbK,WAGH,IAFfzC,EAEc,uDAFNL,GACR5C,EACc,uCACd,OAAQA,EAAOnB,MACb,IZOiB,QYNf,OAAO,6BAAKoE,GAAZ,IAAmBhC,KAAMjB,EAAOpB,UAClC,IZMkB,SYLhB,OAAO,6BAAKqE,GAAZ,IAAmBhC,KAAM,OAC3B,QACE,OAAOgC,ICNPL,GAA0B,CAC9B+C,MAAO,IA+BMC,GA5BK,WAGH,IACXC,EAHJ5C,EAEc,uDAFNL,GACR5C,EACc,uCAGd,OAAQA,EAAOnB,MACb,ICJsB,aDKpB,OAAO,6BAAKoE,GAAZ,IAAmB0C,MAAO3F,EAAOpB,UACnC,ICRoB,WDSlB,OAAO,6BAAKqE,GAAZ,IAAmB0C,MAAM,GAAD,oBAAM1C,EAAM0C,OAAZ,CAAmB3F,EAAOpB,YACpD,ICTuB,cDUrB,GAAIqE,EAAM0C,MAAMX,MAAK,SAACO,GAAD,OAAOA,EAAEpC,KAAOnD,EAAOpB,QAAQuE,MAAK,EACvD0C,EAAW5C,EAAM0C,MAAMX,MAAK,SAACO,GAAD,OAAOA,EAAEpC,KAAOnD,EAAOpB,QAAQuE,OAClD2C,SAAW9F,EAAOpB,QAAQkH,SACnC,IAAML,EAAiBxC,EAAM0C,MAAMR,KAAI,SAACI,GAAD,OACrCA,EAAEpC,KAAOnD,EAAOpB,QAAQuE,GAAK0C,EAAWN,KAE1C,OAAO,6BAAKtC,GAAZ,IAAmB0C,MAAM,aAAKF,KAEhC,OAAOxC,EACT,ICjBuB,cDkBrB,OAAO,6BAAKA,GAAZ,IAAmB0C,MAAO,KAC5B,QACE,OAAO1C,IEpCPL,GAA0B,CAC9BmD,KAAM,CACJ5C,GAAI,GACJ6C,SAAU,GACVC,SAAU,GACVC,WAAY,GACZC,YAAa,GACbC,SAAU,GACVC,KAAM,KAkBKC,GAdK,WAGH,IAFfrD,EAEc,uDAFNL,GACR5C,EACc,uCACd,OAAQA,EAAOnB,MACb,ICSsB,aDPtB,ICIoB,WDHlB,OAAO,6BAAKoE,GAAZ,IAAmB8C,KAAM/F,EAAOpB,UAClC,QACE,OAAOqE,IEfPL,GAA4B,CAChC2D,OAAQ,IAqBKC,GAlBO,WAGH,IACbC,EAHJxD,EAEgB,uDAFRL,GACR5C,EACgB,uCAEhB,OAAQA,EAAOnB,MACb,ICZyB,gBDavB,OAAO,6BAAKoE,GAAZ,IAAmBsD,OAAO,GAAD,oBAAMtD,EAAMsD,QAAZ,CAAoBvG,EAAOpB,YACtD,ICb8B,qBDe5B,OADA6H,EAAYxD,EAAMsD,OAAO9C,QAAO,SAAC8B,GAAD,OAAOA,EAAEpC,KAAOnD,EAAOpB,QAAQuE,MACxD,6BAAKF,GAAZ,IAAmBsD,OAAQE,IAC7B,ICfwB,eDgBtB,OAAO,6BAAKxD,GAAZ,IAAmBsD,OAAQvG,EAAOpB,UACpC,QACE,OAAOqE,IEzBPL,GAA4B,CAChC8D,MAAO,IAeMC,GAZO,WAGH,IAFjB1D,EAEgB,uDAFRL,GACR5C,EACgB,uCAChB,OAAQA,EAAOnB,MACb,ICDqB,YDEnB,OAAO,6BAAKoE,GAAZ,IAAmByD,MAAO1G,EAAOpB,UACnC,QACE,OAAOqE,IEHPL,GAA2B,CAC/BgE,MAAO,GAgCMC,GA7BM,WAGH,IACZC,EAHJ7D,EAEe,uDAFPL,GACR5C,EACe,uCAEf,OAAQA,EAAOnB,MACb,ICnBmB,UDqBjB,OADAiI,EAAW7D,EAAM2D,MAAQ,EAClB,6BAAK3D,GAAZ,IAAmB2D,MAAOE,IAC5B,ICrBmB,UDuBjB,OADAA,EAAW7D,EAAM2D,MAAQ,EAClB,6BAAK3D,GAAZ,IAAmB2D,MAAOE,IAC5B,ICvBqB,YDyBnB,OADAA,EAAW7D,EAAM2D,MAAQ,EAClB,6BAAK3D,GAAZ,IAAmB2D,MAAOE,IAC5B,ICzBsB,aD2BpB,OADAA,EAAW7D,EAAM2D,MAAQ,EAClB,6BAAK3D,GAAZ,IAAmB2D,MAAOE,IAC5B,IC3BsB,aD6BpB,OADAA,EAAW7D,EAAM2D,MAAQ,EAClB,6BAAK3D,GAAZ,IAAmB2D,MAAOE,IAC5B,IC7BwB,eD+BtB,OADAA,EAAW7D,EAAM2D,MAAQ,EAClB,6BAAK3D,GAAZ,IAAmB2D,MAAOE,IAC5B,QACE,OAAO7D,IE3BP8D,GAAcC,2BAAgB,CAClCnE,OAAQC,GACRsC,QAASC,GACTzB,MAAOiB,GACP5D,KAAMyE,GACNC,MAAOC,GACPG,KAAMO,GACNC,OAAQC,GACRS,OAAQN,GACRC,MAAOC,KAGIK,GAAW,SAACjE,GACvB,OAAOA,EAAMJ,OAAOA,OAAO,IAGhBsE,GAAY,SAAClE,GACxB,OAAOA,EAAMJ,OAAOA,QAGTuE,GAAa,SAACnE,GACzB,OAAOA,EAAMmC,QAAQA,SAGViC,GAAW,SAACpE,GACvB,OAAOA,EAAMW,MAAMA,OAGR0D,GAAU,SAACrE,GACtB,OAAOA,EAAMhC,KAAKA,MAGPsG,GAAW,SAACtE,GACvB,OAAOA,EAAM0C,MAAMA,OAWR6B,GAAW,SAACvE,GAAqB,IAAD,EAC3C,iBAAOA,EAAMhC,KAAKA,YAAlB,aAAO,EAAiBwG,OAWbC,GAAW,SAACzE,GACvB,OAAOA,EAAM2D,MAAMA,OAUNe,GALDC,uBACZb,GACAc,+BAAoBC,2BAAgBC,QCrEzBC,GAAgB,SAACP,GAE5B,MAAO,CAAEQ,QAAS,CAAEC,cADC,iBAAaT,MC0CrB,IAAEU,OA3CL,uCAAG,4BAAA3F,EAAA,0DAET8E,GAAQK,GAAMS,YAFL,uBAGXC,EAASL,GAAcR,GAASG,GAAMS,aAH3B,SAIG3F,IAAM6F,IANR,aAMqBD,GAJtB,uCAI+B1F,MAJ/B,gCAON,IAPM,2CAAH,qDA2Ca4F,eAjCL,uCAAG,WAAOlC,GAAP,eAAA7D,EAAA,0DAEjB8E,GAAQK,GAAMS,YAFG,uBAGnBC,EAASL,GAAcR,GAASG,GAAMS,aAHnB,SAIL3F,IAAM6F,IAAN,UAhBF,aAgBE,YAAwBjC,EAAxB,UAAsCgC,GAJjC,uCAI0C1F,MAJ1C,gCAMd,IANc,2CAAH,sDAiCqB6F,WAxBzB,uCAAG,WAAOnC,GAAP,eAAA7D,EAAA,0DAEb8E,GAAQK,GAAMS,YAFD,uBAGfC,EAASL,GAAcR,GAASG,GAAMS,aAHvB,SAID3F,IAAMC,KAzBR,aAyBsB2D,EAAMgC,GAJzB,uCAIkC1F,MAJlC,qCAMV8F,GANU,2CAAH,sDAwBqCC,WAfrC,uCAAG,WAAOrC,GAAP,eAAA7D,EAAA,0DAEb8E,GAAQK,GAAMS,YAFD,uBAGfC,EAASL,GAAcR,GAASG,GAAMS,aAHvB,SAKP3F,IAAMkG,IAAN,UAnCI,aAmCJ,YACUtC,EAAKlD,IACnB,CAAE2C,SAAUO,EAAKP,UACjBuC,GARW,uCAUb1F,MAVa,qCAYV8F,GAZU,2CAAH,uDCrBHG,GAKR,SAACC,GACJ,8CAAO,WAAOC,GAAP,iBAAAtG,EAAA,sEACiBuG,GAAYP,WAAWK,GADxC,UACCjK,EADD,6BAEe,IAAIoK,MAAM,yBAFzB,cAGCC,EAA+B,CACnCpK,KZVkB,WYWlBD,WALG,kBAOEkK,EAASG,IAPX,2CAAP,uDCOa,IAAEd,OArBL,uCAAG,4BAAA3F,EAAA,0DAET8E,GAAQK,GAAMS,YAFL,uBAGXC,EAASL,GAAcR,GAASG,GAAMS,aAH3B,SAIG3F,IAAM6F,IANR,eAMqBD,GAJtB,uCAI+B1F,MAJ/B,gCAMN,IANM,2CAAH,qDAqBauG,aAZP,uCAAG,WACnBC,GADmB,eAAA3G,EAAA,0DAIf8E,GAAQK,GAAMS,YAJC,uBAKjBC,EAASL,GAAcR,GAASG,GAAMS,aALrB,SAMH3F,IAAMC,KAjBR,eAiBsByG,EAAQd,GANzB,uCAMkC1F,MANlC,qCASZ8F,GATY,2CAAH,uDCFLW,GAKR,SAACC,GACJ,8CAAO,WAAOP,GAAP,iBAAAtG,EAAA,sEACiB8G,GAAcJ,aAAaG,GAD5C,UACCzK,EADD,6BAEe,IAAIoK,MAAM,2BAFzB,cAGCO,EAAmC,CACvC1K,KjBLoB,aiBMpBD,WALG,kBAOEkK,EAASS,IAPX,2CAAP,uDAkBWC,GAAe,SAAC5K,GAC3B,MAAO,CACLC,KjBpByB,gBiBqBzBD,YAmBS6K,GAAe,WAA6B,IAA5B7K,EAA2B,uDAAP,GAC/C,MAAO,CACLC,KjBxCyB,gBiByCzBD,YC7DS8K,GAAiB,SAAChD,GAC7B,MAAO,CACL7H,KTMqB,YSLrBD,QAAS8H,ICGPyB,GAAM,uCAAG,4BAAA3F,EAAA,0DAET8E,GAAQK,GAAMS,YAFL,uBAGXC,EAASL,GAAcR,GAASG,GAAMS,aAH3B,SAIG3F,IAAM6F,IANR,aAMqBD,GAJtB,uCAI+B1F,MAJ/B,gCAMN,IANM,2CAAH,qDASNgH,GAAc,uCAAG,WAAO5D,GAAP,eAAAvD,EAAA,0DAEjB8E,GAAQK,GAAMS,YAFG,uBAGnBC,EAASL,GAAcR,GAASG,GAAMS,aAHnB,SAIL3F,IAAM6F,IAAN,UAfF,aAeE,YAAwBvC,EAAxB,UAAsCsC,GAJjC,uCAI0C1F,MAJ1C,gCAMd,IANc,2CAAH,sDAmBL,IAAEwF,UAAQyB,WAVT,uCAAG,WAAO7D,GAAP,eAAAvD,EAAA,0DAEb8E,GAAQK,GAAMS,YAFD,uBAGfC,EAASL,GAAcR,GAASG,GAAMS,aAHvB,SAID3F,IAAMC,KAxBR,aAwBsBqD,EAAMsC,GAJzB,uCAIkC1F,MAJlC,qCAOV8F,GAPU,2CAAH,sDAUqBkB,mBC/BxBE,GAKR,SAACC,GACJ,8CAAO,WAAOhB,GAAP,iBAAAtG,EAAA,sEACiBuH,GAAYH,WAAWE,GADxC,UACClL,EADD,6BAEe,IAAIoK,MAAM,yBAFzB,cAGCgB,EAA+B,CACnCnL,KfUkB,WeTlBD,WALG,kBAOEkK,EAASkB,IAPX,2CAAP,uDCRWC,GAAc,SAACrL,GAC1B,MAAO,CACLC,KdEyB,gBcDzBD,YAWSsL,GAAc,WAA6B,IAA5BtL,EAA2B,uDAAP,GAC9C,MAAO,CACLC,KdVwB,ecWxBD,YClBSiF,GAAU,SAAClB,GACtB,MAAO,CACL9D,KxB0DoB,WwBzDpBD,QAAS+D,IAIAwH,GAAa,WAA2B,IAA1BvL,EAAyB,uDAAP,GAC3C,MAAO,CACLC,KxBoDuB,cwBnDvBD,YAISgG,GAAa,SAACjC,GACzB,MAAO,CACL9D,KxB8CuB,cwB7CvBD,QAAS+D,I,6ICmFEyH,GAnFgB,WAC7B,IAAMtB,EAAWuB,cACjB,OACE,kBAACC,GAAA,EAAD,KACE,kBAAC,KAAD,CACErK,QAAS,kBAAM6I,EAASY,GCxBN,UDyBlBa,UAAWC,IACXjG,GAAG,IACHkG,QAAM,GAEN,kBAACC,GAAA,EAAD,KACE,kBAAC,KAAD,OAEF,kBAACC,GAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAY5I,QAAQ,SAASE,QAAQ,QAAQ9C,MAAM,iBCjCnC,UDsCpB,kBAAC,KAAD,CACEa,QAAS,kBAAM6I,EAASY,GCtCH,aDuCrBa,UAAWC,IACXjG,GAAG,UACHkG,QAAM,GAEN,kBAACC,GAAA,EAAD,KACE,kBAAC,KAAD,OAEF,kBAACC,GAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAY5I,QAAQ,SAASE,QAAQ,QAAQ9C,MAAM,iBC/ChC,aDoDvB,kBAAC,KAAD,CACEa,QAAS,kBAAM6I,EAASY,GCpDL,WDqDnBa,UAAWC,IACXjG,GAAG,QACHkG,QAAM,GAEN,kBAACC,GAAA,EAAD,KACE,kBAAC,KAAD,OAEF,kBAACC,GAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAY5I,QAAQ,SAASE,QAAQ,QAAQ9C,MAAM,iBC7DlC,WDkErB,kBAAC,KAAD,CACEa,QAAS,kBAAM6I,EAASY,GCjEJ,YDkEpBa,UAAWC,IACXjG,GAAG,UACHkG,QAAM,GAEN,kBAACC,GAAA,EAAD,KACE,kBAAC,KAAD,OAEF,kBAACC,GAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAY5I,QAAQ,SAASE,QAAQ,QAAQ9C,MAAM,iBC1EjC,YD+EtB,kBAAC,KAAD,CACEa,QAAS,kBAAM6I,EAASY,GCjFL,WDkFnBa,UAAWC,IACXjG,GAAG,cACHkG,QAAM,GAEN,kBAACC,GAAA,EAAD,KACE,kBAAC,KAAD,OAEF,kBAACC,GAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAY5I,QAAQ,SAASE,QAAQ,QAAQ9C,MAAM,iBC1FlC,aCkFZgL,GApEgB,WAC7B,IAAMtB,EAAWuB,cACjB,OACE,kBAACC,GAAA,EAAD,KACE,kBAAC,KAAD,CACErK,QAAS,kBAAM6I,EAASY,GDtBN,UCuBlBa,UAAWC,IACXjG,GAAG,IACHkG,QAAM,GAEN,kBAACC,GAAA,EAAD,KACE,kBAAC,KAAD,OAEF,kBAACC,GAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAY5I,QAAQ,SAASE,QAAQ,QAAQ9C,MAAM,iBD/BnC,UCoCpB,kBAAC,KAAD,CACEa,QAAS,kBAAM6I,EAASY,GDpCH,aCqCrBa,UAAWC,IACXjG,GAAG,mBACHkG,QAAM,GAEN,kBAACC,GAAA,EAAD,KACE,kBAAC,KAAD,OAEF,kBAACC,GAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAY5I,QAAQ,SAASE,QAAQ,QAAQ9C,MAAM,iBD7ChC,aCkDvB,kBAAC,KAAD,CACEa,QAAS,kBAAM6I,EAASY,GDhDJ,YCiDpBa,UAAWC,IACXjG,GAAG,mBACHkG,QAAM,GAEN,kBAACC,GAAA,EAAD,KACE,kBAAC,KAAD,OAEF,kBAACC,GAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAY5I,QAAQ,SAASE,QAAQ,QAAQ9C,MAAM,iBDzDjC,YC8DtB,kBAAC,KAAD,CACEa,QAAS,kBAAM6I,EAASY,GDhEL,WCiEnBa,UAAWC,IACXjG,GAAG,kBACHkG,QAAM,GAEN,kBAACC,GAAA,EAAD,KACE,kBAAC,KAAD,OAEF,kBAACC,GAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAY5I,QAAQ,SAASE,QAAQ,QAAQ9C,MAAM,iBDzElC,aEwBrBN,GAAYC,aAAW,SAACC,GAAD,OAC3BC,YAAa,CACX4L,KAAM,CACJC,SAAU,GAEZC,WAAY,CACVC,YAAahM,EAAMiM,QAAQ,IAE7BvE,MAAO,CACLoE,SAAU,GAEZI,KAAM,CACJC,MAAO,KAETC,SAAU,CACRD,MAAO,QAETE,OAAQ,CACNjM,MAAOkM,IAAO,KACdH,MAAOnM,EAAMiM,QAAQ,GACrBM,OAAQvM,EAAMiM,QAAQ,GACtBO,gBAAiBC,IAAK,KACtBC,UAAW,2BAEbC,WAAY,CACVxM,SAAU,IAEZyM,OAAQ,CACNC,aAAc,EACdL,gBAAiBxM,EAAMY,QAAQC,QAAQiM,WAsH9BC,GA5GiB,SAAC,GAA+B,IAA7BC,EAA4B,EAA5BA,SAAUC,EAAkB,EAAlBA,YACrCnD,EAAWuB,cACX6B,EAAUC,cACV5M,EAAUT,KAH6C,EAIzBwB,IAAMC,UAAkB,GAJC,mBAItD6L,EAJsD,KAI1CC,EAJ0C,OAKzB/L,IAAMC,UAAkB,GALC,mBAKtD+L,EALsD,KAK1CC,EAL0C,KAUvDC,EAAc,WAClBD,GAAc,IAEVE,EAAW,uCAAG,WAAOC,GAAP,eAAAlK,EAAA,6DAClBgK,IADkB,kBAGGG,GAAarK,MAAMoK,GAHtB,OAGVzL,EAHU,OAIhB6H,EAASnK,EAAUsC,IACnB2L,OAAOC,aAAaC,QAAQ,qBAAsBC,KAAKC,UAAU/L,IACjEgL,GAAY,GACZnD,EAASoB,MACTpB,EAASqB,MACTrB,EXxBJ,uCAAO,WAAOA,GAAP,eAAAtG,EAAA,sEACiBuG,GAAYZ,SAD7B,OACCvJ,EADD,OAELkK,EAAS,CACPjK,KZlDoB,aYmDpBD,YAJG,2CAAP,uDWyBIkK,ETtCJ,uCAAO,WAAOA,GAAP,eAAAtG,EAAA,sEACiB8G,GAAcnB,SAD/B,OACCvJ,EADD,OAELkK,EAAS,CACPjK,KjBjCsB,eiBkCtBD,YAJG,2CAAP,uDSuCIkK,EAASY,GAAe,SACxBwC,EAAQe,KAAK,KAZG,kDAchBC,QAAQC,MAAM,gCAdE,0DAAH,sDA8BXC,EAAe,SAACvM,GAAD,OAAmB,SACtCE,IAGiB,YAAfA,EAAMlC,MACkC,QAAtCkC,EAA8BsM,KACS,UAAtCtM,EAA8BsM,MAInChB,EAAcxL,KAchB,OACE,yBAAKnB,UAAWH,EAAQsL,MACtB,kBAACyC,EAAA,EAAD,CAAQC,SAAS,SAAS7N,UAAWH,EAAQqM,QAC3C,kBAAC4B,EAAA,EAAD,KACE,kBAAChO,EAAA,EAAD,CACEC,KAAK,QACLC,UAAWH,EAAQwL,WACnB3L,MAAM,UACNa,QAASmN,GAAa,IAEtB,kBAAC,IAAD,OAEF,kBAACxC,EAAA,EAAD,CAAY5I,QAAQ,MACF2F,GAAMS,WdhFnBnB,OAAOP,OckFZ,kBAACkE,EAAA,EAAD,CAAY5I,QAAQ,KAAKtC,UAAWH,EAAQmH,QAC3CsF,EACC,kBAACxM,EAAA,EAAD,CAAYS,QAAS,kBArD7B6I,EtC9FK,CACLjK,KCekB,SDdlBD,QsC4FoB,OACpBgO,OAAOC,aAAaY,WAAW,sBAC/BxB,GAAY,GACZnD,EN7EK,CACLjK,KfIsB,aeHtBD,QAAS,CACPuE,GAAI,GACJ6C,SAAU,GACVC,SAAU,GACVC,WAAY,GACZC,YAAa,GACbC,SAAU,GACVC,KAAM,MMqERyC,EAASW,MACTX,EAASoB,MACTpB,EAASqB,MACTrB,EX9BK,CACLjK,KZzDuB,gBuBuFvBiK,EAASY,GAAe,cACxBwC,EAAQe,KAAK,OA6CH,kBAACS,EAAA,EAAD,CAAQhO,UAAWH,EAAQ8L,QACzB,kBAAC,IAAD,CAAsB3L,UAAWH,EAAQoM,eAI7C,kBAACgC,EAAA,EAAD,CAAQvO,MAAM,UAAUa,QAAS,WAlFzCsM,GAAc,KAkFN,UAKJ,kBAACqB,EAAA,EAAD,CAAQC,OAAO,QAAQhN,KAAMuL,EAAYhM,QAASgN,GAAa,IAtCnE,yBACE1N,UAAWH,EAAQ2L,KACnB4C,KAAK,eACL7N,QAASmN,GAAa,GACtBW,UAAWX,GAAa,IAEvBpB,EAAW,kBAAC,GAAD,MAAmB,kBAACgC,GAAD,SAoC/B,kBAAC,EAAD,CACE7N,UAAWmM,EACXlM,QAASoM,EACTnM,SAAUoM,MClKHwB,GAJQ,WACrB,OAAO,sC,4DCIIC,GAAeC,KAAW,KAC1BC,GAAYC,KAAW,KACvBC,GAAaC,KAAU,KCOvBC,IDNY/C,IAAK,KCMN,SAAC9I,GACvB,MAAO,CACL9D,KlCE0B,iBkCD1BD,QAAS+D,KAIA8L,GAAc,SAAC9L,GAC1B,MAAO,CACL9D,KlCHwB,ekCIxBD,QAAS+D,ICfP7D,GAAYC,YAAW,CAC3B8L,KAAM,CACJ6D,WAAYR,GACZS,OAAQ,EACR9C,aAAc,EACdzM,MAAO,QACPmM,OAAQ,IACRJ,MAAO,OACPyD,QAAS,SACTC,OAAQ,MACR1P,SAAU,GACVuM,UAAW,yCA2CAoD,GAjCsB,SAAC,GAI/B,IAHL5L,EAGI,EAHJA,UACA6L,EAEI,EAFJA,kBACAC,EACI,EADJA,YAEMzP,EAAUT,KACVgK,EAAWuB,cAoBjB,OACE,kBAACsD,EAAA,EAAD,CAAQ1N,QApBU,WAKlB,OAJA8O,GAAkB,GAClBjG,EAAS0F,GAAS,CAAEtL,eACpB4F,EAASjF,GAAQqD,GAASS,GAAMS,cAChC4G,GAAY,GACJ9L,GACN,IlC7Ce,MkC8Cb4F,ECpCC,CACLjK,KpBTmB,YmB6Cf,MACF,IlC/Ce,MkCgDbiK,ECjCC,CACLjK,KpBdmB,YmB+Cf,MACF,IlCjDiB,MkCkDfiK,EC9BC,CACLjK,KpBnBqB,gBmBuDSa,UAAWH,EAAQsL,MAC9C3H,IEnDDpE,GAAYC,YAAW,CAC3B8L,KAAM,CACJ6D,WAAYN,GACZO,OAAQ,EACR9C,aAAc,EACdzM,MAAO,QACPmM,OAAQ,IACRJ,MAAO,OACPyD,QAAS,SACTC,OAAQ,MACR1P,SAAU,GACVuM,UAAW,yCA8BAuD,GApBuB,SAAC,GAIhC,IAHL/L,EAGI,EAHJA,UACA6L,EAEI,EAFJA,kBACAG,EACI,EADJA,eAEM3P,EAAUT,KACVgK,EAAWuB,cAOjB,OACE,kBAACsD,EAAA,EAAD,CAAQ1N,QAPU,WAClB8O,GAAkB,GAClBjG,EAAS0F,GAAS,CAAEtL,eACpB4F,EAASjF,GAAQqD,GAASS,GAAMS,cAChC8G,GAAe,IAGexP,UAAWH,EAAQsL,MAC9C3H,ICpCDpE,GAAYC,YAAW,CAC3B8L,KAAM,CACJ6D,WAAYJ,GACZK,OAAQ,EACR9C,aAAc,EACdzM,MAAO,QACPmM,OAAQ,IACRJ,MAAO,OACPyD,QAAS,SACTC,OAAQ,MACR1P,SAAU,GACVuM,UAAW,yCA8BAyD,GApBqB,SAAC,GAI9B,IAHLjM,EAGI,EAHJA,UACA6L,EAEI,EAFJA,kBACAK,EACI,EADJA,aAEM7P,EAAUT,KACVgK,EAAWuB,cAOjB,OACE,kBAACsD,EAAA,EAAD,CAAQ1N,QAPU,WAClB8O,GAAkB,GAClBjG,EAAS0F,GAAS,CAAEtL,eACpB4F,EAASjF,GAAQqD,GAASS,GAAMS,cAChCgH,GAAa,IAGiB1P,UAAWH,EAAQsL,MAC9C3H,ICxCDpE,GAAYC,aAAW,SAACC,GAAD,OAC3BC,YAAa,CACXU,WAAY,CACVR,SAAU,GACVC,MAAOJ,EAAMY,QAAQC,QAAQC,WAsBpBuP,GAbqB,SAAC,GAA2B,IAAzBN,EAAwB,EAAxBA,kBAC/BxP,EAAUT,KAKhB,OACE,kBAACU,EAAA,EAAD,CAAYS,QALM,WAClB8O,GAAkB,IAIgBtP,KAAK,SACrC,kBAAC,IAAD,CAAoBC,UAAWH,EAAQI,eCoH9B2P,GAlHuB,SAAC,GAKhC,IAJLP,EAII,EAJJA,kBACAC,EAGI,EAHJA,YACAE,EAEI,EAFJA,eACAE,EACI,EADJA,aAEA,OACE,kBAACG,GAAA,EAAD,CAAMC,WAAS,EAACC,UAAU,SAASC,QAAQ,SAASC,WAAW,UAC7D,kBAAC1N,EAAA,EAAD,CACEC,QAAQ,OACR0N,QAAQ,QACRzE,MAAM,OACNI,OAAO,OACPsE,UAAW,GAEX,kBAAC,GAAD,CACE3M,UvC5CW,MuC6CX6L,kBAAmBA,EACnBC,YAAaA,IAEf,kBAAC,GAAD,CACE9L,UvChDW,MuCiDX6L,kBAAmBA,EACnBC,YAAaA,IAEf,kBAAC,GAAD,CACE9L,UvCpDa,MuCqDb6L,kBAAmBA,EACnBC,YAAaA,KAGjB,kBAAC/M,EAAA,EAAD,CACEC,QAAQ,OACR0N,QAAQ,QACRzE,MAAM,OACNI,OAAO,OACPsE,UAAW,GAEX,kBAAC,GAAD,CACE3M,UvChEW,MuCiEX6L,kBAAmBA,EACnBG,eAAgBA,IAElB,kBAAC,GAAD,CACEhM,UvCpEW,MuCqEX6L,kBAAmBA,EACnBG,eAAgBA,IAElB,kBAAC,GAAD,CACEhM,UvCxEa,MuCyEb6L,kBAAmBA,EACnBG,eAAgBA,KAGpB,kBAACjN,EAAA,EAAD,CACEC,QAAQ,OACR0N,QAAQ,QACRzE,MAAM,OACNI,OAAO,OACPsE,UAAW,GAEX,kBAAC,GAAD,CACE3M,UvCpFS,MuCqFT6L,kBAAmBA,EACnBK,aAAcA,IAEhB,kBAAC,GAAD,CACElM,UAAWS,GACXoL,kBAAmBA,EACnBG,eAAgBA,IAElB,kBAAC,GAAD,CACEhM,UvC5FS,MuC6FT6L,kBAAmBA,EACnBK,aAAcA,KAGlB,kBAACnN,EAAA,EAAD,CACEC,QAAQ,OACR0N,QAAQ,QACRzE,MAAM,OACNI,OAAO,OACPsE,UAAW,GAEX,kBAAC,GAAD,CACE3M,UvCxGS,MuCyGT6L,kBAAmBA,EACnBK,aAAcA,IAEhB,kBAAC,GAAD,CACElM,UvC5GS,MuC6GT6L,kBAAmBA,EACnBK,aAAcA,IAEhB,kBAAC,GAAD,CACElM,UvChHS,MuCiHT6L,kBAAmBA,EACnBK,aAAcA,KAGlB,kBAACnN,EAAA,EAAD,CACEC,QAAQ,OACRyN,WAAW,SACXvN,eAAe,SACfwN,QAAQ,QACRzE,MAAM,OACN2E,WAAY,GAEZ,kBAAC,GAAD,CAAYf,kBAAmBA,OCjIjCjQ,GAAYC,YAAW,CAC3B8L,KAAM,CACJ6D,WAAYJ,GACZK,OAAQ,EACR9C,aAAc,EACdzM,MAAO,QACPmM,OAAQ,IACRJ,MAAO,OACPyD,QAAS,SACTC,OAAQ,MACR1P,SAAU,GACVuM,UAAW,yCAuBAqE,GAduB,SAAC,GAAyC,IAAvC1M,EAAsC,EAAtCA,aAAc0L,EAAwB,EAAxBA,kBAC/CxP,EAAUT,KACVgK,EAAWuB,cAKjB,OACE,kBAACsD,EAAA,EAAD,CAAQ1N,QALU,WAClB6I,EPrBK,CACLjK,KlCUsB,akCTtBD,QOmBmB,CAAEyE,kBACrB0L,GAAkB,IAGYrP,UAAWH,EAAQsL,MAC9CxH,IChCDvE,GAAYC,aAAW,SAACC,GAAD,OAC3BC,YAAa,CACX4L,KAAM,CACJ6D,WAAY1P,EAAMY,QAAQoQ,UAAUC,MACpCtB,OAAQ,EACR9C,aAAc,EACdzM,MAAO,QACPmM,OAAQ,IACRJ,MAAO,OACPyD,QAAS,SACTC,OAAQ,MACR1P,SAAU,GACVuM,UAAW,4CAeFwE,GAVe,WAC5B,IAAM3Q,EAAUT,KAEhB,OACE,kBAAC6O,EAAA,EAAD,CAAQwC,UAAQ,EAACzQ,UAAWH,EAAQsL,MAApC,QCmIWuF,GAjJwB,SAAC,GAA2B,IAAzBrB,EAAwB,EAAxBA,kBAAwB,EAClCzO,IAAMC,SAAmB,IADS,mBACzD6E,EADyD,KAChDiL,EADgD,KAWhE,OARA/P,IAAMgQ,WAAU,W1B+CO,IAACrN,E0B9CtBoN,G1B8CsBpN,E0B7CV0E,GAAMS,W1B8CbnF,EAAMsD,OAAOA,Q0B9CYgK,MAC1B,SAAC/N,EAAGgO,GAAJ,OAAUhO,EAAEa,aAAemN,EAAEnN,mBAGhC,IAGD,kBAACkM,GAAA,EAAD,CAAMC,WAAS,EAACC,UAAU,SAASC,QAAQ,SAASC,WAAW,UAC7D,kBAAC1N,EAAA,EAAD,CACEC,QAAQ,OACR0N,QAAQ,QACRzE,MAAM,OACNI,OAAO,OACPsE,UAAW,GAEVzK,EAAQ,IAAMA,EAAQ,GAAG/B,aACxB,kBAAC,GAAD,CACEA,aAAc+B,EAAQ,GAAG/B,aACzB0L,kBAAmBA,IAGrB,kBAAC,GAAD,MAED3J,EAAQ,IAAMA,EAAQ,GAAG/B,aACxB,kBAAC,GAAD,CACEA,aAAc+B,EAAQ,GAAG/B,aACzB0L,kBAAmBA,IAGrB,kBAAC,GAAD,MAED3J,EAAQ,IAAMA,EAAQ,GAAG/B,aACxB,kBAAC,GAAD,CACEA,aAAc+B,EAAQ,GAAG/B,aACzB0L,kBAAmBA,IAGrB,kBAAC,GAAD,OAGJ,kBAAC9M,EAAA,EAAD,CACEC,QAAQ,OACR0N,QAAQ,QACRzE,MAAM,OACNI,OAAO,OACPsE,UAAW,GAEVzK,EAAQ,IAAMA,EAAQ,GAAG/B,aACxB,kBAAC,GAAD,CACEA,aAAc+B,EAAQ,GAAG/B,aACzB0L,kBAAmBA,IAGrB,kBAAC,GAAD,MAED3J,EAAQ,IAAMA,EAAQ,GAAG/B,aACxB,kBAAC,GAAD,CACEA,aAAc+B,EAAQ,GAAG/B,aACzB0L,kBAAmBA,IAGrB,kBAAC,GAAD,MAED3J,EAAQ,IAAMA,EAAQ,GAAG/B,aACxB,kBAAC,GAAD,CACEA,aAAc+B,EAAQ,GAAG/B,aACzB0L,kBAAmBA,IAGrB,kBAAC,GAAD,OAGJ,kBAAC9M,EAAA,EAAD,CACEC,QAAQ,OACR0N,QAAQ,QACRzE,MAAM,OACNI,OAAO,OACPsE,UAAW,GAEVzK,EAAQ,IAAMA,EAAQ,GAAG/B,aACxB,kBAAC,GAAD,CACEA,aAAc+B,EAAQ,GAAG/B,aACzB0L,kBAAmBA,IAGrB,kBAAC,GAAD,MAED3J,EAAQ,IAAMA,EAAQ,GAAG/B,aACxB,kBAAC,GAAD,CACEA,aAAc+B,EAAQ,GAAG/B,aACzB0L,kBAAmBA,IAGrB,kBAAC,GAAD,MAED3J,EAAQ,IAAMA,EAAQ,GAAG/B,aACxB,kBAAC,GAAD,CACEA,aAAc+B,EAAQ,GAAG/B,aACzB0L,kBAAmBA,IAGrB,kBAAC,GAAD,OAGJ,kBAAC9M,EAAA,EAAD,CACEC,QAAQ,OACR0N,QAAQ,QACRzE,MAAM,OACNI,OAAO,OACPsE,UAAW,GAEVzK,EAAQ,IAAMA,EAAQ,GAAG/B,aACxB,kBAAC,GAAD,CACEA,aAAc+B,EAAQ,GAAG/B,aACzB0L,kBAAmBA,IAGrB,kBAAC,GAAD,MAED3J,EAAQ,KAAOA,EAAQ,IAAI/B,aAC1B,kBAAC,GAAD,CACEA,aAAc+B,EAAQ,IAAI/B,aAC1B0L,kBAAmBA,IAGrB,kBAAC,GAAD,MAED3J,EAAQ,KAAOA,EAAQ,IAAI/B,aAC1B,kBAAC,GAAD,CACEA,aAAc+B,EAAQ,IAAI/B,aAC1B0L,kBAAmBA,IAGrB,kBAAC,GAAD,S,wCC/IJjQ,GAAYC,aAAW,SAACC,GAAD,OAC3BC,YAAa,CACXwR,YAAa,CACXtF,MAAO,aA4CEuF,GAlCqB,SAAC,GAAuB,IAArB/K,EAAoB,EAApBA,MAAOgL,EAAa,EAAbA,OACtCpR,EAAUT,KADyC,EAEjCwB,IAAMC,SAAqB,IAFM,mBAElD8F,EAFkD,KAE5CuK,EAF4C,KAkBzD,OACE,kBAACC,GAAA,EAAD,CAAa7O,QAAQ,WAAWtC,UAAWH,EAAQkR,aACjD,kBAACK,GAAA,EAAD,aACA,kBAACC,GAAA,EAAD,CACEC,MAAM,OACNC,QAAQ,aACR9N,GAAG,OACHvB,MAAOyE,EACP3E,SAtBmB,SAACX,GACxB,IAAMmQ,EAASnQ,EAAMY,OAAOC,MAC5BgP,EAAQM,GACRP,EAAOO,KAqBMvL,EAjBAR,KAAI,SAACgM,GAAD,OACf,kBAACC,GAAA,EAAD,CAAU/D,IAAK8D,EAAKhO,GAAIvB,MAAOuP,EAAKhO,IACjCgO,EAAKrL,gBC8HCuL,GA5IwB,SAAC,GAAsC,IAApClR,EAAmC,EAAnCA,UAAWC,EAAwB,EAAxBA,QAASC,EAAe,EAAfA,SAAe,EAC3CC,IAAMC,SAAiB,IADoB,mBACpEyF,EADoE,KAC1DsL,EAD0D,OAE3ChR,IAAMC,SAAiB,IAFoB,mBAEpE0F,EAFoE,KAE1DsL,EAF0D,OAGvCjR,IAAMC,SAAiB,IAHgB,mBAGpE2F,EAHoE,KAGxDsL,EAHwD,OAIrClR,IAAMC,SAAiB,IAJc,mBAIpE4F,EAJoE,KAIvDsL,EAJuD,OAK3CnR,IAAMC,SAAiB,IALoB,mBAKpE6F,EALoE,KAK1DsL,EAL0D,OAMnCpR,IAAMC,SAAqB,IANQ,mBAMpEoR,EANoE,KAMtDC,EANsD,KAwD3E,OACE,6BACE,kBAAChR,EAAA,EAAD,CAAQC,KAAMV,EAAWC,QAASA,GAChC,kBAACU,EAAA,EAAD,KACE,0BAAMT,SApDO,SAACU,GACpBA,EAAMC,iBACN,IAAM+E,EAAO,CACXC,WACAC,WACAC,aACAC,cACAC,WACAC,KAAMsL,EACNpL,OAAQ,IAEV+K,EAAY,IACZC,EAAY,IACZC,EAAc,IACdC,EAAe,IACfC,EAAY,IAEZrR,EAAS0F,IAmC2B7E,YAAU,EAACC,aAAa,OACpD,kBAACC,EAAA,EAAD,CACEC,WAAW,EACXC,WAAS,EACTC,MAAO,CAAEC,aAAc,IACvBC,KAAK,WACLC,SAtCiB,SAACX,GAC5BuQ,EAAYvQ,EAAMY,OAAOC,QAsCfC,YAAY,YACZC,UAAU,EACVC,KAAK,QACLlD,KAAK,OACL+C,MAAOoE,EACPhE,QAAQ,aAEV,kBAACZ,EAAA,EAAD,CACEE,WAAS,EACTC,MAAO,CAAEC,aAAc,IACvBC,KAAK,WACLC,SA9CiB,SAACX,GAC5BwQ,EAAYxQ,EAAMY,OAAOC,QA8CfC,YAAY,YACZC,UAAU,EACVC,KAAK,QACLH,MAAOqE,EACPjE,QAAQ,aAEV,kBAACZ,EAAA,EAAD,CACEE,WAAS,EACTC,MAAO,CAAEC,aAAc,IACvBC,KAAK,aACLC,SArDmB,SAC7BX,GAEAyQ,EAAczQ,EAAMY,OAAOC,QAmDjBC,YAAY,cACZC,UAAU,EACVC,KAAK,QACLH,MAAOsE,EACPlE,QAAQ,aAEV,kBAACZ,EAAA,EAAD,CACEE,WAAS,EACTC,MAAO,CAAEC,aAAc,IACvBC,KAAK,WACLC,SA1DiB,SAACX,GAC5B2Q,EAAY3Q,EAAMY,OAAOC,QA0DfC,YAAY,YACZC,UAAU,EACVC,KAAK,QACLH,MAAOwE,EACPpE,QAAQ,aAEV,kBAACZ,EAAA,EAAD,CACEE,WAAS,EACTC,MAAO,CAAEC,aAAc,IACvBC,KAAK,cACLC,SAjEoB,SAC9BX,GAEA0Q,EAAe1Q,EAAMY,OAAOC,QA+DlBC,YAAY,cACZC,UAAU,EACVC,KAAK,QACLH,MAAOuE,EACPnE,QAAQ,aAEV,kBAACC,EAAA,EAAD,KACE,kBAAC,GAAD,CACE0D,MAAO4B,GAASI,GAAMS,YACtBuI,OArEW,SAAC/O,GACxBgQ,EAAgBhQ,OAuER,kBAACK,EAAA,EAAD,CACEC,QAAQ,OACRC,cAAc,MACdC,eAAe,gBACfC,GAAI,GAEJ,kBAAC,EAAD,MACA,kBAAC,EAAD,CAAcrC,OAAQI,UC3HrB,IAAE+H,OAnBL,uCAAG,4BAAA3F,EAAA,0DAET8E,GAAQK,GAAMS,YAFL,uBAGXC,EAASL,GAAcR,GAASG,GAAMS,aAH3B,SAIG3F,IAAM6F,IANR,aAMqBD,GAJtB,uCAI+B1F,MAJ/B,gCAMN,IANM,2CAAH,qDAmBakP,WAVT,uCAAG,WAAO/N,GAAP,eAAAtB,EAAA,0DAEb8E,GAAQK,GAAMS,YAFD,uBAGfC,EAASL,GAAcR,GAASG,GAAMS,aAHvB,SAID3F,IAAMC,KAfR,aAesBoB,EAAMuE,GAJzB,uCAIkC1F,MAJlC,qCAOV8F,GAPU,2CAAH,uD,wCCRV3J,GAAYC,aAAW,SAACC,GAAD,OAC3BC,YAAa,CACX4L,KAAM,CACJM,MAAO,QAETV,OAAQ,CACNoF,UAAW7Q,EAAMiM,QAAQ,GACzBD,YAAahM,EAAMiM,QAAQ,IAE7B6G,iBAAkB,CAChBtQ,aAAcxC,EAAMiM,QAAQ,IAE9B8G,eAAgB,CACdnD,QAAS5P,EAAMiM,QAAQ,SAa7B,IAwCe+G,GAxCwB,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,aAClC1S,EAAUT,KAD2C,EAEvBwB,IAAMC,SAAS,GAFQ,mBAEpD2R,EAFoD,KAExCC,EAFwC,KAGrDC,EAVC,CAAC,yBAA0B,gBAAiB,yBAYnD9R,IAAMgQ,WAAU,WACd2B,EAAaC,KACZ,CAACD,EAAcC,IAElB,IAAMG,EAAiB,WACrBF,GAAc,SAACG,GAAD,OAAoBA,EAAiB,MAGrD,OACE,yBAAK5S,UAAWH,EAAQsL,MACtB,kBAAC0H,GAAA,EAAD,CAASL,WAAYA,EAAYM,YAAY,YAC1CJ,EAAMjN,KAAI,SAAC6L,EAAOyB,GAAR,OACT,kBAACC,GAAA,EAAD,CAAMrF,IAAK2D,GACT,kBAAC2B,GAAA,EAAD,KAAY3B,GACZ,kBAAC4B,GAAA,EAAD,KACE,yBAAKlT,UAAWH,EAAQuS,kBACtB,6BACE,kBAACnE,EAAA,EAAD,CACE3L,QAAQ,YACR5C,MAAM,UACNa,QAASoS,EACT3S,UAAWH,EAAQkL,QAElByH,IAAeE,EAAM7O,OAAS,EAAI,KAAO,kB,UCvDxDzE,GAAYC,aAAW,SAACC,GAAD,OAC3BC,YAAa,CACXoM,OAAQ,CACNF,MAAOnM,EAAMiM,QAAQ,GACrBM,OAAQvM,EAAMiM,QAAQ,GACtBO,gBAAiBxM,EAAMY,QAAQoQ,UAAUlQ,MAE3C+S,SAAU,CACRzT,MAAOJ,EAAMY,QAAQC,QAAQC,WAsEpBgT,GA7DqB,SAAC,GAAgB,IAAd3J,EAAa,EAAbA,OAC/B5J,EAAUT,KACVgK,EAAWuB,cAFiC,EAGpB/J,IAAMC,UAAS,GAHK,mBAG3CwS,EAH2C,KAGlCC,EAHkC,KAsBlD,OACE,kBAAC/Q,EAAA,EAAD,CACEgR,YAAY,kBACZtE,OAAQ,EACR9C,aAAc,EACd3J,QAAQ,OACRC,cAAc,MACdgJ,MAAM,OACNwE,WAAW,UAEX,kBAAC1N,EAAA,EAAD,CACEC,QAAQ,OACRE,eAAe,SACf+I,MAAM,MACN+H,WAAY,EACZC,GAAI,GAEJ,kBAACzF,EAAA,EAAD,CAAQhO,UAAWH,EAAQ8L,QACzB,kBAACT,EAAA,EAAD,CAAY5I,QAAQ,MAAMmH,EAAO9F,gBAGrC,kBAACpB,EAAA,EAAD,CAAKC,QAAQ,OAAOE,eAAe,SAAS+Q,GAAI,EAAG9Q,GAAI,GACrD,kBAACuI,EAAA,EAAD,CAAY5I,QAAQ,KAAK5C,MAAM,eAC5B+J,EAAO3D,aAGZ,kBAACvD,EAAA,EAAD,CAAK6I,SAAU,IACf,kBAAC7I,EAAA,EAAD,KACE,kBAACmR,GAAA,EAAD,CACE1T,UAAWH,EAAQsT,SACnBE,QAASA,EACTrR,SAhDa,SAACX,GACpBiS,EAAWjS,EAAMY,OAAOoR,SACxB7F,QAAQmG,IAAI,SAAUlK,EAAO3D,YAC7B0H,QAAQmG,IAAI,WAAYtS,EAAMY,OAAOoR,SACrC,IAAMO,EAAuB,CAC3BnQ,GAAIgG,EAAOhG,GACXE,aAAc8F,EAAO9F,aACrBmC,WAAY2D,EAAO3D,WACnBa,KAAM8C,EAAO9C,MAEXtF,EAAMY,OAAOoR,QACfjK,EAASmB,GAAYqJ,IAErBxK,EtB/BG,CACLjK,KdJ8B,qBcK9BD,QsB6B4B0U,KAoCtBC,WAAY,CAAE,aAAc,yBC1DvBC,GAZqB,SAAC,GAAsB,IAApB7B,EAAmB,EAAnBA,aACrC,OACE,6BACGvK,GAAWO,GAAMS,YACf3E,QAAO,SAAC8B,GAAD,OAAOA,EAAEc,OAASsL,KACzBxM,KAAI,SAACI,GAAD,OACH,kBAAC,GAAD,CAAY8H,IAAK9H,EAAEpC,GAAIgG,OAAQ5D,SCRnCzG,GAAYC,aAAW,SAACC,GAAD,OAC3BC,YAAa,CACXC,OAAQ,CACNC,SAAU,GACVC,MAAOC,IAAK,WAmBHoU,GAVyB,SAAC,GAAc,IAAbzT,EAAY,EAAZA,OAClCT,EAAUT,KAEhB,OACE,kBAACU,EAAA,EAAD,CAAYS,QAASD,EAAQP,KAAK,QAAQZ,KAAK,UAC7C,kBAAC,IAAD,CAAiBa,UAAWH,EAAQL,WCS3BwU,GApB6B,SAAC,GAKtC,IAJLvT,EAII,EAJJA,UACAC,EAGI,EAHJA,QACAC,EAEI,EAFJA,SACAsR,EACI,EADJA,aAMA,OACE,kBAAC/Q,EAAA,EAAD,CAAQC,KAAMV,EAAWC,QAASA,GAChC,kBAACU,EAAA,EAAD,KACE,kBAAC,GAAD,CAAY6Q,aAAcA,IAC1B,kBAAC,GAAD,CAAgB3R,OARL,WACfK,U,oBC0BWsT,GAjCsB,SAAC,GAAuC,IAArCrH,EAAoC,EAApCA,WAAYlM,EAAwB,EAAxBA,QAASC,EAAe,EAAfA,SAS3D,OACE,6BACE,kBAACO,EAAA,EAAD,CACEC,KAAMyL,EACNlM,QAASA,EACTwT,kBAAgB,qBAChBC,mBAAiB,4BAEjB,kBAAC/S,EAAA,EAAD,KACE,kBAACgT,GAAA,EAAD,2BAEF,kBAACC,GAAA,EAAD,KACE,kBAACpG,EAAA,EAAD,CAAQ1N,QAhBK,WACnBI,GAAS,IAe4BjB,MAAM,WAArC,UAGA,kBAACuO,EAAA,EAAD,CAAQ1N,QAvBK,WACnBI,GAAS,IAsB4BjB,MAAM,UAAUiC,WAAS,GAAxD,c,qBChCJvC,GAAYC,aAAW,SAACC,GAAD,OAC3BC,YAAa,CACX+U,WAAY,CACV7U,SAAU,GACVC,MAAOJ,EAAMY,QAAQC,QAAQC,WAmBpBmU,GAVuB,SAAC,GAAgB,IAAdjU,EAAa,EAAbA,OACjCT,EAAUT,KAEhB,OACE,kBAACU,EAAA,EAAD,CAAYC,KAAK,QAAQQ,QAASD,GAChC,kBAAC,KAAD,CAAoBN,UAAWH,EAAQyU,e,qBClBvClV,GAAYC,aAAW,SAACC,GAAD,OAC3BC,YAAa,CACXiV,WAAY,CACVvF,OAAQ,qBAEVwF,SAAU,CACRhV,SAAU,GACVC,MAAOJ,EAAMY,QAAQC,QAAQC,WAmBpBsU,GAVqB,SAAC,GAAgB,IAAdpU,EAAa,EAAbA,OAC/BT,EAAUT,KAEhB,OACE,kBAACU,EAAA,EAAD,CAAYuC,KAAK,QAAQrC,UAAWH,EAAQ2U,WAAYjU,QAASD,GAC/D,kBAAC,KAAD,CAAUN,UAAWH,EAAQ4U,aCoB7BrV,GAAYC,aAAW,SAACC,GAAD,MAAmB,CAC9CqM,OAAQ,CACNF,MAAOnM,EAAMiM,QAAQ,GACrBM,OAAQvM,EAAMiM,QAAQ,IAExBrE,MAAO,CACLyN,YAAarV,EAAMiM,QAAQ,IAE7BqJ,cAAe,CACbD,YAAarV,EAAMiM,QAAQ,IAE7BsJ,YAAa,CACX/I,gBAAiB4C,IAEnBoG,gBAAiB,CACfpV,MAAO,WAETqV,UAAW,CACTjJ,gBAAiB8C,IAEnBoG,cAAe,CACbtV,MAAO,WAETuV,WAAY,CACVnJ,gBAAiB0C,IAEnB0G,eAAgB,CACdxV,MAAO,WAETyV,QAAS,CACPhF,UAAW7Q,EAAMiM,QAAQ,GACzBzJ,aAAcxC,EAAMiM,QAAQ,QAQ1B6J,GAAqC,SAAC,GAAe,IAAb/T,EAAY,EAAZA,MACtCxB,EAAUT,KAChB,OAAQiC,EAAMmC,WACZ,ItDxFiB,MsDiGjB,ItDhGiB,MsDyGjB,ItDxGmB,MsDyGjB,OACE,kBAACwK,EAAA,EAAD,CACEhO,UAAWH,EAAQ8L,OACnB9J,MAAO,CAAEiK,gBAAiB0C,KAE1B,kBAACtD,EAAA,EAAD,CAAY5I,QAAQ,MAAMjB,EAAMsC,eAGtC,ItDhHiB,MsDyHjB,ItDxHiB,MsDiIjB,ItDhImB,MsDyInB,KAAKM,GACH,OACE,kBAAC+J,EAAA,EAAD,CACEhO,UAAWH,EAAQ8L,OACnB9J,MAAO,CAAEiK,gBAAiB4C,KAE1B,kBAACxD,EAAA,EAAD,CAAY5I,QAAQ,MAAMjB,EAAMsC,eAGtC,QACE,OACE,kBAACqK,EAAA,EAAD,CACEhO,UAAWH,EAAQ8L,OACnB9J,MAAO,CAAEiK,gBAAiB8C,KAE1B,kBAAC1D,EAAA,EAAD,CAAY5I,QAAQ,MAAMjB,EAAMsC,iBA+U3B0R,GAzUU,WACvB,ItCnH0B9R,EsCmHpB1D,EAAUT,KACVgK,EAAWuB,cACX6B,EAAUC,cAHa,EAIS7L,IAAMC,UAAkB,GAJjC,mBAItByU,EAJsB,KAITC,EAJS,OAKqB3U,IAAMC,UACtD,GAN2B,mBAKtB2U,EALsB,KAKHC,EALG,OAQmB7U,IAAMC,UACpD,GAT2B,mBAQtB6U,EARsB,KAQJC,EARI,OAWqB/U,IAAMC,UACtD,GAZ2B,mBAWtBwO,EAXsB,KAWHuG,EAXG,OAcOhV,IAAMC,UAAkB,GAd/B,mBActBgV,EAdsB,KAcVC,EAdU,OAeqBlV,IAAMC,UACtD,GAhB2B,mBAetBkV,EAfsB,KAeHC,EAfG,OAkB+BpV,IAAMC,UAEhE,GApB2B,mBAkBtBoV,EAlBsB,KAkBEC,EAlBF,OAqBOtV,IAAMC,UAAkB,GArB/B,mBAqBtB+L,EArBsB,KAqBVC,EArBU,OAsBOjM,IAAMC,UAAS,GAtBtB,mBAsBtBoU,EAtBsB,KAsBVkB,EAtBU,OAuBSvV,IAAMC,UAAS,GAvBxB,mBAuBtBgU,EAvBsB,KAuBTrF,EAvBS,OAwBK5O,IAAMC,UAAS,GAxBpB,mBAwBtBkU,GAxBsB,KAwBXrF,GAxBW,KA0BvB0G,GAAqB,WACzBJ,GAAqB,IAMjBK,GAAa,uCAAG,WAAOrJ,GAAP,SAAAlK,EAAA,sDACpBsT,KACAX,GAAqB,GACrBE,GAAoB,GACpB,IACEvM,EAASe,GAAQ6C,IACjB,MAAOS,GACPD,QAAQC,MAAMA,EAAM6I,SAPF,2CAAH,sDAebxJ,GAAc,WAClBD,GAAc,IA2FhB,OACE,oCACGyI,GAAe,kBAAC,GAAD,CAAe/C,aA7CZ,SAACrQ,GACtB,OAAQA,GACN,KAAK,EACHuT,GAAqB,GACrBE,GAAoB,GACpB,MACF,KAAK,EACHF,GAAqB,GACrBE,GAAoB,GACpB,MACF,KAAK,EACHF,GAAqB,GACrBE,GAAoB,GACpBJ,GAAe,GACfO,GAAc,OAgCfN,GACC,kBAAC,GAAD,CACE/U,UAAWsV,EACXrV,QAAS0V,GACTzV,SAAU0V,KAIbX,GACC,kBAAC,GAAD,CACEjV,UAAWwV,EACXvV,QA5HwB,WAC9BwV,GAA0B,IA4HpBvV,SA/GqB,WAC3BuV,GAA0B,IA+GpBjE,ctC9QkB1O,EsC8QQ0E,GAAMS,WtC7QjCnF,EAAM8C,KAAKA,KAAKM,QsCiRlBkP,GACC,kBAACtT,EAAA,EAAD,CAAKC,QAAQ,OAAOC,cAAc,OAChC,kBAACF,EAAA,EAAD,CACEC,QAAQ,OACRC,cAAc,MACd0N,UAAW,EACXtK,EAAG,EACH4F,MAAM,OAEN,kBAACP,EAAA,EAAD,CAAYqL,MAAM,OAAOjU,QAAQ,KAAK5C,MAAM,aAA5C,UAGA,kBAACwL,EAAA,EAAD,CAAYqL,MAAM,OAAOjU,QAAQ,KAAKtC,UAAWH,EAAQqH,OACtDc,GAASC,GAAMS,cAGpB,kBAACnG,EAAA,EAAD,CACEC,QAAQ,OACR2N,UAAW,EACX1E,MAAM,MACNwE,WAAW,SACXvN,eAAe,UAEf,kBAAC,GAAD,CAAYpC,OAnIS,WAC7BuM,GAAc,QAuIZ,kBAAC2J,GAAA,EAAD,MAECX,IACExG,EACC,kBAAC,GAAD,CAAeA,kBAAmBuG,IAElC,kBAAC,GAAD,CACEvG,kBAAmBuG,EACnBtG,YAAa6G,EACb3G,eAAgBA,EAChBE,aAAcA,MAIpB,kBAAC8G,GAAA,EAAD,CAASxW,UAAWH,EAAQsV,UAE3B9F,GACC5H,GAAUQ,GAAMS,YAAYjD,KAAI,SAACzB,GAAD,OAC9B,kBAACzB,EAAA,EAAD,CACEoL,IAAK3J,EAAIP,GACTjB,QAAQ,OACRC,cAAc,MACdwM,OAAQ,EACRsE,YAAY,kBACZpH,aAAc,EACdzJ,eAAe,gBACf+T,GAAI,EACJ9T,GAAI,GAEJ,kBAACJ,EAAA,EAAD,CACEC,QAAQ,OACR4N,WAAY,EACZsG,cAAe,EACf/T,GAAI,EACJsN,WAAW,UAEX,kBAAC,GAAD,CAAa5O,MAAO2C,IACpB,kBAACkH,EAAA,EAAD,CAAYlL,UAAWH,EAAQ+U,eAC5B5Q,EAAIR,YAGT,kBAACjB,EAAA,EAAD,CACEC,QAAQ,OACR4N,WAAY,EACZsG,cAAe,EACf/T,GAAI,EACJsN,WAAW,SACXvN,eAAe,UAEf,kBAAC,GAAD,CAAcpC,OAAQ,kBAvHR,SAACe,GACzB,IAAMsV,EAAuB,CAC3BnT,UAAWnC,EAAMmC,UACjBG,aAActC,EAAMsC,cAItB,OAFAyF,EAASlE,GAAWyR,IACpBvN,EAAS2F,GAAY1N,EAAMoC,KACnBpC,EAAMmC,WACZ,ItDjSe,MsDkSb4F,EnBtQC,CACLjK,KpBxBsB,euC8RlB,MACF,ItDnSe,MsDoSbiK,EnBnQC,CACLjK,KpB7BsB,euCgSlB,MACF,ItDrSiB,MsDsSfiK,EnBhQC,CACLjK,KpBlCwB,kBuCyYcyX,CAAkB5S,WAKrDwD,GAASS,GAAMS,YACd,kBAACmO,GAAA,EAAD,CACEC,aAAc,CAAEC,SAAU,MAAOC,WAAY,UAC7C7V,KAAM8T,EACNgC,iBAAkB,IAClBvW,QA/LiB,SAACW,EAA8B6V,GACvC,cAAXA,GAGJf,GAAc,KA6LR,kBAAC5T,EAAA,EAAD,CACEvC,UAAWH,EAAQoV,WACnBzS,QAAQ,OACRyM,OAAQ,EACRxD,MAAM,MACN8H,YAAY,QACZpH,aAAc,EACdN,OAAQ,GACRoE,WAAW,SACXvN,eAAe,UAEf,kBAACwI,EAAA,EAAD,CAAY5I,QAAQ,KAAKtC,UAAWH,EAAQqV,gBAA5C,IACI1N,GAASS,GAAMS,YAAY/E,aAAc,IAC1C6D,GAASS,GAAMS,YAAYlF,aAIhC,KAEHgE,GAASS,GAAMS,YACd,kBAACmO,GAAA,EAAD,CACEC,aAAc,CAAEC,SAAU,MAAOC,WAAY,UAC7C7V,KAAM0T,EACNoC,iBAAkB,IAClBvW,QAlNkB,SAACW,EAA8B6V,GACxC,cAAXA,GAGJ1H,GAAe,KAgNT,kBAACjN,EAAA,EAAD,CACEvC,UAAWH,EAAQgV,YACnBrS,QAAQ,OACRyM,OAAQ,EACRxD,MAAM,MACN8H,YAAY,QACZpH,aAAc,EACdN,OAAQ,GACRoE,WAAW,SACXvN,eAAe,UAEf,kBAACwI,EAAA,EAAD,CAAY5I,QAAQ,KAAKtC,UAAWH,EAAQiV,iBAA5C,IACItN,GAASS,GAAMS,YAAY/E,aAAc,IAC1C6D,GAASS,GAAMS,YAAYlF,aAIhC,KAEHgE,GAASS,GAAMS,YACd,kBAACmO,GAAA,EAAD,CACEC,aAAc,CAAEC,SAAU,MAAOC,WAAY,UAC7C7V,KAAM4T,GACNkC,iBAAkB,IAClBvW,QArOgB,SAACW,EAA8B6V,GACtC,cAAXA,GAGJxH,IAAa,KAmOP,kBAACnN,EAAA,EAAD,CACEvC,UAAWH,EAAQkV,UACnBvS,QAAQ,OACRyM,OAAQ,EACRxD,MAAM,MACN8H,YAAY,QACZpH,aAAc,EACdN,OAAQ,GACRoE,WAAW,SACXvN,eAAe,UAEf,kBAACwI,EAAA,EAAD,CAAY5I,QAAQ,KAAKtC,UAAWH,EAAQmV,eAA5C,IACIxN,GAASS,GAAMS,YAAY/E,aAAc,IAC1C6D,GAASS,GAAMS,YAAYlF,aAIhC,KAEJ,kBAAC,GAAD,CACEoJ,WAAYA,EACZlM,QAASoM,GACTnM,SAtPqB,SAACwW,GAGxB,IAAIC,GAFNtK,KACIqK,IAEFxP,GAASM,GAAMS,YAAY2O,SAAQ,SAACjT,GtC/LjB,IAACb,EsCgMlB6T,EAAQ,6BAAQhT,GAAR,IAAciC,MtChMJ9C,EsCgMoB0E,GAAMS,WtC/L3CnF,EAAM8C,KAAKA,KAAK5C,MsCgMjB+J,QAAQmG,IAAI,aAAcyD,GAC1BE,GAAYnF,WAAWiF,MAEzBhO,EAASoB,MACTpB,EAASqB,MACTrB,E9BpOG,CACLjK,KfIsB,aeHtBD,QAAS,CACPuE,GAAI,GACJ6C,SAAU,GACVC,SAAU,GACVC,WAAY,GACZC,YAAa,GACbC,SAAU,GACVC,KAAM,M8B4NNyC,EAASY,GAAe,SACxBwD,QAAQmG,IAAI,QACZnH,EAAQe,KAAK,MAEbC,QAAQmG,IAAI,e,qBC3PZvU,GAAYC,aAAW,SAACC,GAAD,OAC3BC,YAAa,CACXgY,SAAU,CACR9X,SAAU,GACVC,MAAOJ,EAAMY,QAAQC,QAAQC,WAmBpBoX,GAVqB,SAAC,GAAgB,IAAdlX,EAAa,EAAbA,OAC/BT,EAAUT,KAEhB,OACE,kBAACU,EAAA,EAAD,CAAYC,KAAK,QAAQQ,QAASD,GAChC,kBAAC,KAAD,CAAUN,UAAWH,EAAQ0X,aCf7BnY,GAAYC,aAAW,SAACC,GAAD,OAC3BC,YAAa,CACXoM,OAAQ,CACNF,MAAOnM,EAAMiM,QAAQ,GACrBM,OAAQvM,EAAMiM,QAAQ,GACtBO,gBAAiBxM,EAAMY,QAAQoQ,UAAUlQ,WAyChCqX,GA/BmB,SAAC,GAAoC,IAAlChO,EAAiC,EAAjCA,OAAQiO,EAAyB,EAAzBA,mBACrC7X,EAAUT,KAChB,OACE,6BACE,kBAACmD,EAAA,EAAD,CACEgR,YAAY,kBACZtE,OAAQ,EACR9C,aAAc,EACd3J,QAAQ,OACRC,cAAc,MACdgJ,MAAM,QAEN,kBAAClJ,EAAA,EAAD,CAAKC,QAAQ,OAAOE,eAAe,SAAS+I,MAAM,MAAMgI,GAAI,GAC1D,kBAACzF,EAAA,EAAD,CAAQhO,UAAWH,EAAQ8L,QACzB,kBAACT,EAAA,EAAD,CAAY5I,QAAQ,MAAMmH,EAAO9F,gBAGrC,kBAACpB,EAAA,EAAD,CAAKC,QAAQ,OAAOE,eAAe,SAAS+Q,GAAI,GAC9C,kBAACvI,EAAA,EAAD,CAAY5I,QAAQ,KAAK5C,MAAM,eAC5B+J,EAAO3D,aAGZ,kBAACvD,EAAA,EAAD,CAAK6I,SAAU,IACf,kBAAC7I,EAAA,EAAD,KACE,kBAAC,GAAD,CAAYjC,OAAQ,kBAAMoX,EAAmBjO,UC2CxCkO,GA1E0B,SAAC,GAKnC,IAJLlX,EAII,EAJJA,UACAC,EAGI,EAHJA,QACAC,EAEI,EAFJA,SACAsR,EACI,EADJA,aACI,EACgCrR,IAAMC,SAAiB,IADvD,mBACGiF,EADH,KACe8R,EADf,OAEoChX,IAAMC,SAAiB,IAF3D,mBAEG8C,EAFH,KAEiBkU,EAFjB,KAwBJ,OACE,6BACE,kBAAC3W,EAAA,EAAD,CAAQC,KAAMV,EAAWC,QAASA,GAChC,kBAACU,EAAA,EAAD,KACE,0BAAMT,SAxBO,SAACU,GACpBA,EAAMC,iBACN,IAAMmI,EAAsB,CAC1B9F,aAAcmU,OAAOnU,GACrBmC,aACAa,KAAMsL,GAER2F,EAAc,IACdC,EAAgB,IAChBlX,EAAS8I,IAe2BjI,YAAU,EAACC,aAAa,OACpD,kBAACC,EAAA,EAAD,CACEC,WAAW,EACXC,WAAS,EACTC,MAAO,CAAEC,aAAc,IACvBC,KAAK,aACLC,SAlBa,SAACX,GACxBuW,EAAcvW,EAAMY,OAAOC,QAkBjBC,YAAY,cACZC,UAAU,EACVC,KAAK,QACLlD,KAAK,OACL+C,MAAO4D,EACPxD,QAAQ,aAEV,kBAACZ,EAAA,EAAD,CACEE,WAAS,EACTC,MAAO,CAAEC,aAAc,IACvBC,KAAK,eACLC,SA1Be,SAACX,GAC1BwW,EAAgBxW,EAAMY,OAAOC,QA0BnBC,YAAY,gBACZC,UAAU,EACVC,KAAK,QACLH,MAAOyB,EACPrB,QAAQ,aAEV,kBAACC,EAAA,EAAD,CACEC,QAAQ,OACRC,cAAc,MACdC,eAAe,gBACfC,GAAI,GAEJ,kBAAC,EAAD,MACA,kBAAC,EAAD,CAAcrC,OAAQI,UCerBqX,GAhF6B,SAAC,GAKtC,IAJLtX,EAII,EAJJA,UACAC,EAGI,EAHJA,QACAC,EAEI,EAFJA,SACA8I,EACI,EADJA,OACI,EACgC7I,IAAMC,SAAiB,IADvD,mBACGiF,EADH,KACe8R,EADf,OAEoChX,IAAMC,SAAiB,IAF3D,mBAEG8C,EAFH,KAEiBkU,EAFjB,KAIJjX,IAAMgQ,WAAU,WACdgH,EAAcnO,EAAO3D,YACrB+R,EAAgBG,OAAOvO,EAAO9F,iBAC7B,CAAC8F,EAAO3D,WAAY2D,EAAO9F,eAuB9B,OACE,6BACE,kBAACzC,EAAA,EAAD,CAAQC,KAAMV,EAAWC,QAASA,GAChC,kBAACU,EAAA,EAAD,KACE,0BAAMT,SAzBO,SAACU,GACpBA,EAAMC,iBACN,IAAM2W,EAAwB,CAC5BxU,GAAIgG,EAAOhG,GACXqC,aACAa,KAAM8C,EAAO9C,KACbhD,aAAcmU,OAAOnU,IAEvBiU,EAAc,IACdC,EAAgB,IAChBlX,EAASsX,IAe2BzW,YAAU,EAACC,aAAa,OACpD,kBAACC,EAAA,EAAD,CACEC,WAAW,EACXC,WAAS,EACTC,MAAO,CAAEC,aAAc,IACvBC,KAAK,aACLC,SAlBa,SAACX,GACxBuW,EAAcvW,EAAMY,OAAOC,QAkBjBC,YAAY,cACZC,UAAU,EACVC,KAAK,QACLlD,KAAK,OACL+C,MAAO4D,EACPxD,QAAQ,aAEV,kBAACZ,EAAA,EAAD,CACEE,WAAS,EACTC,MAAO,CAAEC,aAAc,IACvBC,KAAK,eACLC,SA1Be,SAACX,GAC1BwW,EAAgBxW,EAAMY,OAAOC,QA0BnBC,YAAY,gBACZC,UAAU,EACVC,KAAK,QACLH,MAAOyB,EACPrB,QAAQ,aAEV,kBAACC,EAAA,EAAD,CACEC,QAAQ,OACRC,cAAc,MACdC,eAAe,gBACfC,GAAI,GAEJ,kBAAC,EAAD,MACA,kBAAC,EAAD,CAAcrC,OAAQI,U,+BClF9BtB,GAAYC,aAAW,SAACC,GAAD,OAC3BC,YAAa,CACX2Y,UAAW,CACT/H,UAAW7Q,EAAMiM,QAAQ,IAE3B4M,KAAM,CACJ1Y,SAAU,GACVyP,QAAS5P,EAAMiM,QAAQ,SAwBd6M,GAf0B,SAAC,GAAgB,IAAd9X,EAAa,EAAbA,OACpCT,EAAUT,KAEhB,OACE,kBAACiZ,GAAA,EAAD,CACErY,UAAWH,EAAQqY,UACnB7V,KAAK,SACL3C,MAAM,UACNa,QAASD,GAET,kBAAC,KAAD,CAAeN,UAAWH,EAAQsY,SCmEzBG,GArFc,WAC3B,IAAMlP,EAAWuB,cADgB,EAEO/J,IAAMC,SAAqB,IAFlC,mBAE1BoR,EAF0B,KAEZC,EAFY,OAGStR,IAAMC,UAAkB,GAHjC,mBAG1B0X,EAH0B,KAGXC,EAHW,OAIe5X,IAAMC,UACpD,GAL+B,mBAI1B4X,EAJ0B,KAIRC,EAJQ,OAOL9X,IAAMC,SAAiB,CACjD4C,GAAI,GACJqC,WAAY,GACZa,KAAM,GACNhD,aAAc,IAXiB,mBAO1B8F,EAP0B,KAOlBkP,EAPkB,KAiB3BC,EAAiB,WACrBJ,GAAiB,IAGbK,EAAmB,SAACC,GACxBH,EAAUG,GACVJ,GAAoB,IAGhBK,EAAoB,WACxBL,GAAoB,IAGhBM,EAAe,uCAAG,WAAOhM,GAAP,SAAAlK,EAAA,sDACtB8V,IACA,IACExP,EAASM,GAAUsD,IACnB,MAAOS,GACPD,QAAQC,MAAMA,EAAM6I,SALA,2CAAH,sDAkBrB,OACE,6BACE,kBAAC/T,EAAA,EAAD,CAAK0W,GAAI,EAAGxC,GAAI,EAAGyC,GAAI,GACrB,kBAAC,GAAD,CACEjT,MAAO4B,GAASI,GAAMS,YACtBuI,OATiB,SAAC/O,GACxBgQ,EAAgBhQ,OAWbwF,GAAWO,GAAMS,YACf3E,QAAO,SAAC8B,GAAD,OAAOA,EAAEc,OAASsL,KACzBxM,KAAI,SAACI,GAAD,OACH,kBAAC,GAAD,CACE8H,IAAK9H,EAAEpC,GACPgG,OAAQ5D,EACR6R,mBAAoBmB,OAI1B,kBAAC,GAAD,CAAiBvY,OAAQ,WAnD3BkY,GAAiB,MAqDf,kBAAC,GAAD,CACE/X,UAAWgY,EACXhP,OAAQA,EACR/I,QAASqY,EACTpY,SAjCqB,SAACqM,GAC1B+L,IACA3P,EAASU,GAAakD,OAkCpB,kBAAC,GAAD,CACEvM,UAAW8X,EACX7X,QAASkY,EACTjY,SAAUqY,EACV/G,aAAcA,MC3BPkH,GAlDwB,SAAC,GAAsC,IAApC1Y,EAAmC,EAAnCA,UAAWC,EAAwB,EAAxBA,QAASC,EAAe,EAAfA,SAAe,EAC3CC,IAAMC,SAAiB,IADoB,mBACpEuF,EADoE,KAC1DgT,EAD0D,KAgB3E,OACE,6BACE,kBAAClY,EAAA,EAAD,CAAQC,KAAMV,EAAWC,QAASA,GAChC,kBAACU,EAAA,EAAD,KACE,0BAAMT,SAjBO,SAACU,GACpBA,EAAMC,iBACN,IAAMqF,EAAO,CACXP,YAEFgT,EAAY,IACZzY,EAASgG,IAW2BnF,YAAU,EAACC,aAAa,OACpD,kBAACC,EAAA,EAAD,CACEC,WAAW,EACXC,WAAS,EACTC,MAAO,CAAEC,aAAc,IACvBC,KAAK,WACLC,SAda,SAACX,GACxB+X,EAAY/X,EAAMY,OAAOC,QAcfC,YAAY,YACZC,UAAU,EACVC,KAAK,QACLlD,KAAK,OACL+C,MAAOkE,EACP9D,QAAQ,aAEV,kBAACC,EAAA,EAAD,CACEC,QAAQ,OACRC,cAAc,MACdC,eAAe,gBACfC,GAAI,GAEJ,kBAAC,EAAD,MACA,kBAAC,EAAD,CAAcrC,OAAQI,UCoBrB2Y,GA5D2B,SAAC,GAKpC,IAJL5Y,EAII,EAJJA,UACAC,EAGI,EAHJA,QACAC,EAEI,EAFJA,SACAgG,EACI,EADJA,KACI,EAC4B/F,IAAMC,SAAiB,IADnD,mBACGuF,EADH,KACagT,EADb,KAGJxY,IAAMgQ,WAAU,WACdwI,EAAYzS,EAAKP,YAChB,CAACO,EAAKP,WAgBT,OACE,6BACE,kBAAClF,EAAA,EAAD,CAAQC,KAAMV,EAAWC,QAASA,GAChC,kBAACU,EAAA,EAAD,KACE,0BAAMT,SAlBO,SAACU,GACpBA,EAAMC,iBACN,IAAMgY,EAAoB,CACxB7V,GAAIkD,EAAKlD,GACT2C,YAEFgT,EAAY,IACZzY,EAAS2Y,IAW2B9X,YAAU,EAACC,aAAa,OACpD,kBAACC,EAAA,EAAD,CACEC,WAAW,EACXC,WAAS,EACTC,MAAO,CAAEC,aAAc,IACvBC,KAAK,WACLC,SAda,SAACX,GACxB+X,EAAY/X,EAAMY,OAAOC,QAcfC,YAAY,YACZC,UAAU,EACVC,KAAK,QACLlD,KAAK,OACL+C,MAAOkE,EACP9D,QAAQ,aAEV,kBAACC,EAAA,EAAD,CACEC,QAAQ,OACRC,cAAc,MACdC,eAAe,gBACfC,GAAI,GAEJ,kBAAC,EAAD,MACA,kBAAC,EAAD,CAAcrC,OAAQI,U,qBC9D9BtB,GAAYC,aAAW,SAACC,GAAD,OAC3BC,YAAa,CACX2Y,UAAW,CACT/H,UAAW7Q,EAAMiM,QAAQ,IAE3B4M,KAAM,CACJ1Y,SAAU,GACVyP,QAAS5P,EAAMiM,QAAQ,SAwBdgO,GAfwB,SAAC,GAAgB,IAAdjZ,EAAa,EAAbA,OAClCT,EAAUT,KAEhB,OACE,kBAACiZ,GAAA,EAAD,CACErY,UAAWH,EAAQqY,UACnB7V,KAAK,SACL3C,MAAM,UACNa,QAASD,GAET,kBAAC,KAAD,CAAcN,UAAWH,EAAQsY,SCGxBqB,GAvBuB,SAAC,GAAgC,IAA9B7S,EAA6B,EAA7BA,KAAM8S,EAAuB,EAAvBA,iBAC7C,OACE,6BACE,kBAAClX,EAAA,EAAD,CACEgR,YAAY,kBACZtE,OAAQ,EACR9C,aAAc,EACdxJ,GAAI,EACJ8Q,GAAI,EACJjR,QAAQ,OACRC,cAAc,MACdC,eAAe,gBACfuN,WAAW,UAEX,kBAAC/E,EAAA,EAAD,CAAY5I,QAAQ,KAAK5C,MAAM,eAC5BiH,EAAKP,UAER,kBAAC,GAAD,CAAY9F,OAAQ,kBAAMmZ,EAAiB9S,SCoDpC+S,GAtEY,WACzB,IAAMtQ,EAAWuB,cADc,EAEmB/J,IAAMC,UACtD,GAH6B,mBAExB8Y,EAFwB,KAELC,EAFK,OAKyBhZ,IAAMC,UAE5D,GAP6B,mBAKxBgZ,EALwB,KAKFC,EALE,OAQPlZ,IAAMC,SAAe,CAC3C4C,GAAI,GACJ2C,SAAU,KAVmB,mBAQxBO,EARwB,KAQlBuK,EARkB,KAgBzB6I,EAAqB,WACzBH,GAAqB,IAGjBI,EAAuB,SAACC,GAC5B/I,EAAQ+I,GACRH,GAAwB,IAGpBI,EAAwB,WAC5BJ,GAAwB,IAGpBK,EAAa,uCAAG,WAAOnN,GAAP,SAAAlK,EAAA,sDACpBiX,IACA,IACE3Q,EAASF,GAAQ8D,IACjB,MAAOS,GACPD,QAAQC,MAAMA,EAAM6I,SALF,2CAAH,sDAcnB,OACE,6BACGzO,GAASI,GAAMS,YAAYjD,KAAI,SAACI,GAAD,OAC9B,kBAAC,GAAD,CACE8H,IAAK9H,EAAEpC,GACPkD,KAAMd,EACN4T,iBAAkBO,OAGtB,kBAAC,GAAD,CAAe1Z,OAAQ,WAtCzBsZ,GAAqB,MAwCnB,kBAAC,GAAD,CACEnZ,UAAWoZ,EACXlT,KAAMA,EACNjG,QAASwZ,EACTvZ,SApBmB,SAACqM,GACxBkN,IACA9Q,E9CbC,SAACzC,GACJ,8CAAO,WAAOyC,GAAP,iBAAAtG,EAAA,sEACiBuG,GAAYL,WAAWrC,GADxC,UACCzH,EADD,6BAEe,IAAIoK,MAAM,uBAFzB,cAGC8Q,EAAqC,CACzCjb,KZ1BqB,cY2BrBD,WALG,kBAOEkK,EAASgR,IAPX,2CAAP,sD8CYWpR,CAAWgE,OAqBlB,kBAAC,GAAD,CACEvM,UAAWkZ,EACXjZ,QAASqZ,EACTpZ,SAAUwZ,M,oGC5DZE,GAAehb,aAAW,SAACC,GAAD,MAAY,CAC1C6L,KAAM,CACJ,QAAS,CACPmP,aAAc,UAGlBC,KAAM,CACJ9O,MAAO,IAET+O,SAAU,CACR/O,MAAO,YA+NIgP,GAvNkB,SAAC,GAAa,IAAXC,EAAU,EAAVA,IAAU,EACpB9Z,IAAMC,UAAkB,GADJ,mBACrCM,EADqC,KAC/BwZ,EAD+B,KAEtC9a,EAAUwa,KAEVO,EAAe,SAACC,EAAcC,GAClC,IAAMC,GAAQ,IAAMF,EAAQC,GAASE,QAAQ,GAC7C,OAAOF,EAAU,EAAV,UAAiBD,EAAjB,YAAyBC,EAAzB,YAAoCC,GAAQ,SA6CrD,OACE,oCACE,kBAACE,GAAA,EAAD,CAAUjb,UAAWH,EAAQ2a,UAC3B,kBAACU,GAAA,EAAD,CAAWhM,QAAQ,OAAO7M,KAAK,QAAQrC,UAAWH,EAAQ0a,MACxD,kBAACza,EAAA,EAAD,CACEuC,KAAK,QACL3C,MAAM,UACNa,QAAS,kBAAMoa,GAASxZ,KAEvBA,EAAO,kBAAC,KAAD,MAA0B,kBAAC,KAAD,QAGtC,kBAAC+Z,GAAA,EAAD,CACEhM,QAAQ,OACR7M,KAAK,QACLrC,UAAWH,EAAQ0a,KACnBhE,MAAM,UAELmE,EAAI/W,cAEP,kBAACuX,GAAA,EAAD,CACEhM,QAAQ,OACR7M,KAAK,QACLrC,UAAWH,EAAQ0a,KACnBhE,MAAM,UAELmE,EAAIpW,MAAoB,EAAZoW,EAAIlW,MAA0B,EAAdkW,EAAIhW,SAEnC,kBAACwW,GAAA,EAAD,CACEhM,QAAQ,OACR7M,KAAK,QACLrC,UAAWH,EAAQ0a,KACnBhE,MAAM,UAELmE,EAAI3V,KAEP,kBAACmW,GAAA,EAAD,CACEhM,QAAQ,OACR7M,KAAK,QACLrC,UAAWH,EAAQ0a,KACnBhE,MAAM,UAELmE,EAAIzV,KAEP,kBAACiW,GAAA,EAAD,CACEhM,QAAQ,OACR7M,KAAK,QACLrC,UAAWH,EAAQ0a,KACnBhE,MAAM,UAELmE,EAAI9V,IAAM8V,EAAI5V,KAEjB,kBAACoW,GAAA,EAAD,CACEhM,QAAQ,OACR7M,KAAK,QACLrC,UAAWH,EAAQ0a,KACnBhE,MAAM,UAELmE,EAAI1V,KAEP,kBAACkW,GAAA,EAAD,CACEhM,QAAQ,OACR7M,KAAK,QACLrC,UAAWH,EAAQ0a,KACnBhE,MAAM,UAELmE,EAAI7V,IAEP,kBAACqW,GAAA,EAAD,CAAWhM,QAAQ,OAAOlP,UAAWH,EAAQ0a,KAAMhE,MAAM,UA9G5C,SAACnS,GAClB,IAAM+W,EACJ/W,EAAKW,IACLX,EAAKY,IACLZ,EAAKU,IACLV,EAAKG,MACLH,EAAKE,MACLF,EAAKQ,IACLR,EAAKa,IACLb,EAAKO,QACLP,EAAKM,QACLN,EAAKS,GACLT,EAAKK,MACLL,EAAKI,MACLJ,EAAKE,MACU,EAAfF,EAAKM,QACQ,EAAbN,EAAKI,MAEP,MAAM,GAAN,OAAU2W,GA6FHC,CAAWV,KAGhB,kBAACO,GAAA,EAAD,CAAUjb,UAAWH,EAAQ2a,UAC3B,kBAACU,GAAA,EAAD,CAAWrZ,MAAO,CAAE6U,cAAe,EAAGtG,WAAY,GAAKiL,QAAS,IAC9D,kBAACC,GAAA,EAAD,CAAUC,GAAIpa,EAAMqa,QAAQ,OAAOC,eAAa,GAC9C,kBAAClZ,EAAA,EAAD,KACE,kBAACmZ,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,KACE,kBAACV,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,CACEhM,QAAQ,OACRlP,UAAWH,EAAQ0a,KACnBhE,MAAM,UAHR,YAOA,kBAAC2E,GAAA,EAAD,CACEhM,QAAQ,OACRlP,UAAWH,EAAQ0a,KACnBhE,MAAM,UAHR,YAOA,kBAAC2E,GAAA,EAAD,CACEhM,QAAQ,OACRlP,UAAWH,EAAQ0a,KACnBhE,MAAM,UAHR,YAOA,kBAAC2E,GAAA,EAAD,CACEhM,QAAQ,OACRlP,UAAWH,EAAQ0a,KACnBhE,MAAM,UAHR,YAOA,kBAAC2E,GAAA,EAAD,CACEhM,QAAQ,OACRlP,UAAWH,EAAQ0a,KACnBhE,MAAM,UAHR,aASJ,kBAACqF,GAAA,EAAD,KACE,kBAACX,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,CACEhM,QAAQ,OACRlP,UAAWH,EAAQ0a,KACnBhE,MAAM,UAELqE,EAAaF,EAAIpW,MAAOoW,EAAInW,QAE/B,kBAAC2W,GAAA,EAAD,CACEhM,QAAQ,OACRlP,UAAWH,EAAQ0a,KACnBhE,MAAM,UAELqE,EAAaF,EAAIlW,MAAOkW,EAAIjW,QAE/B,kBAACyW,GAAA,EAAD,CACEhM,QAAQ,OACRlP,UAAWH,EAAQ0a,KACnBhE,MAAM,UAELqE,EAAaF,EAAIhW,QAASgW,EAAI/V,UAEjC,kBAACuW,GAAA,EAAD,CACEhM,QAAQ,OACRlP,UAAWH,EAAQ0a,KACnBhE,MAAM,UAHR,UAhKN,SAACnS,GACX,IAAM+W,EAAiB/W,EAAKM,QAAUN,EAAKI,MAC3C,MAAM,GAAN,OAAU2W,GAmKYU,CAAInB,GALV,YA3JN,SAACtW,GACX,IAAM+W,EAAiB/W,EAAKO,QAAUP,EAAKK,MAC3C,MAAM,GAAN,OAAU0W,GA8JwBW,CAAIpB,GALtB,YAtJJ,SAACtW,GACb,GAAIA,EAAKO,QAAUP,EAAKK,MAAO,CAC7B,IAAMsW,GACH,KAAO3W,EAAKM,QAAUN,EAAKI,QAC3BJ,EAAKO,QAAUP,EAAKK,QACrBuW,QAAQ,GACV,MAAM,GAAN,OAAUD,GAEZ,MAAO,IAmJuCgB,CAAMrB,KAEpC,kBAACQ,GAAA,EAAD,CACEhM,QAAQ,OACRlP,UAAWH,EAAQ0a,KACnBhE,MAAM,UAHR,UAKMmE,EAAI9V,IALV,cAKmB8V,EAAI5V,eCpOrC1F,GAAYC,aAAW,SAACC,GAAD,MAAY,CACvC6L,KAAM,CACJ,QAAS,CACPmP,aAAc,UAGlBC,KAAM,CACJ9O,MAAO,QAoFIuQ,GAhFmB,WAChC,IAAMnc,EAAUT,KAChB,OACE,kBAACuc,GAAA,EAAD,KACE,kBAACV,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,CACEhM,QAAQ,OACR7M,KAAK,QACLrC,UAAWH,EAAQ0a,KACnBhE,MAAM,WAER,kBAAC2E,GAAA,EAAD,CACEhM,QAAQ,OACR7M,KAAK,QACLrC,UAAWH,EAAQ0a,KACnBhE,MAAM,UAJR,OAQA,kBAAC2E,GAAA,EAAD,CACEhM,QAAQ,OACR7M,KAAK,QACLrC,UAAWH,EAAQ0a,KACnBhE,MAAM,UAJR,OAQA,kBAAC2E,GAAA,EAAD,CACEhM,QAAQ,OACR7M,KAAK,QACLrC,UAAWH,EAAQ0a,KACnBhE,MAAM,UAJR,OAQA,kBAAC2E,GAAA,EAAD,CACEhM,QAAQ,OACR7M,KAAK,QACLrC,UAAWH,EAAQ0a,KACnBhE,MAAM,UAJR,OAQA,kBAAC2E,GAAA,EAAD,CACEhM,QAAQ,OACR7M,KAAK,QACLrC,UAAWH,EAAQ0a,KACnBhE,MAAM,UAJR,OAQA,kBAAC2E,GAAA,EAAD,CACEhM,QAAQ,OACR7M,KAAK,QACLrC,UAAWH,EAAQ0a,KACnBhE,MAAM,UAJR,OAQA,kBAAC2E,GAAA,EAAD,CACEhM,QAAQ,OACR7M,KAAK,QACLrC,UAAWH,EAAQ0a,KACnBhE,MAAM,UAJR,MAQA,kBAAC2E,GAAA,EAAD,CACEhM,QAAQ,OACR7M,KAAK,QACLrC,UAAWH,EAAQ0a,KACnBhE,MAAM,UAJR,U,qBC/EFnX,GAAYC,aAAW,SAACC,GAAD,OAC3BC,YAAa,CACX4L,KAAM,CACJ6D,WAAY1P,EAAMY,QAAQC,QAAQC,KAClC6O,OAAQ,EACR9C,aAAc,EACdzM,MAAO,QACPyP,OAAQ,MACRnD,UAAW,2BAEbiQ,WAAY,CACV3Q,YAAa,YAkBJ4Q,GATwB,SAAC,GAAgB,IAAd5b,EAAa,EAAbA,OAClCT,EAAUT,KAChB,OACE,kBAAC6O,EAAA,EAAD,CAAQ1N,QAASD,EAAQN,UAAWH,EAAQsL,MAC1C,kBAAC,KAAD,CAAYnL,UAAWH,EAAQoc,aADjC,aCXE7c,GAAYC,aAAW,SAACC,GAAD,MAAmB,CAC9C6c,MAAO,CACL1Q,MAAO,YAmCI2Q,GA/BS,WACtB,IAAMvc,EAAUT,KACVgK,EAAWuB,cACX6B,EAAUC,cAShB,OACE,oCACE,kBAACiP,GAAA,EAAD,CAAOW,cAAY,EAACrc,UAAWH,EAAQsc,OACrC,kBAAC,GAAD,MACA,kBAACP,GAAA,EAAD,KACGjU,GAASM,GAAMS,YACbmI,MAAK,SAAC/N,EAAGgO,GAAJ,OAAUhO,EAAEa,aAAemN,EAAEnN,gBAClC8B,KAAI,SAACiV,GAAD,OACH,kBAAC,GAAD,CAAS/M,IAAK+M,EAAI/W,aAAc+W,IAAKA,SAI7C,kBAACnY,EAAA,EAAD,CAAKC,QAAQ,OAAOyN,WAAW,SAASvN,eAAe,SAAS+Q,GAAI,GAClE,kBAAC,GAAD,CAAenT,OArBG,WACtB8I,EAASW,MACTX,EAASoB,MACTpB,EAASqB,MACTrB,ElD2CK,CACLjK,KZzDuB,gB8DcvBiK,EAASY,GAAe,SACxBwC,EAAQe,KAAK,W,yCCjBX8M,GAAehb,aAAW,SAACC,GAAD,MAAY,CAC1C6L,KAAM,CACJ,QAAS,CACPmP,aAAc,UAGlBC,KAAM,CACJ9O,MAAO,QAwHI6Q,GAhHc,SAAC,GAAa,IAAX5B,EAAU,EAAVA,IACxBlO,EAAUC,cADwB,EAEhB7L,IAAMC,UAAkB,GAFR,mBAEjCM,EAFiC,KAE3BwZ,EAF2B,KAGlC9a,EAAUwa,KAEVkC,EAAc,SAAC9Y,GACnB+J,QAAQmG,IAAIlQ,GACZ+I,EAAQe,KAAR,iBAAuB9J,KAGzB,OACE,oCACE,kBAACwX,GAAA,EAAD,CAAUjb,UAAWH,EAAQsL,MAC3B,kBAAC+P,GAAA,EAAD,CAAWhM,QAAQ,OAAO7M,KAAK,QAAQrC,UAAWH,EAAQ0a,MACxD,kBAACza,EAAA,EAAD,CACEJ,MAAM,UACN2C,KAAK,QACL9B,QAAS,kBAAMoa,GAASxZ,KAEvBA,EAAO,kBAAC,KAAD,MAA0B,kBAAC,KAAD,QAGtC,kBAAC+Z,GAAA,EAAD,CACEhM,QAAQ,OACR7M,KAAK,QACLrC,UAAWH,EAAQ0a,KACnBhE,MAAM,UAELmE,EAAIpU,UAEP,kBAAC4U,GAAA,EAAD,CACEhM,QAAQ,OACR7M,KAAK,QACLrC,UAAWH,EAAQ0a,KACnBhE,MAAM,UAELmE,EAAInU,UAEP,kBAAC2U,GAAA,EAAD,CACEhM,QAAQ,OACR7M,KAAK,QACLrC,UAAWH,EAAQ0a,KACnBhE,MAAM,UAELmE,EAAIhU,UAEP,kBAACwU,GAAA,EAAD,CACEhM,QAAQ,OACR7M,KAAK,QACLrC,UAAWH,EAAQ0a,KACnBhE,MAAM,UAELmE,EAAIlU,YAEP,kBAAC0U,GAAA,EAAD,CAAWhM,QAAQ,OAAOlP,UAAWH,EAAQ0a,KAAMhE,MAAM,UACvD,kBAACzW,EAAA,EAAD,CACEJ,MAAM,UACN2C,KAAK,QACL9B,QAAS,kBAAMgc,EAAY7B,EAAIjX,MAE/B,kBAAC,KAAD,SAIN,kBAACwX,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,CAAWrZ,MAAO,CAAE6U,cAAe,EAAGtG,WAAY,GAAKiL,QAAS,IAC9D,kBAACC,GAAA,EAAD,CAAUC,GAAIpa,EAAMqa,QAAQ,OAAOC,eAAa,GAC9C,kBAAClZ,EAAA,EAAD,CAAK4M,OAAQ,GACX,kBAACuM,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,KACE,kBAACV,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,CACEhM,QAAQ,OACRlP,UAAWH,EAAQ0a,KACnBhE,MAAM,UAHR,iBASJ,kBAACqF,GAAA,EAAD,KACE,kBAACX,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,CACEhM,QAAQ,OACRlP,UAAWH,EAAQ0a,KACnBhE,MAAM,UAELmE,EAAIjU,aAEP,kBAACyU,GAAA,EAAD,CACEhM,QAAQ,OACRlP,UAAWH,EAAQ0a,KACnBhE,MAAM,UAEN,kBAACzW,EAAA,EAAD,CACEuC,KAAK,QACL9B,QAAS,kBAAMgc,EAAY7B,EAAIjX,MAE/B,kBAAC,KAAD,iBCrHlB4W,GAAehb,aAAW,SAACC,GAAD,MAAY,CAC1C6L,KAAM,CACJ,QAAS,CACPmP,aAAc,UAGlBC,KAAM,CACJ9O,MAAO,QA0EI+Q,GAlEoB,SAAC,GAAe,IAAbC,EAAY,EAAZA,MAC9B5c,EAAUwa,KAEhB,OACE,kBAACqC,GAAA,EAAD,CAAgB7R,UAAW8R,MACzB,kBAACjB,GAAA,EAAD,CAAOW,cAAY,GACjB,kBAACV,GAAA,EAAD,KACE,kBAACV,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,CACEhM,QAAQ,OACR7M,KAAK,QACLrC,UAAWH,EAAQ0a,KACnBhE,MAAM,WAER,kBAAC2E,GAAA,EAAD,CACEhM,QAAQ,OACR7M,KAAK,QACLrC,UAAWH,EAAQ0a,KACnBhE,MAAM,UAJR,QAQA,kBAAC2E,GAAA,EAAD,CACEhM,QAAQ,OACR7M,KAAK,QACLrC,UAAWH,EAAQ0a,KACnBhE,MAAM,UAJR,QAQA,kBAAC2E,GAAA,EAAD,CACEhM,QAAQ,OACR7M,KAAK,QACLrC,UAAWH,EAAQ0a,KACnBhE,MAAM,UAJR,QAQA,kBAAC2E,GAAA,EAAD,CACEhM,QAAQ,OACR7M,KAAK,QACLrC,UAAWH,EAAQ0a,KACnBhE,MAAM,UAJR,SAQA,kBAAC2E,GAAA,EAAD,CACEhM,QAAQ,OACR7M,KAAK,QACLrC,UAAWH,EAAQ0a,KACnBhE,MAAM,UAJR,aAUJ,kBAACqF,GAAA,EAAD,KACGa,EAAMhX,KAAI,SAACiV,GAAD,OACT,kBAAC,GAAD,CAAK/M,IAAK+M,EAAIjX,GAAIiX,IAAKA,WCrDpBkC,GAvBc,WAAO,IAAD,EACPhc,IAAMC,SAAiB,IADhB,mBAC1B4b,EAD0B,KACnBI,EADmB,KAG3BC,EAAgB,uCAAG,WAAOnW,GAAP,eAAA7D,EAAA,6DACvB0K,QAAQmG,IAAI,SAAUhN,GADC,SAEA0C,GAAYR,eAAelC,GAF3B,OAEjBoW,EAFiB,OAGvBvP,QAAQmG,IAAI8I,GACZI,EAASE,GAJc,2CAAH,sDAOtB,OACE,oCACE,kBAACxa,EAAA,EAAD,CAAK0W,GAAI,GACP,kBAAC,GAAD,CACEhT,MAAO4B,GAASI,GAAMS,YACtBuI,OAAQ6L,KAGZ,kBAAC,GAAD,CAAWL,MAAOA,MCQTO,GAxBa,WAAO,IACzBvZ,EAAOwZ,cAAPxZ,GADwB,EAEN7C,IAAMC,SAAiB,IAFjB,mBAEzBqD,EAFyB,KAElBgZ,EAFkB,KAQhC,OAJAtc,IAAMgQ,WAAU,WACdvG,GAAYJ,eAAexG,GAAI0Z,MAAK,SAACC,GAAD,OAAcF,EAASE,QAC1D,CAAC3Z,IAGF,kBAACiZ,GAAA,EAAD,CAAgB7R,UAAW8R,MACzB,kBAACjB,GAAA,EAAD,CAAOW,cAAY,GACjB,kBAAC,GAAD,MACA,kBAACT,GAAA,EAAD,KACG1X,EACE2M,MAAK,SAAC/N,EAAGgO,GAAJ,OAAUhO,EAAEa,aAAemN,EAAEnN,gBAClC8B,KAAI,SAACiV,GAAD,OACH,kBAAC,GAAD,CAAS/M,IAAK+M,EAAI/W,aAAc+W,IAAKA,WCf7Ctb,GAAYC,aAAW,SAACC,GAAD,OAC3BC,YAAa,CACX4L,KAAM,CACJqI,WAAYlU,EAAMiM,QAAQ,GAC1BD,YAAahM,EAAMiM,QAAQ,GAC3B4E,UAAW7Q,EAAMiM,QAAQ,GACzBH,SAAU,QAmFDiS,GA9EuB,WACpC,IAAMjU,EAAWuB,cACX9K,EAAUT,KAF0B,EAGAwB,IAAMC,UAAkB,GAHxB,mBAGnC0X,EAHmC,KAGpBC,EAHoB,OAIM5X,IAAMC,UACpD,GALwC,mBAInC4X,EAJmC,KAIjBC,EAJiB,OAOd9X,IAAMC,SAAiB,CACjD4C,GAAI,GACJqC,WAAY,GACZa,KAAM,GACNhD,aAAc,IAX0B,mBAOnC8F,EAPmC,KAO3BkP,EAP2B,KAiBpCC,EAAiB,WACrBJ,GAAiB,IAGbK,EAAmB,SAACC,GACxBH,EAAUG,GACVJ,GAAoB,IAGhBK,EAAoB,WACxBL,GAAoB,IAoBtB,OACE,yBAAK1Y,UAAWH,EAAQsL,MACrBzD,GAAWO,GAAMS,YACf3E,QAAO,SAAC8B,GAAD,MAAkB,SAAXA,EAAEc,QAChBlB,KAAI,SAACI,GAAD,OACH,kBAAC,GAAD,CACE8H,IAAK9H,EAAEpC,GACPgG,OAAQ5D,EACR6R,mBAAoBmB,OAI1B,kBAAC,GAAD,CAAiBvY,OAAQ,WA5C3BkY,GAAiB,MA8Cf,kBAAC,GAAD,CACE/X,UAAWgY,EACXhP,OAAQA,EACR/I,QAASqY,EACTpY,SAvBqB,SAACqM,GAC1B+L,IACA3P,EAASU,GAAakD,OAwBpB,kBAAC,GAAD,CACEvM,UAAW8X,EACX7X,QAASkY,EACTjY,SAzCkB,SAACqM,GACvB4L,IACA,IAAM0E,EAAoB,CACxB7Z,GAAG,GAAD,OAAKuJ,EAAOlH,WAAZ,YAA0BkH,EAAOrJ,cACnCmC,WAAYkH,EAAOlH,WACnBnC,aAAcqJ,EAAOrJ,aACrBgD,KAAM,QAERyC,ErD7BK,CACLjK,KjBdsB,aiBetBD,QqD2B4Boe,IAC5BlU,EAASmB,GAAY+S,KAiCjBrL,aAAa,WCnEf7S,GAAYC,aAAW,SAACC,GAAD,MAAmB,CAC9CqM,OAAQ,CACNF,MAAOnM,EAAMiM,QAAQ,GACrBM,OAAQvM,EAAMiM,QAAQ,IAExBrE,MAAO,CACLyN,YAAarV,EAAMiM,QAAQ,IAE7BqJ,cAAe,CACbD,YAAarV,EAAMiM,QAAQ,IAE7BsJ,YAAa,CACX/I,gBAAiB4C,IAEnBoG,gBAAiB,CACfpV,MAAO,WAETqV,UAAW,CACTjJ,gBAAiB8C,IAEnBoG,cAAe,CACbtV,MAAO,WAETuV,WAAY,CACVnJ,gBAAiB0C,IAEnB0G,eAAgB,CACdxV,MAAO,WAETyV,QAAS,CACPhF,UAAW7Q,EAAMiM,QAAQ,GACzBzJ,aAAcxC,EAAMiM,QAAQ,QAQ1B6J,GAAqC,SAAC,GAAe,IAAb/T,EAAY,EAAZA,MACtCxB,EAAUT,KAChB,OAAQiC,EAAMmC,WACZ,I3EtEiB,M2E+EjB,I3E9EiB,M2EuFjB,I3EtFmB,M2EuFjB,OACE,kBAACwK,EAAA,EAAD,CACEhO,UAAWH,EAAQ8L,OACnB9J,MAAO,CAAEiK,gBAAiB0C,KAE1B,kBAACtD,EAAA,EAAD,CAAY5I,QAAQ,MAAMjB,EAAMsC,eAGtC,I3E9FiB,M2EuGjB,I3EtGiB,M2E+GjB,I3E9GmB,M2EuHnB,KAAKM,GACH,OACE,kBAAC+J,EAAA,EAAD,CACEhO,UAAWH,EAAQ8L,OACnB9J,MAAO,CAAEiK,gBAAiB4C,KAE1B,kBAACxD,EAAA,EAAD,CAAY5I,QAAQ,MAAMjB,EAAMsC,eAGtC,QACE,OACE,kBAACqK,EAAA,EAAD,CACEhO,UAAWH,EAAQ8L,OACnB9J,MAAO,CAAEiK,gBAAiB8C,KAE1B,kBAAC1D,EAAA,EAAD,CAAY5I,QAAQ,MAAMjB,EAAMsC,iBA6O3B4Z,GAvOmB,WAChC,IAAM1d,EAAUT,KACVgK,EAAWuB,cACX6B,EAAUC,cAHsB,EAIY7L,IAAMC,UACtD,GALoC,mBAI/BwO,EAJ+B,KAIZuG,EAJY,OAOFhV,IAAMC,UAAkB,GAPtB,mBAO/B+L,EAP+B,KAOnBC,EAPmB,OAQFjM,IAAMC,UAAS,GARb,mBAQ/BoU,EAR+B,KAQnBkB,EARmB,OASJvV,IAAMC,UAAS,GATX,mBAS/BkU,EAT+B,KASpBrF,EAToB,OAUA9O,IAAMC,UAAS,GAVf,mBAU/BgU,EAV+B,KAUlBrF,EAVkB,KAgBhC1C,EAAc,WAClBD,GAAc,IAwDhB,OACE,oCACE,kBAACtK,EAAA,EAAD,CAAKC,QAAQ,OAAOC,cAAc,OAChC,kBAACF,EAAA,EAAD,CAAKC,QAAQ,OAAOC,cAAc,MAAM0N,UAAW,EAAGtK,EAAG,EAAG4F,MAAM,OAChE,kBAACP,EAAA,EAAD,CAAYqL,MAAM,OAAOjU,QAAQ,KAAK5C,MAAM,aAA5C,UAGA,kBAACwL,EAAA,EAAD,CAAYqL,MAAM,OAAOjU,QAAQ,KAAKtC,UAAWH,EAAQqH,OACtDc,GAASC,GAAMS,cAGpB,kBAACnG,EAAA,EAAD,CACEC,QAAQ,OACR2N,UAAW,EACX1E,MAAM,MACNwE,WAAW,SACXvN,eAAe,UAEf,kBAAC,GAAD,CAAYpC,OA/EW,WAC7BuM,GAAc,QAiFZ,kBAAC2J,GAAA,EAAD,MACCnH,EACC,kBAAC,GAAD,CAAeA,kBAAmBuG,IAElC,kBAAC,GAAD,CACEvG,kBAAmBuG,EACnBtG,YAAa6G,EACb3G,eAAgBA,EAChBE,aAAcA,IAGlB,kBAAC8G,GAAA,EAAD,CAASxW,UAAWH,EAAQsV,UAE3B9F,GACC5H,GAAUQ,GAAMS,YAAYjD,KAAI,SAACzB,GAAD,OAC9B,kBAACzB,EAAA,EAAD,CACEoL,IAAK3J,EAAIP,GACTjB,QAAQ,OACRC,cAAc,MACdwM,OAAQ,EACRsE,YAAY,kBACZpH,aAAc,EACdzJ,eAAe,gBACf+T,GAAI,EACJ9T,GAAI,GAEJ,kBAACJ,EAAA,EAAD,CACEC,QAAQ,OACR4N,WAAY,EACZsG,cAAe,EACf/T,GAAI,EACJsN,WAAW,UAEX,kBAAC,GAAD,CAAa5O,MAAO2C,IACpB,kBAACkH,EAAA,EAAD,CAAYlL,UAAWH,EAAQ+U,eAC5B5Q,EAAIR,YAGT,kBAACjB,EAAA,EAAD,CACEC,QAAQ,OACR4N,WAAY,EACZsG,cAAe,EACf/T,GAAI,EACJsN,WAAW,SACXvN,eAAe,UAEf,kBAAC,GAAD,CAAcpC,OAAQ,kBAzFR,SAACe,GACzB,IAAMsV,EAAuB,CAC3BnT,UAAWnC,EAAMmC,UACjBG,aAActC,EAAMsC,cAItB,OAFAyF,EAASlE,GAAWyR,IACpBvN,EAAS2F,GAAY1N,EAAMoC,KACnBpC,EAAMmC,WACZ,I3E5Me,M2E6Mb4F,ExCjLC,CACLjK,KpBxBsB,e4DyMlB,MACF,I3E9Me,M2E+MbiK,ExC9KC,CACLjK,KpB7BsB,e4D2MlB,MACF,I3EhNiB,M2EiNfiK,ExC3KC,CACLjK,KpBlCwB,kB4DsRcyX,CAAkB5S,WAIrDwD,GAASS,GAAMS,YACd,kBAACmO,GAAA,EAAD,CACEC,aAAc,CAAEC,SAAU,MAAOC,WAAY,UAC7C7V,KAAM8T,EACNgC,iBAAkB,IAClBvW,QAjIiB,SAACW,EAA8B6V,GACvC,cAAXA,GAGJf,GAAc,KA+HR,kBAAC5T,EAAA,EAAD,CACEvC,UAAWH,EAAQoV,WACnBzS,QAAQ,OACRyM,OAAQ,EACRxD,MAAM,MACN8H,YAAY,QACZpH,aAAc,EACdN,OAAQ,GACRoE,WAAW,SACXvN,eAAe,UAEf,kBAACwI,EAAA,EAAD,CAAY5I,QAAQ,KAAKtC,UAAWH,EAAQqV,gBAA5C,IACI1N,GAASS,GAAMS,YAAY/E,aAAc,IAC1C6D,GAASS,GAAMS,YAAYlF,aAIhC,KAEHgE,GAASS,GAAMS,YACd,kBAACmO,GAAA,EAAD,CACEC,aAAc,CAAEC,SAAU,MAAOC,WAAY,UAC7C7V,KAAM0T,EACNoC,iBAAkB,IAClBvW,QApJkB,SAACW,EAA8B6V,GACxC,cAAXA,GAGJ1H,GAAe,KAkJT,kBAACjN,EAAA,EAAD,CACEvC,UAAWH,EAAQgV,YACnBrS,QAAQ,OACRyM,OAAQ,EACRxD,MAAM,MACN8H,YAAY,QACZpH,aAAc,EACdN,OAAQ,GACRoE,WAAW,SACXvN,eAAe,UAEf,kBAACwI,EAAA,EAAD,CAAY5I,QAAQ,KAAKtC,UAAWH,EAAQiV,iBAA5C,IACItN,GAASS,GAAMS,YAAY/E,aAAc,IAC1C6D,GAASS,GAAMS,YAAYlF,aAIhC,KAEHgE,GAASS,GAAMS,YACd,kBAACmO,GAAA,EAAD,CACEC,aAAc,CAAEC,SAAU,MAAOC,WAAY,UAC7C7V,KAAM4T,EACNkC,iBAAkB,IAClBvW,QAvKgB,SAACW,EAA8B6V,GACtC,cAAXA,GAGJxH,GAAa,KAqKP,kBAACnN,EAAA,EAAD,CACEvC,UAAWH,EAAQkV,UACnBvS,QAAQ,OACRyM,OAAQ,EACRxD,MAAM,MACN8H,YAAY,QACZpH,aAAc,EACdN,OAAQ,GACRoE,WAAW,SACXvN,eAAe,UAEf,kBAACwI,EAAA,EAAD,CAAY5I,QAAQ,KAAKtC,UAAWH,EAAQmV,eAA5C,IACIxN,GAASS,GAAMS,YAAY/E,aAAc,IAC1C6D,GAASS,GAAMS,YAAYlF,aAIhC,KAEJ,kBAAC,GAAD,CACEoJ,WAAYA,EACZlM,QAASoM,EACTnM,SAxLqB,SAACwW,GAC1BrK,IACIqK,GACF/N,EAASY,GAAe,SACxBwC,EAAQe,KAAK,oBAEbC,QAAQmG,IAAI,eC9KZ6J,GAAQC,YAAe,CAC3BC,WAAY,CACVC,WAAY,6CACZle,SAAU,GACVme,gBAAiB,IACjBC,kBAAmB,IACnBC,iBAAkB,KAEpB5d,QAAS,CACPC,QAAS4d,IACTzN,UAAW0N,OAwCAC,GApCO,WACpB,IAAM7U,EAAWuB,cADS,EAEM/J,IAAMC,UAAkB,GAF9B,mBAEnByL,EAFmB,KAETC,EAFS,KAa1B,OATA3L,IAAMgQ,WAAU,WACd,IAAMsN,EAAehR,OAAOC,aAAagR,QAAQ,sBACjD,GAAID,EAAc,CAChB,IAAM3c,EAAO8L,KAAK+Q,MAAMF,GACxB9U,EAASnK,EAAUsC,IACnBgL,GAAY,MAEb,CAACnD,IAGF,kBAAC,IAAD,KACE,kBAACiV,EAAA,EAAD,CAAe/e,MAAOke,IACpB,kBAAC,GAAD,CAAQlR,SAAUA,EAAUC,YAAaA,IACzC,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAO+R,OAAK,EAACC,KAAK,IAAIC,OAAQ,kBAAM,kBAAC,GAAD,SACpC,kBAAC,IAAD,CAAOD,KAAK,UAAUC,OAAQ,kBAAM,kBAAC,GAAD,SACpC,kBAAC,IAAD,CAAOD,KAAK,QAAQC,OAAQ,kBAAM,kBAAC,GAAD,SAClC,kBAAC,IAAD,CAAOD,KAAK,aAAaC,OAAQ,kBAAM,kBAAC,GAAD,SACvC,kBAAC,IAAD,CAAOD,KAAK,cAAcC,OAAQ,kBAAM,kBAACC,GAAD,SACxC,kBAAC,IAAD,CAAOF,KAAK,UAAUC,OAAQ,kBAAM,kBAAC,GAAD,SACpC,kBAAC,IAAD,CAAOD,KAAK,kBAAkBC,OAAQ,kBAAM,kBAACE,GAAD,SAC5C,kBAAC,IAAD,CACEH,KAAK,mBACLC,OAAQ,kBAAM,kBAAC,GAAD,SAEhB,kBAAC,IAAD,CAAOD,KAAK,mBAAmBC,OAAQ,kBAAM,kBAAC,GAAD,aCtDjDG,I,OAAY,WAChBC,IAASJ,OACP,kBAAC,IAAD,CAAUvW,MAAOA,IACf,kBAAC,GAAD,OAEF4W,SAASC,eAAe,WAI5BH,KACA1W,GAAM8W,UAAUJ,M","file":"static/js/main.4b3498ca.chunk.js","sourcesContent":["import { User, LOGIN, LOGOUT } from './types';\n\nexport const logoutUser = (payload: User) => {\n  return {\n    type: LOGOUT,\n    payload,\n  };\n};\n\nexport const loginUser = (payload: User) => {\n  return {\n    type: LOGIN,\n    payload,\n  };\n};\n\n/* MALLI redux thunk action\nexport const loginUser: ActionCreator<ThunkAction<\n  Promise<LoginAction>,\n  User,\n  LoginInput,\n  LoginAction\n>> = (credentials: LoginInput) => {\n  return async (dispatch: Dispatch) => {\n    const payload = await loginService.login(credentials);\n    const loginAction: LoginAction = {\n      type: LOGIN,\n      payload,\n    };\n    return dispatch(loginAction);\n  };\n};\n\n*/\n","import { Action } from 'redux';\n\nexport interface LoginInput {\n  username: string;\n  password: string;\n}\n\ninterface LoggedInUser {\n  username: string;\n  token: string;\n}\n\nexport type User = LoggedInUser | null;\n\nexport interface UserState {\n  user: User;\n}\n\nexport const LOGIN = 'LOGIN';\nexport const LOGOUT = 'LOGOUT';\n\nexport interface LoginAction extends Action<typeof LOGIN> {\n  type: typeof LOGIN;\n  payload: User;\n}\n\ninterface LogoutAction extends Action<typeof LOGOUT> {\n  type: typeof LOGOUT;\n  payload: undefined;\n}\n\nexport type UserActionTypes = LoginAction | LogoutAction;\n","import React from 'react';\nimport { makeStyles, Theme, createStyles } from '@material-ui/core/styles';\nimport IconButton from '@material-ui/core/IconButton';\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\nimport teal from '@material-ui/core/colors/teal';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    okIcon: {\n      fontSize: 52,\n      color: teal[800],\n    },\n  })\n);\n\nconst OkButton: React.FC = () => {\n  const classes = useStyles();\n\n  return (\n    <IconButton edge=\"start\" type=\"submit\">\n      <CheckCircleIcon className={classes.okIcon} />\n    </IconButton>\n  );\n};\n\nexport default OkButton;\n","import React from 'react';\nimport { makeStyles, Theme, createStyles } from '@material-ui/core/styles';\nimport IconButton from '@material-ui/core/IconButton';\nimport CancelOutlinedIcon from '@material-ui/icons/CancelOutlined';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    cancelIcon: {\n      fontSize: 52,\n      color: theme.palette.primary.main,\n    },\n  })\n);\n\ninterface Props {\n  action: () => void;\n}\n\nconst CancelButton: React.FC<Props> = ({ action }) => {\n  const classes = useStyles();\n\n  return (\n    <IconButton edge=\"start\" onClick={action}>\n      <CancelOutlinedIcon className={classes.cancelIcon} />\n    </IconButton>\n  );\n};\n\nexport default CancelButton;\n","import React from 'react';\nimport Box from '@material-ui/core/Box';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport { LoginInput } from '../../../store/user/types';\nimport OkButton from '../../button/OkButton';\nimport CancelButton from '../../button/CancelButton';\n\ninterface Props {\n  modalOpen: boolean;\n  onClose: () => void;\n  onSubmit: (user: LoginInput) => void;\n}\n\nconst LoginDialog: React.FC<Props> = ({ modalOpen, onClose, onSubmit }) => {\n  const [username, setUsername] = React.useState<string>('');\n  const [password, setPassword] = React.useState<string>('');\n\n  const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    const user = {\n      username,\n      password,\n    };\n    setUsername('');\n    setPassword('');\n    onSubmit(user);\n  };\n\n  const handleUsernameChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setUsername(event.target.value);\n  };\n\n  const handlePasswordChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setPassword(event.target.value);\n  };\n\n  return (\n    <div>\n      <Dialog open={modalOpen} onClose={onClose}>\n        <DialogContent>\n          <form onSubmit={handleSubmit} noValidate autoComplete=\"off\">\n            <TextField\n              autoFocus={true}\n              fullWidth\n              style={{ marginBottom: 16 }}\n              name=\"username\"\n              onChange={handleUsernameChange}\n              placeholder=\"Username\"\n              required={true}\n              size=\"small\"\n              type=\"text\"\n              value={username}\n              variant=\"outlined\"\n            />\n            <TextField\n              fullWidth\n              style={{ marginBottom: 24 }}\n              name=\"password\"\n              onChange={handlePasswordChange}\n              placeholder=\"Password\"\n              required={true}\n              size=\"small\"\n              type=\"password\"\n              value={password}\n              variant=\"outlined\"\n            />\n            <Box\n              display=\"flex\"\n              flexDirection=\"row\"\n              justifyContent=\"space-between\"\n              px={5}\n            >\n              <OkButton />\n              <CancelButton action={onClose} />\n            </Box>\n          </form>\n        </DialogContent>\n      </Dialog>\n    </div>\n  );\n};\n\nexport default LoginDialog;\n","import axios from 'axios';\nimport { LoginInput } from '../store/user/types';\n\nconst baseUrl = '/api/login';\n\nconst login = async (credentials: LoginInput) => {\n  return (await axios.post(baseUrl, credentials)).data;\n};\n\nexport default { login };\n","import { uuid } from 'uuidv4';\nimport {\n  EventState,\n  SET_GAME_EVENT,\n  SET_PLAYER,\n  EventActionTypes,\n  EventItem,\n  REMOVE_EVENT,\n} from './types';\n\nconst initialState: EventState = {\n  events: [],\n};\n\nconst eventReducer = (\n  state = initialState,\n  action: EventActionTypes\n): EventState => {\n  let newEvent: EventItem;\n  let newEventList: EventItem[];\n  switch (action.type) {\n    case SET_GAME_EVENT:\n      newEventList = [...state.events];\n      newEventList[0].gameEvent = action.payload.gameEvent;\n      return { ...state, events: newEventList };\n    case SET_PLAYER:\n      newEvent = {\n        id: uuid(),\n        gameEvent: '',\n        playerNumber: action.payload.playerNumber,\n      };\n      newEventList = [...state.events];\n      newEventList.unshift(newEvent);\n      if (newEventList.length > 5) {\n        newEventList.pop();\n      }\n      return { ...state, events: newEventList };\n    case REMOVE_EVENT:\n      newEventList = state.events.filter((evt) => evt.id !== action.payload);\n      return { ...state, events: newEventList };\n    default:\n      return state;\n  }\n};\n\nexport default eventReducer;\n","import { Action } from 'redux';\n\nexport interface GameEvent {\n  gameEvent: string;\n}\n\nexport interface PlayerNumber {\n  playerNumber: number;\n}\n\nexport interface EventItem {\n  id: string;\n  gameEvent: string;\n  playerNumber: number;\n}\n\nexport interface EventState {\n  events: EventItem[];\n}\n\nexport const SET_GAME_EVENT = 'SET_GAME_EVENT';\nexport const SET_PLAYER = 'SET_PLAYER';\nexport const REMOVE_EVENT = 'REMOVE_EVENT';\n\ninterface SetGameEventAction extends Action<typeof SET_GAME_EVENT> {\n  type: typeof SET_GAME_EVENT;\n  payload: GameEvent;\n}\n\ninterface SetPlayerAction extends Action<typeof SET_PLAYER> {\n  type: typeof SET_PLAYER;\n  payload: PlayerNumber;\n}\n\ninterface RemoveGameEvent extends Action<typeof REMOVE_EVENT> {\n  type: typeof REMOVE_EVENT;\n  payload: EventItem['id'];\n}\n\nexport type EventActionTypes =\n  | SetGameEventAction\n  | SetPlayerAction\n  | RemoveGameEvent;\n","export const ONEPM = '1PM';\nexport const TWOPM = '2PM';\nexport const THREEPM = '3PM';\nexport const ONEPA = '1PA';\nexport const TWOPA = '2PA';\nexport const THREEPA = '3PA';\nexport const ORB = 'ORB';\nexport const TO = 'TO';\nexport const DRB = 'DRB';\nexport const AST = 'AST';\nexport const BLK = 'BLK';\nexport const STL = 'STL';\n","import {\n  StatState,\n  ADD_STAT,\n  StatActionTypes,\n  Stat,\n  RESET_STATS,\n  REMOVE_STAT,\n} from './types';\nimport {\n  ONEPM,\n  TWOPM,\n  THREEPM,\n  ONEPA,\n  TWOPA,\n  THREEPA,\n  ORB,\n  TO,\n  DRB,\n  AST,\n  BLK,\n  STL,\n} from '../../constants/gameEvents';\n\nconst initialState: StatState = {\n  stats: [],\n};\n\nconst addStat = (stat: Stat, event: string): Stat => {\n  const newStat = stat;\n  switch (event) {\n    case ONEPM:\n      newStat.onePm += 1;\n      newStat.onePa += 1;\n      return newStat;\n    case TWOPM:\n      newStat.twoPm += 1;\n      newStat.twoPa += 1;\n      return newStat;\n    case THREEPM:\n      newStat.threePm += 1;\n      newStat.threePa += 1;\n      return newStat;\n    case ONEPA:\n      newStat.onePa += 1;\n      return newStat;\n    case TWOPA:\n      newStat.twoPa += 1;\n      return newStat;\n    case THREEPA:\n      newStat.threePa += 1;\n      return newStat;\n    case ORB:\n      newStat.orb += 1;\n      return newStat;\n    case TO:\n      newStat.to += 1;\n      return newStat;\n    case DRB:\n      newStat.drb += 1;\n      return newStat;\n    case AST:\n      newStat.ast += 1;\n      return newStat;\n    case BLK:\n      newStat.blk += 1;\n      return newStat;\n    case STL:\n      newStat.stl += 1;\n      return newStat;\n    default:\n      return stat;\n  }\n};\n\nconst removeStat = (stat: Stat, event: string): Stat => {\n  const newStat = stat;\n  switch (event) {\n    case ONEPM:\n      newStat.onePm -= 1;\n      newStat.onePa -= 1;\n      return newStat;\n    case TWOPM:\n      newStat.twoPm -= 1;\n      newStat.twoPa -= 1;\n      return newStat;\n    case THREEPM:\n      newStat.threePm -= 1;\n      newStat.threePa -= 1;\n      return newStat;\n    case ONEPA:\n      newStat.onePa -= 1;\n      return newStat;\n    case TWOPA:\n      newStat.twoPa -= 1;\n      return newStat;\n    case THREEPA:\n      newStat.threePa -= 1;\n      return newStat;\n    case ORB:\n      newStat.orb -= 1;\n      return newStat;\n    case TO:\n      newStat.to -= 1;\n      return newStat;\n    case DRB:\n      newStat.drb -= 1;\n      return newStat;\n    case AST:\n      newStat.ast -= 1;\n      return newStat;\n    case BLK:\n      newStat.blk -= 1;\n      return newStat;\n    case STL:\n      newStat.stl -= 1;\n      return newStat;\n    default:\n      return stat;\n  }\n};\n\nconst statReducer = (\n  state = initialState,\n  action: StatActionTypes\n): StatState => {\n  const emptyStat: Stat = {\n    playerNumber: 0,\n    onePm: 0,\n    twoPm: 0,\n    threePm: 0,\n    onePa: 0,\n    twoPa: 0,\n    threePa: 0,\n    orb: 0,\n    to: 0,\n    drb: 0,\n    ast: 0,\n    blk: 0,\n    stl: 0,\n  };\n  let currStat: Stat;\n\n  switch (action.type) {\n    case ADD_STAT:\n      if (\n        state.stats.find((s) => s.playerNumber === action.payload.playerNumber)\n      ) {\n        currStat = state.stats.find(\n          (s) => s.playerNumber === action.payload.playerNumber\n        )!;\n        currStat = addStat(currStat, action.payload.gameEvent);\n        const updatedStats = state.stats.map((s) =>\n          s.playerNumber === action.payload.playerNumber ? currStat : s\n        );\n        return { stats: [...updatedStats] };\n      }\n      currStat = emptyStat;\n      currStat.playerNumber = action.payload.playerNumber;\n      currStat = addStat(currStat, action.payload.gameEvent);\n      return { ...state, stats: [...state.stats, currStat] };\n    case RESET_STATS:\n      return { ...state, stats: action.payload };\n    case REMOVE_STAT:\n      if (\n        state.stats.find((s) => s.playerNumber === action.payload.playerNumber)\n      ) {\n        currStat = state.stats.find(\n          (s) => s.playerNumber === action.payload.playerNumber\n        )!;\n        currStat = removeStat(currStat, action.payload.gameEvent);\n        const updatedStats = state.stats.map((s) =>\n          s.playerNumber === action.payload.playerNumber ? currStat : s\n        );\n        return { ...state, stats: [...updatedStats] };\n      }\n      return state;\n    default:\n      return state;\n  }\n};\n\nexport default statReducer;\n","import { Action } from 'redux';\n\nexport interface Stat {\n  playerNumber: number;\n  onePm: number;\n  twoPm: number;\n  threePm: number;\n  onePa: number;\n  twoPa: number;\n  threePa: number;\n  orb: number;\n  to: number;\n  drb: number;\n  ast: number;\n  blk: number;\n  stl: number;\n}\n\nexport interface StatToDB {\n  playerNumber: number;\n  onePm: number;\n  twoPm: number;\n  threePm: number;\n  onePa: number;\n  twoPa: number;\n  threePa: number;\n  orb: number;\n  to: number;\n  drb: number;\n  ast: number;\n  blk: number;\n  stl: number;\n  game: string;\n}\n\nexport interface StatFromDB {\n  id: string;\n  playerNumber: number;\n  onePm: number;\n  twoPm: number;\n  threePm: number;\n  onePa: number;\n  twoPa: number;\n  threePa: number;\n  orb: number;\n  to: number;\n  drb: number;\n  ast: number;\n  blk: number;\n  stl: number;\n  game: string;\n}\n\nexport interface StatEvent {\n  gameEvent: string;\n  playerNumber: number;\n}\n\nexport interface StatState {\n  stats: Stat[];\n}\n\nexport const ADD_STAT = 'ADD_STAT';\nexport const RESET_STATS = 'RESET_STATS';\nexport const REMOVE_STAT = 'REMOVE_STAT';\n\ninterface AddStatAction extends Action<typeof ADD_STAT> {\n  type: typeof ADD_STAT;\n  payload: StatEvent;\n}\n\ninterface ResetStatAction extends Action<typeof RESET_STATS> {\n  type: typeof RESET_STATS;\n  payload: Stat[];\n}\n\ninterface RemoveStatAction extends Action<typeof REMOVE_STAT> {\n  type: typeof REMOVE_STAT;\n  payload: StatEvent;\n}\n\nexport type StatActionTypes =\n  | AddStatAction\n  | ResetStatAction\n  | RemoveStatAction;\n","import {\n  PlayerState,\n  ADD_PLAYER,\n  UPDATE_PLAYER,\n  INIT_PLAYERS,\n  PlayerActionTypes,\n  Player,\n  RESET_PLAYERS,\n} from './types';\n\nconst initialState: PlayerState = {\n  players: [],\n};\n\nconst playerReducer = (\n  state = initialState,\n  action: PlayerActionTypes\n): PlayerState => {\n  let currPlayer: Player;\n\n  switch (action.type) {\n    case INIT_PLAYERS:\n      return { ...state, players: action.payload };\n    case ADD_PLAYER:\n      return { ...state, players: [...state.players, action.payload] };\n    case UPDATE_PLAYER:\n      if (state.players.find((p) => p.id === action.payload.id)) {\n        currPlayer = state.players.find((p) => p.id === action.payload.id)!;\n        currPlayer.playerName = action.payload.playerName;\n        currPlayer.playerNumber = action.payload.playerNumber;\n        const updatedPlayers = state.players.map((p) =>\n          p.id === action.payload.id ? currPlayer : p\n        );\n        return { ...state, players: [...updatedPlayers] };\n      }\n      return state;\n    case RESET_PLAYERS:\n      return { ...state, players: action.payload };\n    default:\n      return state;\n  }\n};\n\nexport default playerReducer;\n","import { Action } from 'redux';\n\nexport interface Player {\n  id: string;\n  playerNumber: number;\n  playerName: string;\n  team: string;\n}\n\nexport interface PlayerInput {\n  playerNumber: number;\n  playerName: string;\n  team: string;\n}\n\nexport interface PlayerState {\n  players: Player[];\n}\n\nexport const ADD_PLAYER = 'ADD_PLAYER';\nexport const UPDATE_PLAYER = 'UPDATE_PLAYER';\nexport const INIT_PLAYERS = 'INIT_PLAYERS';\nexport const RESET_PLAYERS = 'RESET_PLAYERS';\n\nexport interface AddPlayerAction extends Action<typeof ADD_PLAYER> {\n  type: typeof ADD_PLAYER;\n  payload: Player;\n}\n\ninterface UpdatePlayerAction extends Action<typeof UPDATE_PLAYER> {\n  type: typeof UPDATE_PLAYER;\n  payload: Player;\n}\n\nexport interface InitPlayersAction extends Action<typeof INIT_PLAYERS> {\n  type: typeof INIT_PLAYERS;\n  payload: Player[];\n}\n\ninterface ResetPlayersAction extends Action<typeof RESET_PLAYERS> {\n  type: typeof RESET_PLAYERS;\n  payload: Player[];\n}\n\nexport type PlayerActionTypes =\n  | AddPlayerAction\n  | UpdatePlayerAction\n  | InitPlayersAction\n  | ResetPlayersAction;\n","import { UserState, LOGIN, LOGOUT, UserActionTypes } from './types';\n\nconst initialState: UserState = {\n  user: null,\n};\n\nconst userReducer = (\n  state = initialState,\n  action: UserActionTypes\n): UserState => {\n  switch (action.type) {\n    case LOGIN:\n      return { ...state, user: action.payload };\n    case LOGOUT:\n      return { ...state, user: null };\n    default:\n      return state;\n  }\n};\nexport default userReducer;\n","import {\n  TeamState,\n  ADD_TEAM,\n  UPDATE_TEAM,\n  INIT_TEAMS,\n  RESET_TEAMS,\n  TeamActionTypes,\n  Team,\n} from './types';\n\nconst initialState: TeamState = {\n  teams: [],\n};\n\nconst teamReducer = (\n  state = initialState,\n  action: TeamActionTypes\n): TeamState => {\n  let currTeam: Team;\n\n  switch (action.type) {\n    case INIT_TEAMS:\n      return { ...state, teams: action.payload };\n    case ADD_TEAM:\n      return { ...state, teams: [...state.teams, action.payload] };\n    case UPDATE_TEAM:\n      if (state.teams.find((p) => p.id === action.payload.id)) {\n        currTeam = state.teams.find((p) => p.id === action.payload.id)!;\n        currTeam.teamName = action.payload.teamName;\n        const updatedPlayers = state.teams.map((p) =>\n          p.id === action.payload.id ? currTeam : p\n        );\n        return { ...state, teams: [...updatedPlayers] };\n      }\n      return state;\n    case RESET_TEAMS:\n      return { ...state, teams: [] };\n    default:\n      return state;\n  }\n};\n\nexport default teamReducer;\n","import { Action } from 'redux';\n\nexport interface Team {\n  id: string;\n  teamName: string;\n}\n\nexport interface TeamInput {\n  teamName: string;\n}\n\nexport interface TeamState {\n  teams: Team[];\n}\n\nexport const ADD_TEAM = 'ADD_TEAM';\nexport const UPDATE_TEAM = 'UPDATE_TEAM';\nexport const INIT_TEAMS = 'INIT_TEAMS';\nexport const RESET_TEAMS = 'RESET_TEAMS';\n\nexport interface AddTeamAction extends Action<typeof ADD_TEAM> {\n  type: typeof ADD_TEAM;\n  payload: Team;\n}\n\nexport interface UpdateTeamAction extends Action<typeof UPDATE_TEAM> {\n  type: typeof UPDATE_TEAM;\n  payload: Team;\n}\n\nexport interface InitTeamsAction extends Action<typeof INIT_TEAMS> {\n  type: typeof INIT_TEAMS;\n  payload: Team[];\n}\n\ninterface ResetTeamsAction extends Action<typeof RESET_TEAMS> {\n  type: typeof RESET_TEAMS;\n}\n\nexport type TeamActionTypes =\n  | AddTeamAction\n  | UpdateTeamAction\n  | InitTeamsAction\n  | ResetTeamsAction;\n","import { GameState, ADD_GAME, GameActionTypes, RESET_GAME } from './types';\n\nconst initialState: GameState = {\n  game: {\n    id: '',\n    homeTeam: '',\n    awayTeam: '',\n    gameNumber: '',\n    description: '',\n    gameDate: '',\n    team: '',\n  },\n};\n\nconst gameReducer = (\n  state = initialState,\n  action: GameActionTypes\n): GameState => {\n  switch (action.type) {\n    case RESET_GAME:\n      return { ...state, game: action.payload };\n    case ADD_GAME:\n      return { ...state, game: action.payload };\n    default:\n      return state;\n  }\n};\n\nexport default gameReducer;\n","import { Action } from 'redux';\n\nexport interface Game {\n  id: string;\n  homeTeam: string;\n  awayTeam: string;\n  gameNumber: string;\n  description: string;\n  gameDate: string;\n  team: string;\n}\n\nexport interface GameInput {\n  homeTeam: string;\n  awayTeam: string;\n  gameNumber: string;\n  description: string;\n  gameDate: string;\n  team: string;\n}\n\nexport interface GameState {\n  game: Game;\n}\n\nexport const ADD_GAME = 'ADD_GAME';\nexport const ADD_TO_ROSTER = 'ADD_TO_ROSTER';\nexport const REMOVE_FROM_ROSTER = 'REMOVE_FROM_ROSTER';\nexport const RESET_GAME = 'RESET_GAME';\n\nexport interface AddGameAction extends Action<typeof ADD_GAME> {\n  type: typeof ADD_GAME;\n  payload: Game;\n}\n\ninterface ResetGameAction extends Action<typeof RESET_GAME> {\n  type: typeof RESET_GAME;\n  payload: Game;\n}\n\nexport type GameActionTypes = AddGameAction | ResetGameAction;\n","import {\n  RosterState,\n  ADD_TO_ROSTER,\n  REMOVE_FROM_ROSTER,\n  RESET_ROSTER,\n  RosterActionTypes,\n} from './types';\nimport { Player } from '../player/types';\n\nconst initialState: RosterState = {\n  roster: [],\n};\n\nconst rosterReducer = (\n  state = initialState,\n  action: RosterActionTypes\n): RosterState => {\n  let newRoster: Player[];\n  switch (action.type) {\n    case ADD_TO_ROSTER:\n      return { ...state, roster: [...state.roster, action.payload] };\n    case REMOVE_FROM_ROSTER:\n      newRoster = state.roster.filter((p) => p.id !== action.payload.id);\n      return { ...state, roster: newRoster };\n    case RESET_ROSTER:\n      return { ...state, roster: action.payload };\n    default:\n      return state;\n  }\n};\n\nexport default rosterReducer;\n","import { Action } from 'redux';\nimport { Player } from '../player/types';\n\nexport interface RosterState {\n  roster: Player[];\n}\n\nexport const ADD_TO_ROSTER = 'ADD_TO_ROSTER';\nexport const REMOVE_FROM_ROSTER = 'REMOVE_FROM_ROSTER';\nexport const RESET_ROSTER = 'RESET_ROSTER';\n\ninterface AddToRosterAction extends Action<typeof ADD_TO_ROSTER> {\n  type: typeof ADD_TO_ROSTER;\n  payload: Player;\n}\n\ninterface RemoveFromRosterAction extends Action<typeof REMOVE_FROM_ROSTER> {\n  type: typeof REMOVE_FROM_ROSTER;\n  payload: Player;\n}\n\ninterface ResetRosterAction extends Action<typeof RESET_ROSTER> {\n  type: typeof RESET_ROSTER;\n  payload: Player[];\n}\n\nexport type RosterActionTypes =\n  | AddToRosterAction\n  | RemoveFromRosterAction\n  | ResetRosterAction;\n","import { HeaderState, HeaderActionTypes, SET_TITLE } from './types';\n\nconst initialState: HeaderState = {\n  title: '',\n};\n\nconst headerReducer = (\n  state = initialState,\n  action: HeaderActionTypes\n): HeaderState => {\n  switch (action.type) {\n    case SET_TITLE:\n      return { ...state, title: action.payload };\n    default:\n      return state;\n  }\n};\n\nexport default headerReducer;\n","import { Action } from 'redux';\n\nexport interface HeaderTitle {\n  title: string;\n}\n\nexport interface HeaderState {\n  title: string;\n}\n\nexport const SET_TITLE = 'SET_TITLE';\n\ninterface SetTitleAction extends Action<typeof SET_TITLE> {\n  type: typeof SET_TITLE;\n  payload: string;\n}\n\nexport type HeaderActionTypes = SetTitleAction;\n","import {\n  ScoreActionTypes,\n  ScoreState,\n  ADD_ONE,\n  ADD_TWO,\n  ADD_THREE,\n  REDUCE_ONE,\n  REDUCE_TWO,\n  REDUCE_THREE,\n} from './types';\n\nconst initialState: ScoreState = {\n  score: 0,\n};\n\nconst scoreReducer = (\n  state = initialState,\n  action: ScoreActionTypes\n): ScoreState => {\n  let newScore: number;\n  switch (action.type) {\n    case ADD_ONE:\n      newScore = state.score + 1;\n      return { ...state, score: newScore };\n    case ADD_TWO:\n      newScore = state.score + 2;\n      return { ...state, score: newScore };\n    case ADD_THREE:\n      newScore = state.score + 3;\n      return { ...state, score: newScore };\n    case REDUCE_ONE:\n      newScore = state.score - 1;\n      return { ...state, score: newScore };\n    case REDUCE_TWO:\n      newScore = state.score - 2;\n      return { ...state, score: newScore };\n    case REDUCE_THREE:\n      newScore = state.score - 3;\n      return { ...state, score: newScore };\n    default:\n      return state;\n  }\n};\n\nexport default scoreReducer;\n","import { Action } from 'redux';\n\nexport const ADD_ONE = 'ADD_ONE';\nexport const ADD_TWO = 'ADD_TWO';\nexport const ADD_THREE = 'ADD_THREE';\nexport const REDUCE_ONE = 'REDUCE_ONE';\nexport const REDUCE_TWO = 'REDUCE_TWO';\nexport const REDUCE_THREE = 'REDUCE_THREE';\n\nexport interface ScoreState {\n  score: number;\n}\n\ninterface AddOneAction extends Action<typeof ADD_ONE> {}\n\ninterface AddTwoAction extends Action<typeof ADD_TWO> {}\n\ninterface AddThreeAction extends Action<typeof ADD_THREE> {}\n\ninterface ReduceOneAction extends Action<typeof REDUCE_ONE> {}\n\ninterface ReduceTwoAction extends Action<typeof REDUCE_TWO> {}\n\ninterface ReduceThreeAction extends Action<typeof REDUCE_THREE> {}\n\nexport type ScoreActionTypes =\n  | AddOneAction\n  | AddTwoAction\n  | AddThreeAction\n  | ReduceOneAction\n  | ReduceTwoAction\n  | ReduceThreeAction;\n","import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport eventReducer from './event/reducers';\nimport statReducer from './stat/reducers';\nimport playerReducer from './player/reducers';\nimport userReducer from './user/reducers';\nimport teamReducer from './team/reducers';\nimport gameReducer from './game/reducers';\nimport rosterReducer from './roster/reducers';\nimport headerReducer from './header/reducers';\nimport scoreReducer from './score/reducers';\n\nconst rootReducer = combineReducers({\n  events: eventReducer,\n  players: playerReducer,\n  stats: statReducer,\n  user: userReducer,\n  teams: teamReducer,\n  game: gameReducer,\n  roster: rosterReducer,\n  header: headerReducer,\n  score: scoreReducer,\n});\n\nexport const getEvent = (state: AppState) => {\n  return state.events.events[0];\n};\n\nexport const getEvents = (state: AppState) => {\n  return state.events.events;\n};\n\nexport const getPlayers = (state: AppState) => {\n  return state.players.players;\n};\n\nexport const getStats = (state: AppState) => {\n  return state.stats.stats;\n};\n\nexport const getUser = (state: AppState) => {\n  return state.user.user;\n};\n\nexport const getTeams = (state: AppState) => {\n  return state.teams.teams;\n};\n\nexport const getGameTeam = (state: AppState) => {\n  return state.game.game.team;\n};\n\nexport const getGameId = (state: AppState) => {\n  return state.game.game.id;\n};\n\nexport const getToken = (state: AppState) => {\n  return state.user.user?.token;\n};\n\nexport const getRoster = (state: AppState) => {\n  return state.roster.roster;\n};\n\nexport const getHeaderTitle = (state: AppState) => {\n  return state.header.title;\n};\n\nexport const getScore = (state: AppState) => {\n  return state.score.score;\n};\n\nexport type AppState = ReturnType<typeof rootReducer>;\n\nconst store = createStore(\n  rootReducer,\n  composeWithDevTools(applyMiddleware(thunk))\n);\n\nexport default store;\n","interface Authorization {\n  Authorization: string;\n}\n\nexport interface AxiosAuthConfig {\n  headers: Authorization;\n}\n\nexport const setAuthHeader = (token: string | undefined): AxiosAuthConfig => {\n  const tokenWithBearer = `Bearer ${token}`;\n  return { headers: { Authorization: tokenWithBearer } };\n};\n","import axios from 'axios';\nimport store, { getUser, getToken } from '../store';\nimport { Team, TeamInput } from '../store/team/types';\nimport { Game } from '../store/game/types';\nimport { setAuthHeader, AxiosAuthConfig } from '../utils';\n\nconst baseUrl = '/api/teams';\n\nconst getAll = async (): Promise<Team[]> => {\n  let config: AxiosAuthConfig;\n  if (getUser(store.getState())) {\n    config = setAuthHeader(getToken(store.getState()));\n    return (await axios.get(baseUrl, config)).data;\n  }\n\n  return [];\n};\n\nconst getGamesByTeam = async (team: Team['id']): Promise<Game[]> => {\n  let config: AxiosAuthConfig;\n  if (getUser(store.getState())) {\n    config = setAuthHeader(getToken(store.getState()));\n    return (await axios.get(`${baseUrl}/${team}/games`, config)).data;\n  }\n  return [];\n};\n\nconst createTeam = async (team: TeamInput): Promise<Team | undefined> => {\n  let config: AxiosAuthConfig;\n  if (getUser(store.getState())) {\n    config = setAuthHeader(getToken(store.getState()));\n    return (await axios.post(baseUrl, team, config)).data;\n  }\n  return undefined;\n};\n\nconst updateTeam = async (team: Team): Promise<Team | undefined> => {\n  let config: AxiosAuthConfig;\n  if (getUser(store.getState())) {\n    config = setAuthHeader(getToken(store.getState()));\n    return (\n      await axios.put(\n        `${baseUrl}/${team.id}`,\n        { teamName: team.teamName },\n        config\n      )\n    ).data;\n  }\n  return undefined;\n};\n\nexport default { getAll, getGamesByTeam, createTeam, updateTeam };\n","import { Dispatch, ActionCreator } from 'redux';\nimport { ThunkAction } from 'redux-thunk';\nimport {\n  Team,\n  ADD_TEAM,\n  UPDATE_TEAM,\n  INIT_TEAMS,\n  RESET_TEAMS,\n  InitTeamsAction,\n  AddTeamAction,\n  UpdateTeamAction,\n  TeamInput,\n} from './types';\nimport teamService from '../../services/teams';\n\nexport const addTeam: ActionCreator<ThunkAction<\n  Promise<AddTeamAction>,\n  Team,\n  TeamInput,\n  AddTeamAction\n>> = (teamInput: TeamInput) => {\n  return async (dispatch: Dispatch) => {\n    const payload = await teamService.createTeam(teamInput);\n    if (!payload) throw new Error('Team creation failed.');\n    const addTeamAction: AddTeamAction = {\n      type: ADD_TEAM,\n      payload,\n    };\n    return dispatch(addTeamAction);\n  };\n};\n\nexport const updateTeam: ActionCreator<ThunkAction<\n  Promise<UpdateTeamAction>,\n  Team,\n  Team,\n  UpdateTeamAction\n>> = (team: Team) => {\n  return async (dispatch: Dispatch) => {\n    const payload = await teamService.updateTeam(team);\n    if (!payload) throw new Error('Team update failed.');\n    const updateTeamAction: UpdateTeamAction = {\n      type: UPDATE_TEAM,\n      payload,\n    };\n    return dispatch(updateTeamAction);\n  };\n};\n\n/*\nexport const updateTeam = (payload: Team) => {\n  return {\n    type: UPDATE_TEAM,\n    payload,\n  };\n};\n*/\n\nexport const initTeams: ActionCreator<ThunkAction<\n  Promise<void>,\n  Team[],\n  null,\n  InitTeamsAction\n>> = () => {\n  return async (dispatch: Dispatch) => {\n    const payload = await teamService.getAll();\n    dispatch({\n      type: INIT_TEAMS,\n      payload,\n    });\n  };\n};\n\nexport const resetTeams = () => {\n  return {\n    type: RESET_TEAMS,\n  };\n};\n","import axios from 'axios';\nimport store, { getUser, getToken } from '../store';\nimport { Player, PlayerInput } from '../store/player/types';\nimport { setAuthHeader, AxiosAuthConfig } from '../utils';\n\nconst baseUrl = '/api/players';\n\nconst getAll = async (): Promise<Player[]> => {\n  let config: AxiosAuthConfig;\n  if (getUser(store.getState())) {\n    config = setAuthHeader(getToken(store.getState()));\n    return (await axios.get(baseUrl, config)).data;\n  }\n  return [];\n};\n\nconst createPlayer = async (\n  player: PlayerInput\n): Promise<Player | undefined> => {\n  let config: AxiosAuthConfig;\n  if (getUser(store.getState())) {\n    config = setAuthHeader(getToken(store.getState()));\n    return (await axios.post(baseUrl, player, config)).data;\n  }\n\n  return undefined;\n};\n\nexport default { getAll, createPlayer };\n","import { Dispatch, ActionCreator } from 'redux';\nimport { ThunkAction } from 'redux-thunk';\nimport {\n  Player,\n  ADD_PLAYER,\n  UPDATE_PLAYER,\n  INIT_PLAYERS,\n  InitPlayersAction,\n  AddPlayerAction,\n  PlayerInput,\n  RESET_PLAYERS,\n} from './types';\nimport playerService from '../../services/players';\n\nexport const addPlayer: ActionCreator<ThunkAction<\n  Promise<AddPlayerAction>,\n  Player,\n  PlayerInput,\n  AddPlayerAction\n>> = (playerInput: PlayerInput) => {\n  return async (dispatch: Dispatch) => {\n    const payload = await playerService.createPlayer(playerInput);\n    if (!payload) throw new Error('Player creation failed.');\n    const addPlayerAction: AddPlayerAction = {\n      type: ADD_PLAYER,\n      payload,\n    };\n    return dispatch(addPlayerAction);\n  };\n};\n\nexport const addLoggedOutPlayer = (payload: Player) => {\n  return {\n    type: ADD_PLAYER,\n    payload,\n  };\n};\n\nexport const updatePlayer = (payload: Player) => {\n  return {\n    type: UPDATE_PLAYER,\n    payload,\n  };\n};\n\nexport const initPlayers: ActionCreator<ThunkAction<\n  Promise<void>,\n  Player[],\n  null,\n  InitPlayersAction\n>> = () => {\n  return async (dispatch: Dispatch) => {\n    const payload = await playerService.getAll();\n    dispatch({\n      type: INIT_PLAYERS,\n      payload,\n    });\n  };\n};\n\nexport const resetPlayers = (payload: Player[] = []) => {\n  return {\n    type: RESET_PLAYERS,\n    payload,\n  };\n};\n","import { SET_TITLE } from './types';\n\nexport const setHeaderTitle = (title: string) => {\n  return {\n    type: SET_TITLE,\n    payload: title,\n  };\n};\n","import axios from 'axios';\nimport store, { getUser, getToken } from '../store';\nimport { Game, GameInput } from '../store/game/types';\nimport { Stat } from '../store/stat/types';\nimport { setAuthHeader, AxiosAuthConfig } from '../utils';\n\nconst baseUrl = '/api/games';\n\nconst getAll = async (): Promise<Game[]> => {\n  let config: AxiosAuthConfig;\n  if (getUser(store.getState())) {\n    config = setAuthHeader(getToken(store.getState()));\n    return (await axios.get(baseUrl, config)).data;\n  }\n  return [];\n};\n\nconst getStatsByGame = async (game: Game['id']): Promise<Stat[]> => {\n  let config: AxiosAuthConfig;\n  if (getUser(store.getState())) {\n    config = setAuthHeader(getToken(store.getState()));\n    return (await axios.get(`${baseUrl}/${game}/stats`, config)).data;\n  }\n  return [];\n};\n\nconst createGame = async (game: GameInput): Promise<Game | undefined> => {\n  let config: AxiosAuthConfig;\n  if (getUser(store.getState())) {\n    config = setAuthHeader(getToken(store.getState()));\n    return (await axios.post(baseUrl, game, config)).data;\n  }\n\n  return undefined;\n};\n\nexport default { getAll, createGame, getStatsByGame };\n","import { Dispatch, ActionCreator } from 'redux';\nimport { ThunkAction } from 'redux-thunk';\nimport { Game, ADD_GAME, AddGameAction, GameInput, RESET_GAME } from './types';\nimport gameService from '../../services/games';\n\nexport const addGame: ActionCreator<ThunkAction<\n  Promise<AddGameAction>,\n  Game,\n  GameInput,\n  AddGameAction\n>> = (gameInput: GameInput) => {\n  return async (dispatch: Dispatch) => {\n    const payload = await gameService.createGame(gameInput);\n    if (!payload) throw new Error('Game creation failed.');\n    const addGameAction: AddGameAction = {\n      type: ADD_GAME,\n      payload,\n    };\n    return dispatch(addGameAction);\n  };\n};\n\nexport const resetGame = () => {\n  return {\n    type: RESET_GAME,\n    payload: {\n      id: '',\n      homeTeam: '',\n      awayTeam: '',\n      gameNumber: '',\n      description: '',\n      gameDate: '',\n      team: '',\n    },\n  };\n};\n","import { ADD_TO_ROSTER, REMOVE_FROM_ROSTER, RESET_ROSTER } from './types';\nimport { Player } from '../player/types';\n\nexport const addToRoster = (payload: Player) => {\n  return {\n    type: ADD_TO_ROSTER,\n    payload,\n  };\n};\n\nexport const removeFromRoster = (payload: Player) => {\n  return {\n    type: REMOVE_FROM_ROSTER,\n    payload,\n  };\n};\n\nexport const resetRoster = (payload: Player[] = []) => {\n  return {\n    type: RESET_ROSTER,\n    payload,\n  };\n};\n","import { ADD_STAT, StatEvent, Stat, RESET_STATS, REMOVE_STAT } from './types';\n\nexport const addStat = (data: StatEvent) => {\n  return {\n    type: ADD_STAT,\n    payload: data,\n  };\n};\n\nexport const resetStats = (payload: Stat[] = []) => {\n  return {\n    type: RESET_STATS,\n    payload,\n  };\n};\n\nexport const removeStat = (data: StatEvent) => {\n  return {\n    type: REMOVE_STAT,\n    payload: data,\n  };\n};\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport Typography from '@material-ui/core/Typography';\nimport { List, ListItem, ListItemIcon, ListItemText } from '@material-ui/core';\nimport HomeIcon from '@material-ui/icons/Home';\nimport GroupIcon from '@material-ui/icons/Group';\nimport PersonIcon from '@material-ui/icons/Person';\nimport PlayCircleFilledIcon from '@material-ui/icons/PlayCircleFilled';\nimport TableChartIcon from '@material-ui/icons/TableChart';\nimport { setHeaderTitle } from '../../store/header/actions';\nimport {\n  HOME_TITLE,\n  PLAYERS_TITLE,\n  STATS_TITLE,\n  TEAMS_TITLE,\n  RECORD_TITLE,\n} from '../../constants/text';\n\nconst LoggedInMenu: React.FC = () => {\n  const dispatch = useDispatch();\n  return (\n    <List>\n      <ListItem\n        onClick={() => dispatch(setHeaderTitle(HOME_TITLE))}\n        component={Link}\n        to=\"/\"\n        button\n      >\n        <ListItemIcon>\n          <HomeIcon />\n        </ListItemIcon>\n        <ListItemText>\n          <Typography variant=\"button\" display=\"block\" color=\"textSecondary\">\n            {HOME_TITLE}\n          </Typography>\n        </ListItemText>\n      </ListItem>\n      <ListItem\n        onClick={() => dispatch(setHeaderTitle(PLAYERS_TITLE))}\n        component={Link}\n        to=\"/player\"\n        button\n      >\n        <ListItemIcon>\n          <PersonIcon />\n        </ListItemIcon>\n        <ListItemText>\n          <Typography variant=\"button\" display=\"block\" color=\"textSecondary\">\n            {PLAYERS_TITLE}\n          </Typography>\n        </ListItemText>\n      </ListItem>\n      <ListItem\n        onClick={() => dispatch(setHeaderTitle(TEAMS_TITLE))}\n        component={Link}\n        to=\"/team\"\n        button\n      >\n        <ListItemIcon>\n          <GroupIcon />\n        </ListItemIcon>\n        <ListItemText>\n          <Typography variant=\"button\" display=\"block\" color=\"textSecondary\">\n            {TEAMS_TITLE}\n          </Typography>\n        </ListItemText>\n      </ListItem>\n      <ListItem\n        onClick={() => dispatch(setHeaderTitle(RECORD_TITLE))}\n        component={Link}\n        to=\"/record\"\n        button\n      >\n        <ListItemIcon>\n          <PlayCircleFilledIcon />\n        </ListItemIcon>\n        <ListItemText>\n          <Typography variant=\"button\" display=\"block\" color=\"textSecondary\">\n            {RECORD_TITLE}\n          </Typography>\n        </ListItemText>\n      </ListItem>\n      <ListItem\n        onClick={() => dispatch(setHeaderTitle(STATS_TITLE))}\n        component={Link}\n        to=\"/statselect\"\n        button\n      >\n        <ListItemIcon>\n          <TableChartIcon />\n        </ListItemIcon>\n        <ListItemText>\n          <Typography variant=\"button\" display=\"block\" color=\"textSecondary\">\n            {STATS_TITLE}\n          </Typography>\n        </ListItemText>\n      </ListItem>\n    </List>\n  );\n};\n\nexport default LoggedInMenu;\n","export const HOME_TITLE = 'Home';\nexport const PLAYERS_TITLE = 'Players';\nexport const TEAMS_TITLE = 'Teams';\nexport const STATS_TITLE = 'Stats';\nexport const RECORD_TITLE = 'Record';\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport Typography from '@material-ui/core/Typography';\nimport { List, ListItem, ListItemIcon, ListItemText } from '@material-ui/core';\nimport HomeIcon from '@material-ui/icons/Home';\nimport PersonIcon from '@material-ui/icons/Person';\nimport PlayCircleFilledIcon from '@material-ui/icons/PlayCircleFilled';\nimport TableChartIcon from '@material-ui/icons/TableChart';\nimport { setHeaderTitle } from '../../store/header/actions';\nimport {\n  HOME_TITLE,\n  PLAYERS_TITLE,\n  STATS_TITLE,\n  RECORD_TITLE,\n} from '../../constants/text';\n\nconst LoggedInMenu: React.FC = () => {\n  const dispatch = useDispatch();\n  return (\n    <List>\n      <ListItem\n        onClick={() => dispatch(setHeaderTitle(HOME_TITLE))}\n        component={Link}\n        to=\"/\"\n        button\n      >\n        <ListItemIcon>\n          <HomeIcon />\n        </ListItemIcon>\n        <ListItemText>\n          <Typography variant=\"button\" display=\"block\" color=\"textSecondary\">\n            {HOME_TITLE}\n          </Typography>\n        </ListItemText>\n      </ListItem>\n      <ListItem\n        onClick={() => dispatch(setHeaderTitle(PLAYERS_TITLE))}\n        component={Link}\n        to=\"/loggedoutplayer\"\n        button\n      >\n        <ListItemIcon>\n          <PersonIcon />\n        </ListItemIcon>\n        <ListItemText>\n          <Typography variant=\"button\" display=\"block\" color=\"textSecondary\">\n            {PLAYERS_TITLE}\n          </Typography>\n        </ListItemText>\n      </ListItem>\n      <ListItem\n        onClick={() => dispatch(setHeaderTitle(RECORD_TITLE))}\n        component={Link}\n        to=\"/loggedoutrecord\"\n        button\n      >\n        <ListItemIcon>\n          <PlayCircleFilledIcon />\n        </ListItemIcon>\n        <ListItemText>\n          <Typography variant=\"button\" display=\"block\" color=\"textSecondary\">\n            {RECORD_TITLE}\n          </Typography>\n        </ListItemText>\n      </ListItem>\n      <ListItem\n        onClick={() => dispatch(setHeaderTitle(STATS_TITLE))}\n        component={Link}\n        to=\"/loggedoutstats\"\n        button\n      >\n        <ListItemIcon>\n          <TableChartIcon />\n        </ListItemIcon>\n        <ListItemText>\n          <Typography variant=\"button\" display=\"block\" color=\"textSecondary\">\n            {STATS_TITLE}\n          </Typography>\n        </ListItemText>\n      </ListItem>\n    </List>\n  );\n};\n\nexport default LoggedInMenu;\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\nimport { useHistory } from 'react-router-dom';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport { Avatar, Drawer, Button } from '@material-ui/core';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport SportsBasketballIcon from '@material-ui/icons/SportsBasketball';\n\nimport { orange, grey } from '@material-ui/core/colors';\nimport LoginDialog from '../../components/dialog/LoginDialog';\nimport { LoginInput } from '../../store/user/types';\nimport loginService from '../../services/login';\nimport { loginUser, logoutUser } from '../../store/user/actions';\nimport { initTeams, resetTeams } from '../../store/team/actions';\nimport { initPlayers, resetPlayers } from '../../store/player/actions';\nimport { setHeaderTitle } from '../../store/header/actions';\nimport { resetGame } from '../../store/game/actions';\nimport { resetRoster } from '../../store/roster/actions';\nimport { resetStats } from '../../store/stat/actions';\nimport store, { getHeaderTitle } from '../../store';\nimport LoggedInMenu from './LoggedInMenu';\nimport LoggedOutMenu from './LoggedOutMenu';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      flexGrow: 1,\n    },\n    menuButton: {\n      marginRight: theme.spacing(2),\n    },\n    title: {\n      flexGrow: 1,\n    },\n    list: {\n      width: 250,\n    },\n    fullList: {\n      width: 'auto',\n    },\n    avatar: {\n      color: orange[800],\n      width: theme.spacing(4),\n      height: theme.spacing(4),\n      backgroundColor: grey[300],\n      boxShadow: '3px 3px 4px 2px #880e4f',\n    },\n    basketball: {\n      fontSize: 36,\n    },\n    appbar: {\n      borderRadius: 8,\n      backgroundColor: theme.palette.primary.dark,\n    },\n  })\n);\n\ninterface Props {\n  loggedIn: boolean;\n  setLoggedIn: (value: boolean) => void;\n}\n\nconst Header: React.FC<Props> = ({ loggedIn, setLoggedIn }) => {\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const classes = useStyles();\n  const [drawerOpen, setDrawerOpen] = React.useState<boolean>(false);\n  const [dialogOpen, setDialogOpen] = React.useState<boolean>(false);\n\n  const openDialog = (): void => {\n    setDialogOpen(true);\n  };\n  const closeDialog = (): void => {\n    setDialogOpen(false);\n  };\n  const handleLogin = async (values: LoginInput) => {\n    closeDialog();\n    try {\n      const user = await loginService.login(values);\n      dispatch(loginUser(user));\n      window.localStorage.setItem('basketBallStatUser', JSON.stringify(user));\n      setLoggedIn(true);\n      dispatch(resetRoster());\n      dispatch(resetStats());\n      dispatch(initTeams());\n      dispatch(initPlayers());\n      dispatch(setHeaderTitle('Home'));\n      history.push('/');\n    } catch (error) {\n      console.error('invalid username or password');\n    }\n  };\n  const handleLogout = () => {\n    dispatch(logoutUser(null));\n    window.localStorage.removeItem('basketBallStatUser');\n    setLoggedIn(false);\n    dispatch(resetGame());\n    dispatch(resetPlayers());\n    dispatch(resetRoster());\n    dispatch(resetStats());\n    dispatch(resetTeams());\n    dispatch(setHeaderTitle('Home'));\n    history.push('/');\n  };\n\n  const toggleDrawer = (open: boolean) => (\n    event: React.KeyboardEvent | React.MouseEvent\n  ) => {\n    if (\n      event.type === 'keydown' &&\n      ((event as React.KeyboardEvent).key === 'Tab' ||\n        (event as React.KeyboardEvent).key === 'Shift')\n    ) {\n      return;\n    }\n    setDrawerOpen(open);\n  };\n\n  const list = () => (\n    <div\n      className={classes.list}\n      role=\"presentation\"\n      onClick={toggleDrawer(false)}\n      onKeyDown={toggleDrawer(false)}\n    >\n      {loggedIn ? <LoggedInMenu /> : <LoggedOutMenu />}\n    </div>\n  );\n\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"static\" className={classes.appbar}>\n        <Toolbar>\n          <IconButton\n            edge=\"start\"\n            className={classes.menuButton}\n            color=\"inherit\"\n            onClick={toggleDrawer(true)}\n          >\n            <MenuIcon />\n          </IconButton>\n          <Typography variant=\"h5\">\n            {getHeaderTitle(store.getState())}\n          </Typography>\n          <Typography variant=\"h6\" className={classes.title} />\n          {loggedIn ? (\n            <IconButton onClick={() => handleLogout()}>\n              <Avatar className={classes.avatar}>\n                <SportsBasketballIcon className={classes.basketball} />\n              </Avatar>\n            </IconButton>\n          ) : (\n            <Button color=\"inherit\" onClick={() => openDialog()}>\n              Login\n            </Button>\n          )}\n        </Toolbar>\n        <Drawer anchor=\"right\" open={drawerOpen} onClose={toggleDrawer(false)}>\n          {list()}\n        </Drawer>\n      </AppBar>\n      <LoginDialog\n        modalOpen={dialogOpen}\n        onClose={closeDialog}\n        onSubmit={handleLogin}\n      />\n    </div>\n  );\n};\n\nexport default Header;\n","import React from 'react';\n\nconst Home: React.FC = () => {\n  return <></>;\n};\n\nexport default Home;\n","import {\n  lightGreen,\n  deepOrange,\n  lightBlue,\n  grey,\n} from '@material-ui/core/colors';\n\nexport const successColor = lightGreen[700];\nexport const failColor = deepOrange[700];\nexport const otherColor = lightBlue[700];\nexport const undoColor = grey[700];\n","import {\n  GameEvent,\n  PlayerNumber,\n  SET_GAME_EVENT,\n  SET_PLAYER,\n  REMOVE_EVENT,\n  EventItem,\n} from './types';\n\nexport const setPlayer = (data: PlayerNumber) => {\n  return {\n    type: SET_PLAYER,\n    payload: data,\n  };\n};\n\nexport const setEvent = (data: GameEvent) => {\n  return {\n    type: SET_GAME_EVENT,\n    payload: data,\n  };\n};\n\nexport const removeEvent = (data: EventItem['id']) => {\n  return {\n    type: REMOVE_EVENT,\n    payload: data,\n  };\n};\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport { successColor } from '../../constants/colors';\nimport { setEvent } from '../../store/event/actions';\nimport { addStat } from '../../store/stat/actions';\nimport { addOne, addTwo, addThree } from '../../store/score/actions';\nimport store, { getEvent } from '../../store';\nimport { ONEPM, TWOPM, THREEPM } from '../../constants/gameEvents';\n\nconst useStyles = makeStyles({\n  root: {\n    background: successColor,\n    border: 0,\n    borderRadius: 8,\n    color: 'white',\n    height: 100,\n    width: '100%',\n    padding: '0 30px',\n    margin: '8px',\n    fontSize: 28,\n    boxShadow: '3px 4px 5px 0px rgba(0, 0, 0, 0.38)',\n  },\n});\n\ninterface Props {\n  gameEvent: string;\n  showPlayerButtons: (value: boolean) => void;\n  setSnackbar: (value: boolean) => void;\n}\n\nconst GreenButton: React.FC<Props> = ({\n  gameEvent,\n  showPlayerButtons,\n  setSnackbar,\n}) => {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const handleClick = () => {\n    showPlayerButtons(true);\n    dispatch(setEvent({ gameEvent }));\n    dispatch(addStat(getEvent(store.getState())));\n    setSnackbar(true);\n    switch (gameEvent) {\n      case ONEPM:\n        dispatch(addOne());\n        break;\n      case TWOPM:\n        dispatch(addTwo());\n        break;\n      case THREEPM:\n        dispatch(addThree());\n        break;\n      default:\n        break;\n    }\n  };\n  return (\n    <Button onClick={handleClick} className={classes.root}>\n      {gameEvent}\n    </Button>\n  );\n};\n\nexport default GreenButton;\n","import {\n  ADD_ONE,\n  ADD_TWO,\n  ADD_THREE,\n  REDUCE_ONE,\n  REDUCE_TWO,\n  REDUCE_THREE,\n} from './types';\n\nexport const addOne = () => {\n  return {\n    type: ADD_ONE,\n  };\n};\n\nexport const addTwo = () => {\n  return {\n    type: ADD_TWO,\n  };\n};\n\nexport const addThree = () => {\n  return {\n    type: ADD_THREE,\n  };\n};\n\nexport const reduceOne = () => {\n  return {\n    type: REDUCE_ONE,\n  };\n};\n\nexport const reduceTwo = () => {\n  return {\n    type: REDUCE_TWO,\n  };\n};\n\nexport const reduceThree = () => {\n  return {\n    type: REDUCE_THREE,\n  };\n};\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport { failColor } from '../../constants/colors';\nimport { setEvent } from '../../store/event/actions';\nimport { addStat } from '../../store/stat/actions';\nimport store, { getEvent } from '../../store';\n\nconst useStyles = makeStyles({\n  root: {\n    background: failColor,\n    border: 0,\n    borderRadius: 8,\n    color: 'white',\n    height: 100,\n    width: '100%',\n    padding: '0 30px',\n    margin: '8px',\n    fontSize: 28,\n    boxShadow: '3px 4px 5px 0px rgba(0, 0, 0, 0.38)',\n  },\n});\n\ninterface Props {\n  gameEvent: string;\n  showPlayerButtons: (value: boolean) => void;\n  setOrangeSnack: (value: boolean) => void;\n}\n\nconst OrangeButton: React.FC<Props> = ({\n  gameEvent,\n  showPlayerButtons,\n  setOrangeSnack,\n}) => {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const handleClick = () => {\n    showPlayerButtons(true);\n    dispatch(setEvent({ gameEvent }));\n    dispatch(addStat(getEvent(store.getState())));\n    setOrangeSnack(true);\n  };\n  return (\n    <Button onClick={handleClick} className={classes.root}>\n      {gameEvent}\n    </Button>\n  );\n};\n\nexport default OrangeButton;\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport { otherColor } from '../../constants/colors';\nimport { setEvent } from '../../store/event/actions';\nimport { addStat } from '../../store/stat/actions';\nimport store, { getEvent } from '../../store';\n\nconst useStyles = makeStyles({\n  root: {\n    background: otherColor,\n    border: 0,\n    borderRadius: 8,\n    color: 'white',\n    height: 100,\n    width: '100%',\n    padding: '0 30px',\n    margin: '8px',\n    fontSize: 28,\n    boxShadow: '3px 4px 5px 0px rgba(0, 0, 0, 0.38)',\n  },\n});\n\ninterface Props {\n  gameEvent: string;\n  showPlayerButtons: (value: boolean) => void;\n  setBlueSnack: (value: boolean) => void;\n}\n\nconst BlueButton: React.FC<Props> = ({\n  gameEvent,\n  showPlayerButtons,\n  setBlueSnack,\n}) => {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const handleClick = () => {\n    showPlayerButtons(true);\n    dispatch(setEvent({ gameEvent }));\n    dispatch(addStat(getEvent(store.getState())));\n    setBlueSnack(true);\n  };\n  return (\n    <Button onClick={handleClick} className={classes.root}>\n      {gameEvent}\n    </Button>\n  );\n};\n\nexport default BlueButton;\n","import React from 'react';\nimport { makeStyles, Theme, createStyles } from '@material-ui/core/styles';\nimport IconButton from '@material-ui/core/IconButton';\nimport CancelOutlinedIcon from '@material-ui/icons/CancelOutlined';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    cancelIcon: {\n      fontSize: 64,\n      color: theme.palette.primary.main,\n    },\n  })\n);\n\ninterface Props {\n  showPlayerButtons: (value: boolean) => void;\n}\n\nconst UndoButton: React.FC<Props> = ({ showPlayerButtons }) => {\n  const classes = useStyles();\n  const handleClick = () => {\n    showPlayerButtons(true);\n  };\n\n  return (\n    <IconButton onClick={handleClick} edge=\"start\">\n      <CancelOutlinedIcon className={classes.cancelIcon} />\n    </IconButton>\n  );\n};\n\nexport default UndoButton;\n","import React from 'react';\nimport { Box, Grid } from '@material-ui/core';\nimport GreenButton from '../components/button/GreenButton';\nimport OrangeButton from '../components/button/OrangeButton';\nimport BlueButton from '../components/button/BlueButton';\nimport UndoButton from '../components/button/UndoButton';\nimport {\n  ONEPM,\n  TWOPM,\n  THREEPM,\n  ONEPA,\n  TWOPA,\n  THREEPA,\n  ORB,\n  TO,\n  DRB,\n  AST,\n  BLK,\n  STL,\n} from '../constants/gameEvents';\n\ninterface Props {\n  showPlayerButtons: (value: boolean) => void;\n  setSnackbar: (value: boolean) => void;\n  setOrangeSnack: (value: boolean) => void;\n  setBlueSnack: (value: boolean) => void;\n}\n\nconst EventButtons: React.FC<Props> = ({\n  showPlayerButtons,\n  setSnackbar,\n  setOrangeSnack,\n  setBlueSnack,\n}) => {\n  return (\n    <Grid container direction=\"column\" justify=\"center\" alignItems=\"center\">\n      <Box\n        display=\"flex\"\n        bgcolor=\"white\"\n        width=\"100%\"\n        height=\"100%\"\n        marginTop={0}\n      >\n        <GreenButton\n          gameEvent={ONEPM}\n          showPlayerButtons={showPlayerButtons}\n          setSnackbar={setSnackbar}\n        />\n        <GreenButton\n          gameEvent={TWOPM}\n          showPlayerButtons={showPlayerButtons}\n          setSnackbar={setSnackbar}\n        />\n        <GreenButton\n          gameEvent={THREEPM}\n          showPlayerButtons={showPlayerButtons}\n          setSnackbar={setSnackbar}\n        />\n      </Box>\n      <Box\n        display=\"flex\"\n        bgcolor=\"white\"\n        width=\"100%\"\n        height=\"100%\"\n        marginTop={0}\n      >\n        <OrangeButton\n          gameEvent={ONEPA}\n          showPlayerButtons={showPlayerButtons}\n          setOrangeSnack={setOrangeSnack}\n        />\n        <OrangeButton\n          gameEvent={TWOPA}\n          showPlayerButtons={showPlayerButtons}\n          setOrangeSnack={setOrangeSnack}\n        />\n        <OrangeButton\n          gameEvent={THREEPA}\n          showPlayerButtons={showPlayerButtons}\n          setOrangeSnack={setOrangeSnack}\n        />\n      </Box>\n      <Box\n        display=\"flex\"\n        bgcolor=\"white\"\n        width=\"100%\"\n        height=\"100%\"\n        marginTop={0}\n      >\n        <BlueButton\n          gameEvent={ORB}\n          showPlayerButtons={showPlayerButtons}\n          setBlueSnack={setBlueSnack}\n        />\n        <OrangeButton\n          gameEvent={TO}\n          showPlayerButtons={showPlayerButtons}\n          setOrangeSnack={setOrangeSnack}\n        />\n        <BlueButton\n          gameEvent={DRB}\n          showPlayerButtons={showPlayerButtons}\n          setBlueSnack={setBlueSnack}\n        />\n      </Box>\n      <Box\n        display=\"flex\"\n        bgcolor=\"white\"\n        width=\"100%\"\n        height=\"100%\"\n        marginTop={0}\n      >\n        <BlueButton\n          gameEvent={AST}\n          showPlayerButtons={showPlayerButtons}\n          setBlueSnack={setBlueSnack}\n        />\n        <BlueButton\n          gameEvent={BLK}\n          showPlayerButtons={showPlayerButtons}\n          setBlueSnack={setBlueSnack}\n        />\n        <BlueButton\n          gameEvent={STL}\n          showPlayerButtons={showPlayerButtons}\n          setBlueSnack={setBlueSnack}\n        />\n      </Box>\n      <Box\n        display=\"flex\"\n        alignItems=\"center\"\n        justifyContent=\"center\"\n        bgcolor=\"white\"\n        width=\"100%\"\n        paddingTop={2}\n      >\n        <UndoButton showPlayerButtons={showPlayerButtons} />\n      </Box>\n    </Grid>\n  );\n};\n\nexport default EventButtons;\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport { useDispatch } from 'react-redux';\nimport { otherColor } from '../../constants/colors';\nimport { setPlayer } from '../../store/event/actions';\n\nconst useStyles = makeStyles({\n  root: {\n    background: otherColor,\n    border: 0,\n    borderRadius: 8,\n    color: 'white',\n    height: 100,\n    width: '100%',\n    padding: '0 30px',\n    margin: '8px',\n    fontSize: 28,\n    boxShadow: '3px 4px 5px 0px rgba(0, 0, 0, 0.38)',\n  },\n});\n\ninterface Props {\n  playerNumber: number;\n  showPlayerButtons: (value: boolean) => void;\n}\n\nconst PlayerButton: React.FC<Props> = ({ playerNumber, showPlayerButtons }) => {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const handleClick = () => {\n    dispatch(setPlayer({ playerNumber }));\n    showPlayerButtons(false);\n  };\n  return (\n    <Button onClick={handleClick} className={classes.root}>\n      {playerNumber}\n    </Button>\n  );\n};\n\nexport default PlayerButton;\n","import React from 'react';\nimport { makeStyles, Theme, createStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      background: theme.palette.secondary.light,\n      border: 0,\n      borderRadius: 8,\n      color: 'white',\n      height: 100,\n      width: '100%',\n      padding: '0 30px',\n      margin: '8px',\n      fontSize: 28,\n      boxShadow: '3px 4px 5px 0px rgba(0, 0, 0, 0.38)',\n    },\n  })\n);\n\nconst EmptyButton: React.FC = () => {\n  const classes = useStyles();\n\n  return (\n    <Button disabled className={classes.root}>\n      ---\n    </Button>\n  );\n};\n\nexport default EmptyButton;\n","import React from 'react';\nimport { Box, Grid } from '@material-ui/core';\nimport PlayerButton from '../components/button/PlayerButton';\nimport EmptyButton from '../components/button/EmptyButton';\nimport { Player } from '../store/player/types';\nimport store, { getRoster } from '../store';\n\ninterface Props {\n  showPlayerButtons: (value: boolean) => void;\n}\n\nconst PlayerButtons: React.FC<Props> = ({ showPlayerButtons }) => {\n  const [players, SetPlayers] = React.useState<Player[]>([]);\n\n  React.useEffect(() => {\n    SetPlayers(\n      getRoster(store.getState()).sort(\n        (a, b) => a.playerNumber - b.playerNumber\n      )\n    );\n  }, []);\n\n  return (\n    <Grid container direction=\"column\" justify=\"center\" alignItems=\"center\">\n      <Box\n        display=\"flex\"\n        bgcolor=\"white\"\n        width=\"100%\"\n        height=\"100%\"\n        marginTop={0}\n      >\n        {players[0] && players[0].playerNumber ? (\n          <PlayerButton\n            playerNumber={players[0].playerNumber}\n            showPlayerButtons={showPlayerButtons}\n          />\n        ) : (\n          <EmptyButton />\n        )}\n        {players[1] && players[1].playerNumber ? (\n          <PlayerButton\n            playerNumber={players[1].playerNumber}\n            showPlayerButtons={showPlayerButtons}\n          />\n        ) : (\n          <EmptyButton />\n        )}\n        {players[2] && players[2].playerNumber ? (\n          <PlayerButton\n            playerNumber={players[2].playerNumber}\n            showPlayerButtons={showPlayerButtons}\n          />\n        ) : (\n          <EmptyButton />\n        )}\n      </Box>\n      <Box\n        display=\"flex\"\n        bgcolor=\"white\"\n        width=\"100%\"\n        height=\"100%\"\n        marginTop={0}\n      >\n        {players[3] && players[3].playerNumber ? (\n          <PlayerButton\n            playerNumber={players[3].playerNumber}\n            showPlayerButtons={showPlayerButtons}\n          />\n        ) : (\n          <EmptyButton />\n        )}\n        {players[4] && players[4].playerNumber ? (\n          <PlayerButton\n            playerNumber={players[4].playerNumber}\n            showPlayerButtons={showPlayerButtons}\n          />\n        ) : (\n          <EmptyButton />\n        )}\n        {players[5] && players[5].playerNumber ? (\n          <PlayerButton\n            playerNumber={players[5].playerNumber}\n            showPlayerButtons={showPlayerButtons}\n          />\n        ) : (\n          <EmptyButton />\n        )}\n      </Box>\n      <Box\n        display=\"flex\"\n        bgcolor=\"white\"\n        width=\"100%\"\n        height=\"100%\"\n        marginTop={0}\n      >\n        {players[6] && players[6].playerNumber ? (\n          <PlayerButton\n            playerNumber={players[6].playerNumber}\n            showPlayerButtons={showPlayerButtons}\n          />\n        ) : (\n          <EmptyButton />\n        )}\n        {players[7] && players[7].playerNumber ? (\n          <PlayerButton\n            playerNumber={players[7].playerNumber}\n            showPlayerButtons={showPlayerButtons}\n          />\n        ) : (\n          <EmptyButton />\n        )}\n        {players[8] && players[8].playerNumber ? (\n          <PlayerButton\n            playerNumber={players[8].playerNumber}\n            showPlayerButtons={showPlayerButtons}\n          />\n        ) : (\n          <EmptyButton />\n        )}\n      </Box>\n      <Box\n        display=\"flex\"\n        bgcolor=\"white\"\n        width=\"100%\"\n        height=\"100%\"\n        marginTop={0}\n      >\n        {players[9] && players[9].playerNumber ? (\n          <PlayerButton\n            playerNumber={players[9].playerNumber}\n            showPlayerButtons={showPlayerButtons}\n          />\n        ) : (\n          <EmptyButton />\n        )}\n        {players[10] && players[10].playerNumber ? (\n          <PlayerButton\n            playerNumber={players[10].playerNumber}\n            showPlayerButtons={showPlayerButtons}\n          />\n        ) : (\n          <EmptyButton />\n        )}\n        {players[11] && players[11].playerNumber ? (\n          <PlayerButton\n            playerNumber={players[11].playerNumber}\n            showPlayerButtons={showPlayerButtons}\n          />\n        ) : (\n          <EmptyButton />\n        )}\n      </Box>\n    </Grid>\n  );\n};\n\nexport default PlayerButtons;\n","import React from 'react';\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\nimport { Select, MenuItem, FormControl, InputLabel } from '@material-ui/core';\n\nimport { Team } from '../../../store/team/types';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    formControl: {\n      width: '100%',\n    },\n  })\n);\n\ninterface Props {\n  teams: Team[];\n  submit: (team: Team['id']) => void;\n}\n\nconst TeamSelect: React.FC<Props> = ({ teams, submit }) => {\n  const classes = useStyles();\n  const [team, setTeam] = React.useState<Team['id']>('');\n\n  const handleTeamChange = (event: React.ChangeEvent<{ value: unknown }>) => {\n    const teamId = event.target.value as string;\n    setTeam(teamId);\n    submit(teamId);\n  };\n\n  const options = (items: Team[]) => {\n    return items.map((item) => (\n      <MenuItem key={item.id} value={item.id}>\n        {item.teamName}\n      </MenuItem>\n    ));\n  };\n\n  return (\n    <FormControl variant=\"outlined\" className={classes.formControl}>\n      <InputLabel>Team</InputLabel>\n      <Select\n        label=\"Team\"\n        labelId=\"team-label\"\n        id=\"team\"\n        value={team}\n        onChange={handleTeamChange}\n      >\n        {options(teams)}\n      </Select>\n    </FormControl>\n  );\n};\n\nexport default TeamSelect;\n","import React from 'react';\nimport Box from '@material-ui/core/Box';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport { GameInput } from '../../../store/game/types';\nimport TeamSelect from '../../select/TeamSelect';\nimport store, { getTeams } from '../../../store';\nimport { Team } from '../../../store/team/types';\nimport OkButton from '../../button/OkButton';\nimport CancelButton from '../../button/CancelButton';\n\ninterface Props {\n  modalOpen: boolean;\n  onClose: () => void;\n  onSubmit: (game: GameInput) => void;\n}\n\nconst GameAddDialog: React.FC<Props> = ({ modalOpen, onClose, onSubmit }) => {\n  const [homeTeam, setHomeTeam] = React.useState<string>('');\n  const [awayTeam, setAwayTeam] = React.useState<string>('');\n  const [gameNumber, setGameNumber] = React.useState<string>('');\n  const [description, setDescription] = React.useState<string>('');\n  const [gameDate, setGameDate] = React.useState<string>('');\n  const [selectedTeam, setSelectedTeam] = React.useState<Team['id']>('');\n\n  const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    const game = {\n      homeTeam,\n      awayTeam,\n      gameNumber,\n      description,\n      gameDate,\n      team: selectedTeam,\n      roster: [],\n    };\n    setHomeTeam('');\n    setAwayTeam('');\n    setGameNumber('');\n    setDescription('');\n    setGameDate('');\n\n    onSubmit(game);\n  };\n\n  const handleHomeTeamChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setHomeTeam(event.target.value);\n  };\n\n  const handleAwayTeamChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setAwayTeam(event.target.value);\n  };\n\n  const handleGameNumberChange = (\n    event: React.ChangeEvent<HTMLInputElement>\n  ) => {\n    setGameNumber(event.target.value);\n  };\n\n  const handleGameDateChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setGameDate(event.target.value);\n  };\n\n  const handleDescriptionChange = (\n    event: React.ChangeEvent<HTMLInputElement>\n  ) => {\n    setDescription(event.target.value);\n  };\n\n  const handleTeamSelect = (value: Team['id']) => {\n    setSelectedTeam(value);\n  };\n\n  return (\n    <div>\n      <Dialog open={modalOpen} onClose={onClose}>\n        <DialogContent>\n          <form onSubmit={handleSubmit} noValidate autoComplete=\"off\">\n            <TextField\n              autoFocus={true}\n              fullWidth\n              style={{ marginBottom: 16 }}\n              name=\"homeTeam\"\n              onChange={handleHomeTeamChange}\n              placeholder=\"Home Team\"\n              required={true}\n              size=\"small\"\n              type=\"text\"\n              value={homeTeam}\n              variant=\"outlined\"\n            />\n            <TextField\n              fullWidth\n              style={{ marginBottom: 24 }}\n              name=\"awayTeam\"\n              onChange={handleAwayTeamChange}\n              placeholder=\"Away Team\"\n              required={true}\n              size=\"small\"\n              value={awayTeam}\n              variant=\"outlined\"\n            />\n            <TextField\n              fullWidth\n              style={{ marginBottom: 24 }}\n              name=\"gameNumber\"\n              onChange={handleGameNumberChange}\n              placeholder=\"Game Number\"\n              required={true}\n              size=\"small\"\n              value={gameNumber}\n              variant=\"outlined\"\n            />\n            <TextField\n              fullWidth\n              style={{ marginBottom: 24 }}\n              name=\"gameDate\"\n              onChange={handleGameDateChange}\n              placeholder=\"Game Date\"\n              required={true}\n              size=\"small\"\n              value={gameDate}\n              variant=\"outlined\"\n            />\n            <TextField\n              fullWidth\n              style={{ marginBottom: 24 }}\n              name=\"description\"\n              onChange={handleDescriptionChange}\n              placeholder=\"Description\"\n              required={true}\n              size=\"small\"\n              value={description}\n              variant=\"outlined\"\n            />\n            <Box>\n              <TeamSelect\n                teams={getTeams(store.getState())}\n                submit={handleTeamSelect}\n              />\n            </Box>\n            <Box\n              display=\"flex\"\n              flexDirection=\"row\"\n              justifyContent=\"space-between\"\n              px={5}\n            >\n              <OkButton />\n              <CancelButton action={onClose} />\n            </Box>\n          </form>\n        </DialogContent>\n      </Dialog>\n    </div>\n  );\n};\n\nexport default GameAddDialog;\n","import axios from 'axios';\nimport store, { getUser, getToken } from '../store';\nimport { StatToDB, StatFromDB } from '../store/stat/types';\nimport { setAuthHeader, AxiosAuthConfig } from '../utils';\n\nconst baseUrl = '/api/stats';\n\nconst getAll = async (): Promise<StatFromDB[]> => {\n  let config: AxiosAuthConfig;\n  if (getUser(store.getState())) {\n    config = setAuthHeader(getToken(store.getState()));\n    return (await axios.get(baseUrl, config)).data;\n  }\n  return [];\n};\n\nconst createStat = async (stat: StatToDB): Promise<StatFromDB | undefined> => {\n  let config: AxiosAuthConfig;\n  if (getUser(store.getState())) {\n    config = setAuthHeader(getToken(store.getState()));\n    return (await axios.post(baseUrl, stat, config)).data;\n  }\n\n  return undefined;\n};\n\nexport default { getAll, createStat };\n","import React from 'react';\nimport { makeStyles, Theme, createStyles } from '@material-ui/core/styles';\nimport Stepper from '@material-ui/core/Stepper';\nimport Step from '@material-ui/core/Step';\nimport StepLabel from '@material-ui/core/StepLabel';\nimport StepContent from '@material-ui/core/StepContent';\nimport Button from '@material-ui/core/Button';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      width: '100%',\n    },\n    button: {\n      marginTop: theme.spacing(1),\n      marginRight: theme.spacing(1),\n    },\n    actionsContainer: {\n      marginBottom: theme.spacing(2),\n    },\n    resetContainer: {\n      padding: theme.spacing(3),\n    },\n  })\n);\n\nfunction getSteps() {\n  return ['Enter game information', 'Select roster', 'Start recording game!'];\n}\n\ninterface Props {\n  showNextView: (step: number) => void;\n}\n\nconst RecordStepper: React.FC<Props> = ({ showNextView }) => {\n  const classes = useStyles();\n  const [activeStep, setActiveStep] = React.useState(0);\n  const steps = getSteps();\n\n  React.useEffect(() => {\n    showNextView(activeStep);\n  }, [showNextView, activeStep]);\n\n  const handleNextStep = () => {\n    setActiveStep((prevActiveStep) => prevActiveStep + 1);\n  };\n\n  return (\n    <div className={classes.root}>\n      <Stepper activeStep={activeStep} orientation=\"vertical\">\n        {steps.map((label, index) => (\n          <Step key={label}>\n            <StepLabel>{label}</StepLabel>\n            <StepContent>\n              <div className={classes.actionsContainer}>\n                <div>\n                  <Button\n                    variant=\"contained\"\n                    color=\"primary\"\n                    onClick={handleNextStep}\n                    className={classes.button}\n                  >\n                    {activeStep === steps.length - 1 ? 'Go' : 'Next'}\n                  </Button>\n                </div>\n              </div>\n            </StepContent>\n          </Step>\n        ))}\n      </Stepper>\n    </div>\n  );\n};\n\nexport default RecordStepper;\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { makeStyles, Theme, createStyles } from '@material-ui/core/styles';\nimport { Typography, Avatar, Checkbox, Box } from '@material-ui/core';\nimport { Player } from '../../../store/player/types';\nimport { addToRoster, removeFromRoster } from '../../../store/roster/actions';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    avatar: {\n      width: theme.spacing(4),\n      height: theme.spacing(4),\n      backgroundColor: theme.palette.secondary.main,\n    },\n    checkbox: {\n      color: theme.palette.primary.main,\n    },\n  })\n);\n\ninterface Props {\n  player: Player;\n}\n\nconst RosterItem: React.FC<Props> = ({ player }) => {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const [checked, setChecked] = React.useState(false);\n\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setChecked(event.target.checked);\n    console.log('player', player.playerName);\n    console.log('checkbox', event.target.checked);\n    const rosterUpdate: Player = {\n      id: player.id,\n      playerNumber: player.playerNumber,\n      playerName: player.playerName,\n      team: player.team,\n    };\n    if (event.target.checked) {\n      dispatch(addToRoster(rosterUpdate));\n    } else {\n      dispatch(removeFromRoster(rosterUpdate));\n    }\n  };\n\n  return (\n    <Box\n      borderColor=\"secondary.light\"\n      border={1}\n      borderRadius={8}\n      display=\"flex\"\n      flexDirection=\"row\"\n      width=\"100%\"\n      alignItems=\"center\"\n    >\n      <Box\n        display=\"flex\"\n        justifyContent=\"center\"\n        width=\"20%\"\n        marginLeft={1}\n        py={1}\n      >\n        <Avatar className={classes.avatar}>\n          <Typography variant=\"h6\">{player.playerNumber}</Typography>\n        </Avatar>\n      </Box>\n      <Box display=\"flex\" justifyContent=\"center\" py={1} px={1}>\n        <Typography variant=\"h6\" color=\"textPrimary\">\n          {player.playerName}\n        </Typography>\n      </Box>\n      <Box flexGrow={1} />\n      <Box>\n        <Checkbox\n          className={classes.checkbox}\n          checked={checked}\n          onChange={handleChange}\n          inputProps={{ 'aria-label': 'primary checkbox' }}\n        />\n      </Box>\n    </Box>\n  );\n};\n\nexport default RosterItem;\n","import React from 'react';\nimport RosterItem from './RosterItem';\nimport store, { getPlayers } from '../../../store';\n\ninterface Props {\n  selectedTeam: string;\n}\n\nconst ShowRoster: React.FC<Props> = ({ selectedTeam }) => {\n  return (\n    <div>\n      {getPlayers(store.getState())\n        .filter((p) => p.team === selectedTeam)\n        .map((p) => (\n          <RosterItem key={p.id} player={p} />\n        ))}\n    </div>\n  );\n};\n\nexport default ShowRoster;\n","import React from 'react';\nimport { makeStyles, Theme, createStyles } from '@material-ui/core/styles';\nimport IconButton from '@material-ui/core/IconButton';\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\nimport teal from '@material-ui/core/colors/teal';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    okIcon: {\n      fontSize: 52,\n      color: teal[800],\n    },\n  })\n);\n\ninterface Props {\n  action: () => void;\n}\n\nconst RosterOkButton: React.FC<Props> = ({action}) => {\n  const classes = useStyles();\n\n  return (\n    <IconButton onClick={action} edge=\"start\" type=\"submit\">\n      <CheckCircleIcon className={classes.okIcon} />\n    </IconButton>\n  );\n};\n\nexport default RosterOkButton;\n","import React from 'react';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport ShowRoster from './ShowRoster';\nimport RosterOkButton from '../../button/RosterOkButton';\n\ninterface Props {\n  modalOpen: boolean;\n  onClose: () => void;\n  onSubmit: () => void;\n  selectedTeam: string;\n}\n\nconst SelectRosterDialog: React.FC<Props> = ({\n  modalOpen,\n  onClose,\n  onSubmit,\n  selectedTeam,\n}) => {\n  const handleOK = () => {\n    onSubmit();\n  };\n\n  return (\n    <Dialog open={modalOpen} onClose={onClose}>\n      <DialogContent>\n        <ShowRoster selectedTeam={selectedTeam} />\n        <RosterOkButton action={handleOK} />\n      </DialogContent>\n    </Dialog>\n  );\n};\n\nexport default SelectRosterDialog;\n","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\n\ninterface Props {\n  dialogOpen: boolean;\n  onClose: () => void;\n  onSubmit: (response: boolean) => void;\n}\n\nconst AlertDialog: React.FC<Props> = ({ dialogOpen, onClose, onSubmit }) => {\n  const handleCancel = () => {\n    onSubmit(false);\n  };\n\n  const handleFinish = () => {\n    onSubmit(true);\n  };\n\n  return (\n    <div>\n      <Dialog\n        open={dialogOpen}\n        onClose={onClose}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n      >\n        <DialogContent>\n          <DialogContentText>Finish recording?</DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleFinish} color=\"primary\">\n            Finish\n          </Button>\n          <Button onClick={handleCancel} color=\"primary\" autoFocus>\n            Cancel\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n};\n\nexport default AlertDialog;\n","import React from 'react';\nimport { makeStyles, Theme, createStyles } from '@material-ui/core/styles';\nimport IconButton from '@material-ui/core/IconButton';\nimport DeleteOutlinedIcon from '@material-ui/icons/DeleteOutlined';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    deleteIcon: {\n      fontSize: 28,\n      color: theme.palette.primary.main,\n    },\n  })\n);\n\ninterface Props {\n  action: () => void;\n}\n\nconst DeleteButton: React.FC<Props> = ({ action }) => {\n  const classes = useStyles();\n\n  return (\n    <IconButton edge=\"start\" onClick={action}>\n      <DeleteOutlinedIcon className={classes.deleteIcon} />\n    </IconButton>\n  );\n};\n\nexport default DeleteButton;\n","import React from 'react';\nimport { makeStyles, Theme, createStyles } from '@material-ui/core/styles';\nimport IconButton from '@material-ui/core/IconButton';\nimport StopIcon from '@material-ui/icons/Stop';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    iconbutton: {\n      border: 'solid 3px #e91e63',\n    },\n    stopIcon: {\n      fontSize: 32,\n      color: theme.palette.primary.main,\n    },\n  })\n);\n\ninterface Props {\n  action: () => void;\n}\n\nconst StopButton: React.FC<Props> = ({ action }) => {\n  const classes = useStyles();\n\n  return (\n    <IconButton size=\"small\" className={classes.iconbutton} onClick={action}>\n      <StopIcon className={classes.stopIcon} />\n    </IconButton>\n  );\n};\n\nexport default StopButton;\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport { makeStyles, Theme } from '@material-ui/core/styles';\nimport Avatar from '@material-ui/core/Avatar';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport Box from '@material-ui/core/Box';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport EventButtons from '../../EventButtons';\nimport PlayerButtons from '../../PlayerButtons';\nimport GameAddDialog from '../../components/dialog/GameAddDialog';\nimport { GameInput } from '../../store/game/types';\nimport { StatToDB, StatEvent } from '../../store/stat/types';\nimport { addGame, resetGame } from '../../store/game/actions';\nimport { setHeaderTitle } from '../../store/header/actions';\nimport store, {\n  getGameTeam,\n  getStats,\n  getGameId,\n  getEvent,\n  getEvents,\n  getScore,\n} from '../../store';\nimport statService from '../../services/stats';\nimport RecordStepper from '../../components/stepper/RecordStepper';\nimport SelectRosterDialog from '../../components/dialog/SelectRosterDialog';\nimport AlertDialog from '../../components/dialog/AlertDialog';\nimport { resetRoster } from '../../store/roster/actions';\nimport { resetStats, removeStat } from '../../store/stat/actions';\nimport { successColor, failColor, otherColor } from '../../constants/colors';\nimport { EventItem } from '../../store/event/types';\nimport {\n  ONEPM,\n  TWOPM,\n  THREEPM,\n  ONEPA,\n  TWOPA,\n  THREEPA,\n  TO,\n} from '../../constants/gameEvents';\nimport { reduceOne, reduceTwo, reduceThree } from '../../store/score/actions';\nimport { removeEvent } from '../../store/event/actions';\nimport DeleteButton from '../../components/button/DeleteButton';\nimport StopButton from '../../components/button/StopButton';\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  avatar: {\n    width: theme.spacing(4),\n    height: theme.spacing(4),\n  },\n  score: {\n    paddingLeft: theme.spacing(1),\n  },\n  gameEventList: {\n    paddingLeft: theme.spacing(1),\n  },\n  orangeSnack: {\n    backgroundColor: failColor,\n  },\n  orangeSnackText: {\n    color: '#fafafa',\n  },\n  blueSnack: {\n    backgroundColor: otherColor,\n  },\n  blueSnackText: {\n    color: '#fafafa',\n  },\n  greenSnack: {\n    backgroundColor: successColor,\n  },\n  greenSnackText: {\n    color: '#fafafa',\n  },\n  divider: {\n    marginTop: theme.spacing(1),\n    marginBottom: theme.spacing(1),\n  },\n}));\n\ninterface AvatarProps {\n  event: EventItem;\n}\n\nconst EventAvatar: React.FC<AvatarProps> = ({ event }) => {\n  const classes = useStyles();\n  switch (event.gameEvent) {\n    case ONEPM:\n      return (\n        <Avatar\n          className={classes.avatar}\n          style={{ backgroundColor: successColor }}\n        >\n          <Typography variant=\"h6\">{event.playerNumber}</Typography>\n        </Avatar>\n      );\n    case TWOPM:\n      return (\n        <Avatar\n          className={classes.avatar}\n          style={{ backgroundColor: successColor }}\n        >\n          <Typography variant=\"h6\">{event.playerNumber}</Typography>\n        </Avatar>\n      );\n    case THREEPM:\n      return (\n        <Avatar\n          className={classes.avatar}\n          style={{ backgroundColor: successColor }}\n        >\n          <Typography variant=\"h6\">{event.playerNumber}</Typography>\n        </Avatar>\n      );\n    case ONEPA:\n      return (\n        <Avatar\n          className={classes.avatar}\n          style={{ backgroundColor: failColor }}\n        >\n          <Typography variant=\"h6\">{event.playerNumber}</Typography>\n        </Avatar>\n      );\n    case TWOPA:\n      return (\n        <Avatar\n          className={classes.avatar}\n          style={{ backgroundColor: failColor }}\n        >\n          <Typography variant=\"h6\">{event.playerNumber}</Typography>\n        </Avatar>\n      );\n    case THREEPA:\n      return (\n        <Avatar\n          className={classes.avatar}\n          style={{ backgroundColor: failColor }}\n        >\n          <Typography variant=\"h6\">{event.playerNumber}</Typography>\n        </Avatar>\n      );\n    case TO:\n      return (\n        <Avatar\n          className={classes.avatar}\n          style={{ backgroundColor: failColor }}\n        >\n          <Typography variant=\"h6\">{event.playerNumber}</Typography>\n        </Avatar>\n      );\n    default:\n      return (\n        <Avatar\n          className={classes.avatar}\n          style={{ backgroundColor: otherColor }}\n        >\n          <Typography variant=\"h6\">{event.playerNumber}</Typography>\n        </Avatar>\n      );\n  }\n};\n\nconst Record: React.FC = () => {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const [showStepper, setShowStepper] = React.useState<boolean>(true);\n  const [showGameAddDialog, setShowGameAddDialog] = React.useState<boolean>(\n    false\n  );\n  const [showSelectRoster, setShowSelectRoster] = React.useState<boolean>(\n    false\n  );\n  const [showPlayerButtons, setShowPlayerButtons] = React.useState<boolean>(\n    true\n  );\n  const [recordGame, setRecordGame] = React.useState<boolean>(false);\n  const [addGameDialogOpen, setAddGameDialogOpen] = React.useState<boolean>(\n    true\n  );\n  const [selectRosterDialogOpen, setSelectRosterDialogOpen] = React.useState<\n    boolean\n  >(true);\n  const [dialogOpen, setDialogOpen] = React.useState<boolean>(false);\n  const [greenSnack, setGreenSnack] = React.useState(false);\n  const [orangeSnack, setOrangeSnack] = React.useState(false);\n  const [blueSnack, setBlueSnack] = React.useState(false);\n\n  const closeAddGameDialog = (): void => {\n    setAddGameDialogOpen(false);\n  };\n\n  const closeSelectRosterDialog = (): void => {\n    setSelectRosterDialogOpen(false);\n  };\n  const handleAddGame = async (values: GameInput) => {\n    closeAddGameDialog();\n    setShowGameAddDialog(false);\n    setShowSelectRoster(true);\n    try {\n      dispatch(addGame(values));\n    } catch (error) {\n      console.error(error.message);\n    }\n  };\n\n  const handleRosterSelected = () => {\n    setSelectRosterDialogOpen(false);\n  };\n\n  const closeDialog = (): void => {\n    setDialogOpen(false);\n  };\n\n  const confirmFinishRecording = () => {\n    setDialogOpen(true);\n  };\n\n  const handleGreenClose = (event?: React.SyntheticEvent, reason?: string) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n    setGreenSnack(false);\n  };\n\n  const handleOrangeClose = (event?: React.SyntheticEvent, reason?: string) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n    setOrangeSnack(false);\n  };\n\n  const handleBlueClose = (event?: React.SyntheticEvent, reason?: string) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n    setBlueSnack(false);\n  };\n\n  const handleDialogSubmit = (saveStats: boolean) => {\n    closeDialog();\n    if (saveStats) {\n      let statToDB: StatToDB;\n      getStats(store.getState()).forEach((stat) => {\n        statToDB = { ...stat, game: getGameId(store.getState()) };\n        console.log('statToDB: ', statToDB);\n        statService.createStat(statToDB);\n      });\n      dispatch(resetRoster());\n      dispatch(resetStats());\n      dispatch(resetGame());\n      dispatch(setHeaderTitle('Home'));\n      console.log('done');\n      history.push('/');\n    } else {\n      console.log('cancel');\n    }\n  };\n\n  const handleNextStep = (value: number) => {\n    switch (value) {\n      case 1:\n        setShowGameAddDialog(true);\n        setShowSelectRoster(false);\n        break;\n      case 2:\n        setShowGameAddDialog(false);\n        setShowSelectRoster(true);\n        break;\n      case 3:\n        setShowGameAddDialog(false);\n        setShowSelectRoster(false);\n        setShowStepper(false);\n        setRecordGame(true);\n        break;\n      default:\n        break;\n    }\n  };\n\n  const handleDeleteEvent = (event: EventItem) => {\n    const statEvent: StatEvent = {\n      gameEvent: event.gameEvent,\n      playerNumber: event.playerNumber,\n    };\n    dispatch(removeStat(statEvent));\n    dispatch(removeEvent(event.id));\n    switch (event.gameEvent) {\n      case ONEPM:\n        dispatch(reduceOne());\n        break;\n      case TWOPM:\n        dispatch(reduceTwo());\n        break;\n      case THREEPM:\n        dispatch(reduceThree());\n        break;\n      default:\n        break;\n    }\n  };\n\n  return (\n    <>\n      {showStepper && <RecordStepper showNextView={handleNextStep} />}\n      {showGameAddDialog && (\n        <GameAddDialog\n          modalOpen={addGameDialogOpen}\n          onClose={closeAddGameDialog}\n          onSubmit={handleAddGame}\n        />\n      )}\n\n      {showSelectRoster && (\n        <SelectRosterDialog\n          modalOpen={selectRosterDialogOpen}\n          onClose={closeSelectRosterDialog}\n          onSubmit={handleRosterSelected}\n          selectedTeam={getGameTeam(store.getState())}\n        />\n      )}\n\n      {recordGame && (\n        <Box display=\"flex\" flexDirection=\"row\">\n          <Box\n            display=\"flex\"\n            flexDirection=\"row\"\n            marginTop={1}\n            p={1}\n            width=\"70%\"\n          >\n            <Typography align=\"left\" variant=\"h4\" color=\"secondary\">\n              Score:\n            </Typography>\n            <Typography align=\"left\" variant=\"h4\" className={classes.score}>\n              {getScore(store.getState())}\n            </Typography>\n          </Box>\n          <Box\n            display=\"flex\"\n            marginTop={1}\n            width=\"30%\"\n            alignItems=\"center\"\n            justifyContent=\"center\"\n          >\n            <StopButton action={confirmFinishRecording} />\n          </Box>\n        </Box>\n      )}\n\n      <Divider />\n\n      {recordGame &&\n        (showPlayerButtons ? (\n          <PlayerButtons showPlayerButtons={setShowPlayerButtons} />\n        ) : (\n          <EventButtons\n            showPlayerButtons={setShowPlayerButtons}\n            setSnackbar={setGreenSnack}\n            setOrangeSnack={setOrangeSnack}\n            setBlueSnack={setBlueSnack}\n          />\n        ))}\n\n      <Divider className={classes.divider} />\n\n      {showPlayerButtons &&\n        getEvents(store.getState()).map((evt) => (\n          <Box\n            key={evt.id}\n            display=\"flex\"\n            flexDirection=\"row\"\n            border={1}\n            borderColor=\"secondary.light\"\n            borderRadius={8}\n            justifyContent=\"space-between\"\n            mx={5}\n            px={1}\n          >\n            <Box\n              display=\"flex\"\n              paddingTop={0}\n              paddingBottom={0}\n              px={4}\n              alignItems=\"center\"\n            >\n              <EventAvatar event={evt} />\n              <Typography className={classes.gameEventList}>\n                {evt.gameEvent}\n              </Typography>\n            </Box>\n            <Box\n              display=\"flex\"\n              paddingTop={0}\n              paddingBottom={0}\n              px={4}\n              alignItems=\"center\"\n              justifyContent=\"center\"\n            >\n              <DeleteButton action={() => handleDeleteEvent(evt)} />\n            </Box>\n          </Box>\n        ))}\n\n      {getEvent(store.getState()) ? (\n        <Snackbar\n          anchorOrigin={{ vertical: 'top', horizontal: 'center' }}\n          open={greenSnack}\n          autoHideDuration={2000}\n          onClose={handleGreenClose}\n        >\n          <Box\n            className={classes.greenSnack}\n            display=\"flex\"\n            border={2}\n            width=\"30%\"\n            borderColor=\"white\"\n            borderRadius={8}\n            height={50}\n            alignItems=\"center\"\n            justifyContent=\"center\"\n          >\n            <Typography variant=\"h6\" className={classes.greenSnackText}>\n              #{getEvent(store.getState()).playerNumber}{' '}\n              {getEvent(store.getState()).gameEvent}\n            </Typography>\n          </Box>\n        </Snackbar>\n      ) : null}\n\n      {getEvent(store.getState()) ? (\n        <Snackbar\n          anchorOrigin={{ vertical: 'top', horizontal: 'center' }}\n          open={orangeSnack}\n          autoHideDuration={2000}\n          onClose={handleOrangeClose}\n        >\n          <Box\n            className={classes.orangeSnack}\n            display=\"flex\"\n            border={2}\n            width=\"30%\"\n            borderColor=\"white\"\n            borderRadius={8}\n            height={50}\n            alignItems=\"center\"\n            justifyContent=\"center\"\n          >\n            <Typography variant=\"h6\" className={classes.orangeSnackText}>\n              #{getEvent(store.getState()).playerNumber}{' '}\n              {getEvent(store.getState()).gameEvent}\n            </Typography>\n          </Box>\n        </Snackbar>\n      ) : null}\n\n      {getEvent(store.getState()) ? (\n        <Snackbar\n          anchorOrigin={{ vertical: 'top', horizontal: 'center' }}\n          open={blueSnack}\n          autoHideDuration={2000}\n          onClose={handleBlueClose}\n        >\n          <Box\n            className={classes.blueSnack}\n            display=\"flex\"\n            border={2}\n            width=\"30%\"\n            borderColor=\"white\"\n            borderRadius={8}\n            height={50}\n            alignItems=\"center\"\n            justifyContent=\"center\"\n          >\n            <Typography variant=\"h6\" className={classes.blueSnackText}>\n              #{getEvent(store.getState()).playerNumber}{' '}\n              {getEvent(store.getState()).gameEvent}\n            </Typography>\n          </Box>\n        </Snackbar>\n      ) : null}\n\n      <AlertDialog\n        dialogOpen={dialogOpen}\n        onClose={closeDialog}\n        onSubmit={handleDialogSubmit}\n      />\n    </>\n  );\n};\n\nexport default Record;\n","import React from 'react';\nimport { makeStyles, Theme, createStyles } from '@material-ui/core/styles';\nimport IconButton from '@material-ui/core/IconButton';\nimport EditIcon from '@material-ui/icons/Edit';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    editIcon: {\n      fontSize: 24,\n      color: theme.palette.primary.main,\n    },\n  })\n);\n\ninterface Props {\n  action: () => void;\n}\n\nconst EditButton: React.FC<Props> = ({ action }) => {\n  const classes = useStyles();\n\n  return (\n    <IconButton edge=\"start\" onClick={action}>\n      <EditIcon className={classes.editIcon} />\n    </IconButton>\n  );\n};\n\nexport default EditButton;\n","import React from 'react';\nimport { makeStyles, Theme, createStyles } from '@material-ui/core/styles';\nimport Box from '@material-ui/core/Box';\nimport Avatar from '@material-ui/core/Avatar';\nimport Typography from '@material-ui/core/Typography';\nimport { Player } from '../../store/player/types';\nimport EditButton from '../button/EditButton';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    avatar: {\n      width: theme.spacing(4),\n      height: theme.spacing(4),\n      backgroundColor: theme.palette.secondary.main,\n    },\n  })\n);\n\ninterface Props {\n  player: Player;\n  handlePlayerUpdate: (player: Player) => void;\n}\n\nconst ListItem: React.FC<Props> = ({ player, handlePlayerUpdate }) => {\n  const classes = useStyles();\n  return (\n    <div>\n      <Box\n        borderColor=\"secondary.light\"\n        border={1}\n        borderRadius={8}\n        display=\"flex\"\n        flexDirection=\"row\"\n        width=\"100%\"\n      >\n        <Box display=\"flex\" justifyContent=\"center\" width=\"20%\" py={1}>\n          <Avatar className={classes.avatar}>\n            <Typography variant=\"h6\">{player.playerNumber}</Typography>\n          </Avatar>\n        </Box>\n        <Box display=\"flex\" justifyContent=\"center\" py={1}>\n          <Typography variant=\"h6\" color=\"textPrimary\">\n            {player.playerName}\n          </Typography>\n        </Box>\n        <Box flexGrow={1} />\n        <Box>\n          <EditButton action={() => handlePlayerUpdate(player)} />\n        </Box>\n      </Box>\n    </div>\n  );\n};\n\nexport default ListItem;\n","import React from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport Box from '@material-ui/core/Box';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport { PlayerInput } from '../../../store/player/types';\nimport OkButton from '../../button/OkButton';\nimport CancelButton from '../../button/CancelButton';\n\ninterface Props {\n  modalOpen: boolean;\n  onClose: () => void;\n  onSubmit: (player: PlayerInput) => void;\n  selectedTeam: string;\n}\n\nconst PlayerAddDialog: React.FC<Props> = ({\n  modalOpen,\n  onClose,\n  onSubmit,\n  selectedTeam,\n}) => {\n  const [playerName, setPlayerName] = React.useState<string>('');\n  const [playerNumber, setPlayerNumber] = React.useState<string>('');\n\n  const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    const player: PlayerInput = {\n      playerNumber: Number(playerNumber),\n      playerName,\n      team: selectedTeam,\n    };\n    setPlayerName('');\n    setPlayerNumber('');\n    onSubmit(player);\n  };\n\n  const handleNameChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setPlayerName(event.target.value);\n  };\n\n  const handleNumberChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setPlayerNumber(event.target.value);\n  };\n\n  return (\n    <div>\n      <Dialog open={modalOpen} onClose={onClose}>\n        <DialogContent>\n          <form onSubmit={handleSubmit} noValidate autoComplete=\"off\">\n            <TextField\n              autoFocus={true}\n              fullWidth\n              style={{ marginBottom: 16 }}\n              name=\"playerName\"\n              onChange={handleNameChange}\n              placeholder=\"Player Name\"\n              required={true}\n              size=\"small\"\n              type=\"text\"\n              value={playerName}\n              variant=\"outlined\"\n            />\n            <TextField\n              fullWidth\n              style={{ marginBottom: 24 }}\n              name=\"playerNumber\"\n              onChange={handleNumberChange}\n              placeholder=\"Player Number\"\n              required={true}\n              size=\"small\"\n              value={playerNumber}\n              variant=\"outlined\"\n            />\n            <Box\n              display=\"flex\"\n              flexDirection=\"row\"\n              justifyContent=\"space-between\"\n              px={5}\n            >\n              <OkButton />\n              <CancelButton action={onClose} />\n            </Box>\n          </form>\n        </DialogContent>\n      </Dialog>\n    </div>\n  );\n};\n\nexport default PlayerAddDialog;\n","import React from 'react';\nimport Box from '@material-ui/core/Box';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport { Player } from '../../../store/player/types';\nimport OkButton from '../../button/OkButton';\nimport CancelButton from '../../button/CancelButton';\n\ninterface Props {\n  modalOpen: boolean;\n  onClose: () => void;\n  onSubmit: (player: Player) => void;\n  player: Player;\n}\n\nconst PlayerUpdateDialog: React.FC<Props> = ({\n  modalOpen,\n  onClose,\n  onSubmit,\n  player,\n}) => {\n  const [playerName, setPlayerName] = React.useState<string>('');\n  const [playerNumber, setPlayerNumber] = React.useState<string>('');\n\n  React.useEffect(() => {\n    setPlayerName(player.playerName);\n    setPlayerNumber(String(player.playerNumber));\n  }, [player.playerName, player.playerNumber]);\n\n  const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    const updatedPlayer: Player = {\n      id: player.id,\n      playerName,\n      team: player.team,\n      playerNumber: Number(playerNumber),\n    };\n    setPlayerName('');\n    setPlayerNumber('');\n    onSubmit(updatedPlayer);\n  };\n\n  const handleNameChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setPlayerName(event.target.value);\n  };\n\n  const handleNumberChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setPlayerNumber(event.target.value);\n  };\n\n  return (\n    <div>\n      <Dialog open={modalOpen} onClose={onClose}>\n        <DialogContent>\n          <form onSubmit={handleSubmit} noValidate autoComplete=\"off\">\n            <TextField\n              autoFocus={true}\n              fullWidth\n              style={{ marginBottom: 16 }}\n              name=\"playerName\"\n              onChange={handleNameChange}\n              placeholder=\"Player Name\"\n              required={true}\n              size=\"small\"\n              type=\"text\"\n              value={playerName}\n              variant=\"outlined\"\n            />\n            <TextField\n              fullWidth\n              style={{ marginBottom: 24 }}\n              name=\"playerNumber\"\n              onChange={handleNumberChange}\n              placeholder=\"Player Number\"\n              required={true}\n              size=\"small\"\n              value={playerNumber}\n              variant=\"outlined\"\n            />\n            <Box\n              display=\"flex\"\n              flexDirection=\"row\"\n              justifyContent=\"space-between\"\n              px={5}\n            >\n              <OkButton />\n              <CancelButton action={onClose} />\n            </Box>\n          </form>\n        </DialogContent>\n      </Dialog>\n    </div>\n  );\n};\n\nexport default PlayerUpdateDialog;\n","import React from 'react';\nimport { makeStyles, Theme, createStyles } from '@material-ui/core/styles';\nimport PersonAddIcon from '@material-ui/icons/PersonAdd';\nimport Fab from '@material-ui/core/Fab';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    personAdd: {\n      marginTop: theme.spacing(1),\n    },\n    icon: {\n      fontSize: 32,\n      padding: theme.spacing(1),\n    },\n  })\n);\n\ninterface Props {\n  action: () => void;\n}\n\nconst PersonAddButton: React.FC<Props> = ({ action }) => {\n  const classes = useStyles();\n\n  return (\n    <Fab\n      className={classes.personAdd}\n      size=\"medium\"\n      color=\"primary\"\n      onClick={action}\n    >\n      <PersonAddIcon className={classes.icon} />\n    </Fab>\n  );\n};\n\nexport default PersonAddButton;\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport Box from '@material-ui/core/Box';\nimport PlayerItem from '../../components/ListItem';\nimport { Player, PlayerInput } from '../../store/player/types';\nimport { Team } from '../../store/team/types';\nimport PlayerAddDialog from '../../components/dialog/PlayerAddDialog';\nimport PlayerUpdateDialog from '../../components/dialog/PlayerUpdateDialog';\nimport store, { getPlayers, getTeams } from '../../store';\nimport { addPlayer, updatePlayer } from '../../store/player/actions';\nimport TeamSelect from '../../components/select/TeamSelect';\nimport PersonAddButton from '../../components/button/PersonAddButton';\n\nconst PlayerView: React.FC = () => {\n  const dispatch = useDispatch();\n  const [selectedTeam, setSelectedTeam] = React.useState<Team['id']>('');\n  const [addDialogOpen, setAddDialogOpen] = React.useState<boolean>(false);\n  const [updateDialogOpen, setUpdateDialogOpen] = React.useState<boolean>(\n    false\n  );\n  const [player, setPlayer] = React.useState<Player>({\n    id: '',\n    playerName: '',\n    team: '',\n    playerNumber: 0,\n  });\n\n  const openAddDialog = (): void => {\n    setAddDialogOpen(true);\n  };\n  const closeAddDialog = (): void => {\n    setAddDialogOpen(false);\n  };\n\n  const openUpdateDialog = (playerToUpdate: Player): void => {\n    setPlayer(playerToUpdate);\n    setUpdateDialogOpen(true);\n  };\n\n  const closeUpdateDialog = (): void => {\n    setUpdateDialogOpen(false);\n  };\n\n  const handleAddPlayer = async (values: PlayerInput) => {\n    closeAddDialog();\n    try {\n      dispatch(addPlayer(values));\n    } catch (error) {\n      console.error(error.message);\n    }\n  };\n\n  const handleUpdatePlayer = (values: Player): void => {\n    closeUpdateDialog();\n    dispatch(updatePlayer(values));\n  };\n\n  const handleTeamSelect = (value: Team['id']) => {\n    setSelectedTeam(value);\n  };\n\n  return (\n    <div>\n      <Box mt={2} mx={2} mb={2}>\n        <TeamSelect\n          teams={getTeams(store.getState())}\n          submit={handleTeamSelect}\n        />\n      </Box>\n      {getPlayers(store.getState())\n        .filter((p) => p.team === selectedTeam)\n        .map((p) => (\n          <PlayerItem\n            key={p.id}\n            player={p}\n            handlePlayerUpdate={openUpdateDialog}\n          />\n        ))}\n\n      <PersonAddButton action={() => openAddDialog()} />\n\n      <PlayerUpdateDialog\n        modalOpen={updateDialogOpen}\n        player={player}\n        onClose={closeUpdateDialog}\n        onSubmit={handleUpdatePlayer}\n      />\n\n      <PlayerAddDialog\n        modalOpen={addDialogOpen}\n        onClose={closeAddDialog}\n        onSubmit={handleAddPlayer}\n        selectedTeam={selectedTeam}\n      />\n    </div>\n  );\n};\n\nexport default PlayerView;\n","import React from 'react';\nimport Box from '@material-ui/core/Box';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport { TeamInput } from '../../../store/team/types';\nimport OkButton from '../../button/OkButton';\nimport CancelButton from '../../button/CancelButton';\n\ninterface Props {\n  modalOpen: boolean;\n  onClose: () => void;\n  onSubmit: (team: TeamInput) => void;\n}\n\nconst TeamAddDialog: React.FC<Props> = ({ modalOpen, onClose, onSubmit }) => {\n  const [teamName, setTeamName] = React.useState<string>('');\n\n  const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    const team = {\n      teamName,\n    };\n    setTeamName('');\n    onSubmit(team);\n  };\n\n  const handleNameChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setTeamName(event.target.value);\n  };\n\n  return (\n    <div>\n      <Dialog open={modalOpen} onClose={onClose}>\n        <DialogContent>\n          <form onSubmit={handleSubmit} noValidate autoComplete=\"off\">\n            <TextField\n              autoFocus={true}\n              fullWidth\n              style={{ marginBottom: 16 }}\n              name=\"teamName\"\n              onChange={handleNameChange}\n              placeholder=\"Team Name\"\n              required={true}\n              size=\"small\"\n              type=\"text\"\n              value={teamName}\n              variant=\"outlined\"\n            />\n            <Box\n              display=\"flex\"\n              flexDirection=\"row\"\n              justifyContent=\"space-between\"\n              px={2}\n            >\n              <OkButton />\n              <CancelButton action={onClose} />\n            </Box>\n          </form>\n        </DialogContent>\n      </Dialog>\n    </div>\n  );\n};\n\nexport default TeamAddDialog;\n","import React from 'react';\nimport Box from '@material-ui/core/Box';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport { Team } from '../../../store/team/types';\nimport OkButton from '../../button/OkButton';\nimport CancelButton from '../../button/CancelButton';\n\ninterface Props {\n  modalOpen: boolean;\n  onClose: () => void;\n  onSubmit: (team: Team) => void;\n  team: Team;\n}\n\nconst TeamUpdateDialog: React.FC<Props> = ({\n  modalOpen,\n  onClose,\n  onSubmit,\n  team,\n}) => {\n  const [teamName, setTeamName] = React.useState<string>('');\n\n  React.useEffect(() => {\n    setTeamName(team.teamName);\n  }, [team.teamName]);\n\n  const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    const updatedTeam: Team = {\n      id: team.id,\n      teamName,\n    };\n    setTeamName('');\n    onSubmit(updatedTeam);\n  };\n\n  const handleNameChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setTeamName(event.target.value);\n  };\n\n  return (\n    <div>\n      <Dialog open={modalOpen} onClose={onClose}>\n        <DialogContent>\n          <form onSubmit={handleSubmit} noValidate autoComplete=\"off\">\n            <TextField\n              autoFocus={true}\n              fullWidth\n              style={{ marginBottom: 16 }}\n              name=\"teamName\"\n              onChange={handleNameChange}\n              placeholder=\"Team Name\"\n              required={true}\n              size=\"small\"\n              type=\"text\"\n              value={teamName}\n              variant=\"outlined\"\n            />\n            <Box\n              display=\"flex\"\n              flexDirection=\"row\"\n              justifyContent=\"space-between\"\n              px={2}\n            >\n              <OkButton />\n              <CancelButton action={onClose} />\n            </Box>\n          </form>\n        </DialogContent>\n      </Dialog>\n    </div>\n  );\n};\n\nexport default TeamUpdateDialog;\n","import React from 'react';\nimport { makeStyles, Theme, createStyles } from '@material-ui/core/styles';\nimport GroupAddIcon from '@material-ui/icons/GroupAdd';\nimport Fab from '@material-ui/core/Fab';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    personAdd: {\n      marginTop: theme.spacing(1),\n    },\n    icon: {\n      fontSize: 32,\n      padding: theme.spacing(1),\n    },\n  })\n);\n\ninterface Props {\n  action: () => void;\n}\n\nconst TeamAddButton: React.FC<Props> = ({ action }) => {\n  const classes = useStyles();\n\n  return (\n    <Fab\n      className={classes.personAdd}\n      size=\"medium\"\n      color=\"primary\"\n      onClick={action}\n    >\n      <GroupAddIcon className={classes.icon} />\n    </Fab>\n  );\n};\n\nexport default TeamAddButton;\n","import React from 'react';\nimport Box from '@material-ui/core/Box';\nimport Typography from '@material-ui/core/Typography';\nimport EditButton from '../button/EditButton';\nimport { Team } from '../../store/team/types';\n\ninterface Props {\n  team: Team;\n  handleTeamUpdate: (team: Team) => void;\n}\n\nconst TeamListItem: React.FC<Props> = ({ team, handleTeamUpdate }) => {\n  return (\n    <div>\n      <Box\n        borderColor=\"secondary.light\"\n        border={1}\n        borderRadius={8}\n        px={2}\n        py={1}\n        display=\"flex\"\n        flexDirection=\"row\"\n        justifyContent=\"space-between\"\n        alignItems=\"center\"\n      >\n        <Typography variant=\"h6\" color=\"textPrimary\">\n          {team.teamName}\n        </Typography>\n        <EditButton action={() => handleTeamUpdate(team)} />\n      </Box>\n    </div>\n  );\n};\n\nexport default TeamListItem;\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { Team, TeamInput } from '../../store/team/types';\nimport TeamAddDialog from '../../components/dialog/TeamAddDialog';\nimport TeamUpdateDialog from '../../components/dialog/TeamUpdateDialog';\nimport store, { getTeams } from '../../store';\nimport { addTeam, updateTeam } from '../../store/team/actions';\nimport TeamAddButton from '../../components/button/TeamAddButton';\nimport TeamListItem from '../../components/TeamListItem';\n\nconst TeamView: React.FC = () => {\n  const dispatch = useDispatch();\n  const [addTeamDialogOpen, setAddTeamDialogOpen] = React.useState<boolean>(\n    false\n  );\n  const [updateTeamDialogOpen, setUpdateTeamDialogOpen] = React.useState<\n    boolean\n  >(false);\n  const [team, setTeam] = React.useState<Team>({\n    id: '',\n    teamName: '',\n  });\n\n  const openAddTeamDialog = (): void => {\n    setAddTeamDialogOpen(true);\n  };\n  const closeAddTeamDialog = (): void => {\n    setAddTeamDialogOpen(false);\n  };\n\n  const openUpdateTeamDialog = (teamToUpdate: Team): void => {\n    setTeam(teamToUpdate);\n    setUpdateTeamDialogOpen(true);\n  };\n\n  const closeUpdateTeamDialog = (): void => {\n    setUpdateTeamDialogOpen(false);\n  };\n\n  const handleAddTeam = async (values: TeamInput) => {\n    closeAddTeamDialog();\n    try {\n      dispatch(addTeam(values));\n    } catch (error) {\n      console.error(error.message);\n    }\n  };\n\n  const handleUpdateTeam = (values: Team): void => {\n    closeUpdateTeamDialog();\n    dispatch(updateTeam(values));\n  };\n\n  return (\n    <div>\n      {getTeams(store.getState()).map((p) => (\n        <TeamListItem\n          key={p.id}\n          team={p}\n          handleTeamUpdate={openUpdateTeamDialog}\n        />\n      ))}\n      <TeamAddButton action={() => openAddTeamDialog()} />\n\n      <TeamUpdateDialog\n        modalOpen={updateTeamDialogOpen}\n        team={team}\n        onClose={closeUpdateTeamDialog}\n        onSubmit={handleUpdateTeam}\n      />\n\n      <TeamAddDialog\n        modalOpen={addTeamDialogOpen}\n        onClose={closeAddTeamDialog}\n        onSubmit={handleAddTeam}\n      />\n    </div>\n  );\n};\n\nexport default TeamView;\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Box from '@material-ui/core/Box';\nimport Collapse from '@material-ui/core/Collapse';\nimport IconButton from '@material-ui/core/IconButton';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport KeyboardArrowDownIcon from '@material-ui/icons/KeyboardArrowDown';\nimport KeyboardArrowUpIcon from '@material-ui/icons/KeyboardArrowUp';\nimport { Stat } from '../../../store/stat/types';\n\nconst useRowStyles = makeStyles((theme) => ({\n  root: {\n    '& > *': {\n      borderBottom: 'unset',\n    },\n  },\n  cell: {\n    width: 50,\n  },\n  tablerow: {\n    width: '100%',\n  },\n}));\n\ninterface Props {\n  row: Stat;\n}\n\nconst StatRow: React.FC<Props> = ({ row }) => {\n  const [open, setOpen] = React.useState<boolean>(false);\n  const classes = useRowStyles();\n\n  const shootingdata = (made: number, attempt: number): string => {\n    const pct = ((100 * made) / attempt).toFixed(0);\n    return attempt > 0 ? `${made}/${attempt}/${pct}` : '0/0/0';\n  };\n\n  const efficiency = (stat: Stat): string => {\n    const result: number =\n      stat.ast +\n      stat.blk +\n      stat.drb -\n      stat.onePa +\n      stat.onePm +\n      stat.orb +\n      stat.stl -\n      stat.threePa +\n      stat.threePm -\n      stat.to -\n      stat.twoPa +\n      stat.twoPm +\n      stat.onePm +\n      stat.threePm * 3 +\n      stat.twoPm * 2;\n\n    return `${result}`;\n  };\n\n  const fgm = (stat: Stat): string => {\n    const result: number = stat.threePm + stat.twoPm;\n    return `${result}`;\n  };\n\n  const fga = (stat: Stat): string => {\n    const result: number = stat.threePa + stat.twoPa;\n    return `${result}`;\n  };\n\n  const fgpct = (stat: Stat): string => {\n    if (stat.threePa + stat.twoPa) {\n      const pct = (\n        (100 * (stat.threePm + stat.twoPm)) /\n        (stat.threePa + stat.twoPa)\n      ).toFixed(0);\n      return `${pct}`;\n    }\n    return '0';\n  };\n\n  return (\n    <>\n      <TableRow className={classes.tablerow}>\n        <TableCell padding=\"none\" size=\"small\" className={classes.cell}>\n          <IconButton\n            size=\"small\"\n            color=\"primary\"\n            onClick={() => setOpen(!open)}\n          >\n            {open ? <KeyboardArrowUpIcon /> : <KeyboardArrowDownIcon />}\n          </IconButton>\n        </TableCell>\n        <TableCell\n          padding=\"none\"\n          size=\"small\"\n          className={classes.cell}\n          align=\"center\"\n        >\n          {row.playerNumber}\n        </TableCell>\n        <TableCell\n          padding=\"none\"\n          size=\"small\"\n          className={classes.cell}\n          align=\"center\"\n        >\n          {row.onePm + row.twoPm * 2 + row.threePm * 3}\n        </TableCell>\n        <TableCell\n          padding=\"none\"\n          size=\"small\"\n          className={classes.cell}\n          align=\"center\"\n        >\n          {row.ast}\n        </TableCell>\n        <TableCell\n          padding=\"none\"\n          size=\"small\"\n          className={classes.cell}\n          align=\"center\"\n        >\n          {row.stl}\n        </TableCell>\n        <TableCell\n          padding=\"none\"\n          size=\"small\"\n          className={classes.cell}\n          align=\"center\"\n        >\n          {row.orb + row.drb}\n        </TableCell>\n        <TableCell\n          padding=\"none\"\n          size=\"small\"\n          className={classes.cell}\n          align=\"center\"\n        >\n          {row.blk}\n        </TableCell>\n        <TableCell\n          padding=\"none\"\n          size=\"small\"\n          className={classes.cell}\n          align=\"center\"\n        >\n          {row.to}\n        </TableCell>\n        <TableCell padding=\"none\" className={classes.cell} align=\"center\">\n          {efficiency(row)}\n        </TableCell>\n      </TableRow>\n      <TableRow className={classes.tablerow}>\n        <TableCell style={{ paddingBottom: 0, paddingTop: 0 }} colSpan={12}>\n          <Collapse in={open} timeout=\"auto\" unmountOnExit>\n            <Box>\n              <Table>\n                <TableHead>\n                  <TableRow>\n                    <TableCell\n                      padding=\"none\"\n                      className={classes.cell}\n                      align=\"center\"\n                    >\n                      1P M/A/%\n                    </TableCell>\n                    <TableCell\n                      padding=\"none\"\n                      className={classes.cell}\n                      align=\"center\"\n                    >\n                      2P M/A/%\n                    </TableCell>\n                    <TableCell\n                      padding=\"none\"\n                      className={classes.cell}\n                      align=\"center\"\n                    >\n                      3P M/A/%\n                    </TableCell>\n                    <TableCell\n                      padding=\"none\"\n                      className={classes.cell}\n                      align=\"center\"\n                    >\n                      FG M/A/%\n                    </TableCell>\n                    <TableCell\n                      padding=\"none\"\n                      className={classes.cell}\n                      align=\"center\"\n                    >\n                      ORB/DRB\n                    </TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  <TableRow>\n                    <TableCell\n                      padding=\"none\"\n                      className={classes.cell}\n                      align=\"center\"\n                    >\n                      {shootingdata(row.onePm, row.onePa)}\n                    </TableCell>\n                    <TableCell\n                      padding=\"none\"\n                      className={classes.cell}\n                      align=\"center\"\n                    >\n                      {shootingdata(row.twoPm, row.twoPa)}\n                    </TableCell>\n                    <TableCell\n                      padding=\"none\"\n                      className={classes.cell}\n                      align=\"center\"\n                    >\n                      {shootingdata(row.threePm, row.threePa)}\n                    </TableCell>\n                    <TableCell\n                      padding=\"none\"\n                      className={classes.cell}\n                      align=\"center\"\n                    >\n                      {`${fgm(row)}/${fga(row)}/${fgpct(row)}`}\n                    </TableCell>\n                    <TableCell\n                      padding=\"none\"\n                      className={classes.cell}\n                      align=\"center\"\n                    >\n                      {`${row.orb} / ${row.drb}`}\n                    </TableCell>\n                  </TableRow>\n                </TableBody>\n              </Table>\n            </Box>\n          </Collapse>\n        </TableCell>\n      </TableRow>\n    </>\n  );\n};\n\nexport default StatRow;\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    '& > *': {\n      borderBottom: 'unset',\n    },\n  },\n  cell: {\n    width: 35,\n  },\n}));\n\nconst StatTableHeader: React.FC = () => {\n  const classes = useStyles();\n  return (\n    <TableHead>\n      <TableRow>\n        <TableCell\n          padding=\"none\"\n          size=\"small\"\n          className={classes.cell}\n          align=\"center\"\n        />\n        <TableCell\n          padding=\"none\"\n          size=\"small\"\n          className={classes.cell}\n          align=\"center\"\n        >\n          ###\n        </TableCell>\n        <TableCell\n          padding=\"none\"\n          size=\"small\"\n          className={classes.cell}\n          align=\"center\"\n        >\n          PTS\n        </TableCell>\n        <TableCell\n          padding=\"none\"\n          size=\"small\"\n          className={classes.cell}\n          align=\"center\"\n        >\n          AST\n        </TableCell>\n        <TableCell\n          padding=\"none\"\n          size=\"small\"\n          className={classes.cell}\n          align=\"center\"\n        >\n          STL\n        </TableCell>\n        <TableCell\n          padding=\"none\"\n          size=\"small\"\n          className={classes.cell}\n          align=\"center\"\n        >\n          REB\n        </TableCell>\n        <TableCell\n          padding=\"none\"\n          size=\"small\"\n          className={classes.cell}\n          align=\"center\"\n        >\n          BLK\n        </TableCell>\n        <TableCell\n          padding=\"none\"\n          size=\"small\"\n          className={classes.cell}\n          align=\"center\"\n        >\n          TO\n        </TableCell>\n        <TableCell\n          padding=\"none\"\n          size=\"small\"\n          className={classes.cell}\n          align=\"center\"\n        >\n          EFF\n        </TableCell>\n      </TableRow>\n    </TableHead>\n  );\n};\n\nexport default StatTableHeader;\n","import React from 'react';\nimport { makeStyles, Theme, createStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport ReplayIcon from '@material-ui/icons/Replay';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      background: theme.palette.primary.main,\n      border: 0,\n      borderRadius: 8,\n      color: 'white',\n      margin: '8px',\n      boxShadow: '3px 3px 3px 1px #aaaaaa',\n    },\n    replayIcon: {\n      marginRight: '4px',\n    },\n  })\n);\n\ninterface Props {\n  action: () => void;\n}\n\nconst RestartButton: React.FC<Props> = ({ action }) => {\n  const classes = useStyles();\n  return (\n    <Button onClick={action} className={classes.root}>\n      <ReplayIcon className={classes.replayIcon} /> Restart\n    </Button>\n  );\n};\n\nexport default RestartButton;\n","import React from 'react';\nimport { makeStyles, Theme } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport Box from '@material-ui/core/Box';\nimport { useDispatch } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport { resetTeams } from '../../store/team/actions';\nimport { resetPlayers } from '../../store/player/actions';\nimport { setHeaderTitle } from '../../store/header/actions';\nimport { resetRoster } from '../../store/roster/actions';\nimport { resetStats } from '../../store/stat/actions';\nimport StatRow from '../../components/table/StatTable/StatRow';\nimport StatTableHeader from '../../components/table/StatTable/StatTableHeader';\nimport store, { getStats } from '../../store';\nimport RestartButton from '../../components/button/RestartButton';\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  table: {\n    width: '100%',\n  },\n}));\n\nconst Stats: React.FC = () => {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const handleGameReset = () => {\n    dispatch(resetPlayers());\n    dispatch(resetRoster());\n    dispatch(resetStats());\n    dispatch(resetTeams());\n    dispatch(setHeaderTitle('Home'));\n    history.push('/');\n  };\n  return (\n    <>\n      <Table stickyHeader className={classes.table}>\n        <StatTableHeader />\n        <TableBody>\n          {getStats(store.getState())\n            .sort((a, b) => a.playerNumber - b.playerNumber)\n            .map((row) => (\n              <StatRow key={row.playerNumber} row={row} />\n            ))}\n        </TableBody>\n      </Table>\n      <Box display=\"flex\" alignItems=\"center\" justifyContent=\"center\" py={2}>\n        <RestartButton action={handleGameReset} />\n      </Box>\n    </>\n  );\n};\n\nexport default Stats;\n","import React from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Box from '@material-ui/core/Box';\nimport Collapse from '@material-ui/core/Collapse';\nimport IconButton from '@material-ui/core/IconButton';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport KeyboardArrowDownIcon from '@material-ui/icons/KeyboardArrowDown';\nimport KeyboardArrowUpIcon from '@material-ui/icons/KeyboardArrowUp';\nimport DoubleArrowRoundedIcon from '@material-ui/icons/DoubleArrowRounded';\nimport { Game } from '../../../store/game/types';\n\nconst useRowStyles = makeStyles((theme) => ({\n  root: {\n    '& > *': {\n      borderBottom: 'unset',\n    },\n  },\n  cell: {\n    width: 30,\n  },\n}));\n\ninterface Props {\n  row: Game;\n}\n\nconst Row: React.FC<Props> = ({ row }) => {\n  const history = useHistory();\n  const [open, setOpen] = React.useState<boolean>(false);\n  const classes = useRowStyles();\n\n  const handleClick = (id: string) => {\n    console.log(id);\n    history.push(`/stats/${id}`);\n  };\n\n  return (\n    <>\n      <TableRow className={classes.root}>\n        <TableCell padding=\"none\" size=\"small\" className={classes.cell}>\n          <IconButton\n            color=\"primary\"\n            size=\"small\"\n            onClick={() => setOpen(!open)}\n          >\n            {open ? <KeyboardArrowUpIcon /> : <KeyboardArrowDownIcon />}\n          </IconButton>\n        </TableCell>\n        <TableCell\n          padding=\"none\"\n          size=\"small\"\n          className={classes.cell}\n          align=\"center\"\n        >\n          {row.homeTeam}\n        </TableCell>\n        <TableCell\n          padding=\"none\"\n          size=\"small\"\n          className={classes.cell}\n          align=\"center\"\n        >\n          {row.awayTeam}\n        </TableCell>\n        <TableCell\n          padding=\"none\"\n          size=\"small\"\n          className={classes.cell}\n          align=\"center\"\n        >\n          {row.gameDate}\n        </TableCell>\n        <TableCell\n          padding=\"none\"\n          size=\"small\"\n          className={classes.cell}\n          align=\"center\"\n        >\n          {row.gameNumber}\n        </TableCell>\n        <TableCell padding=\"none\" className={classes.cell} align=\"center\">\n          <IconButton\n            color=\"primary\"\n            size=\"small\"\n            onClick={() => handleClick(row.id)}\n          >\n            <DoubleArrowRoundedIcon />\n          </IconButton>\n        </TableCell>\n      </TableRow>\n      <TableRow>\n        <TableCell style={{ paddingBottom: 0, paddingTop: 0 }} colSpan={12}>\n          <Collapse in={open} timeout=\"auto\" unmountOnExit>\n            <Box margin={1}>\n              <Table>\n                <TableHead>\n                  <TableRow>\n                    <TableCell\n                      padding=\"none\"\n                      className={classes.cell}\n                      align=\"center\"\n                    >\n                      Description\n                    </TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  <TableRow>\n                    <TableCell\n                      padding=\"none\"\n                      className={classes.cell}\n                      align=\"center\"\n                    >\n                      {row.description}\n                    </TableCell>\n                    <TableCell\n                      padding=\"none\"\n                      className={classes.cell}\n                      align=\"center\"\n                    >\n                      <IconButton\n                        size=\"small\"\n                        onClick={() => handleClick(row.id)}\n                      >\n                        <DoubleArrowRoundedIcon />\n                      </IconButton>\n                    </TableCell>\n                  </TableRow>\n                </TableBody>\n              </Table>\n            </Box>\n          </Collapse>\n        </TableCell>\n      </TableRow>\n    </>\n  );\n};\n\nexport default Row;\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport { Game } from '../../../store/game/types';\nimport Row from './Row';\n\nconst useRowStyles = makeStyles((theme) => ({\n  root: {\n    '& > *': {\n      borderBottom: 'unset',\n    },\n  },\n  cell: {\n    width: 30,\n  },\n}));\n\ninterface Props {\n  games: Game[];\n}\n\nconst GameTable: React.FC<Props> = ({ games }) => {\n  const classes = useRowStyles();\n\n  return (\n    <TableContainer component={Paper}>\n      <Table stickyHeader>\n        <TableHead>\n          <TableRow>\n            <TableCell\n              padding=\"none\"\n              size=\"small\"\n              className={classes.cell}\n              align=\"center\"\n            />\n            <TableCell\n              padding=\"none\"\n              size=\"small\"\n              className={classes.cell}\n              align=\"center\"\n            >\n              Home\n            </TableCell>\n            <TableCell\n              padding=\"none\"\n              size=\"small\"\n              className={classes.cell}\n              align=\"center\"\n            >\n              Away\n            </TableCell>\n            <TableCell\n              padding=\"none\"\n              size=\"small\"\n              className={classes.cell}\n              align=\"center\"\n            >\n              Date\n            </TableCell>\n            <TableCell\n              padding=\"none\"\n              size=\"small\"\n              className={classes.cell}\n              align=\"center\"\n            >\n              Descr\n            </TableCell>\n            <TableCell\n              padding=\"none\"\n              size=\"small\"\n              className={classes.cell}\n              align=\"center\"\n            >\n              Game ID\n            </TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {games.map((row) => (\n            <Row key={row.id} row={row} />\n          ))}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n};\n\nexport default GameTable;\n","import React from 'react';\nimport Box from '@material-ui/core/Box';\nimport store, { getTeams } from '../../store';\nimport TeamSelect from '../../components/select/TeamSelect';\nimport { Team } from '../../store/team/types';\nimport { Game } from '../../store/game/types';\nimport teamService from '../../services/teams';\nimport GameTable from '../../components/table/GameTable';\n\nconst Statselect: React.FC = () => {\n  const [games, setGames] = React.useState<Game[]>([]);\n\n  const handleTeamSelect = async (team: Team['id']) => {\n    console.log('team: ', team);\n    const gameData = await teamService.getGamesByTeam(team);\n    console.log(games);\n    setGames(gameData);\n  };\n\n  return (\n    <>\n      <Box mt={1}>\n        <TeamSelect\n          teams={getTeams(store.getState())}\n          submit={handleTeamSelect}\n        />\n      </Box>\n      <GameTable games={games} />\n    </>\n  );\n};\n\nexport default Statselect;\n","import React from 'react';\nimport { useParams } from 'react-router-dom';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport Paper from '@material-ui/core/Paper';\nimport { Stat } from '../../store/stat/types';\nimport StatRow from '../../components/table/StatTable/StatRow';\nimport StatTableHeader from '../../components/table/StatTable/StatTableHeader';\nimport gameService from '../../services/games';\n\nconst GameStats: React.FC = () => {\n  const { id } = useParams();\n  const [stats, setStats] = React.useState<Stat[]>([]);\n\n  React.useEffect(() => {\n    gameService.getStatsByGame(id).then((statData) => setStats(statData));\n  }, [id]);\n\n  return (\n    <TableContainer component={Paper}>\n      <Table stickyHeader>\n        <StatTableHeader />\n        <TableBody>\n          {stats\n            .sort((a, b) => a.playerNumber - b.playerNumber)\n            .map((row) => (\n              <StatRow key={row.playerNumber} row={row} />\n            ))}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n};\n\nexport default GameStats;\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { makeStyles, Theme, createStyles } from '@material-ui/core/styles';\nimport PlayerItem from '../../components/ListItem';\nimport { Player, PlayerInput } from '../../store/player/types';\nimport PlayerAddDialog from '../../components/dialog/PlayerAddDialog';\nimport PlayerUpdateDialog from '../../components/dialog/PlayerUpdateDialog';\nimport store, { getPlayers } from '../../store';\nimport { addLoggedOutPlayer, updatePlayer } from '../../store/player/actions';\nimport { addToRoster } from '../../store/roster/actions';\nimport PersonAddButton from '../../components/button/PersonAddButton';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      marginLeft: theme.spacing(1),\n      marginRight: theme.spacing(1),\n      marginTop: theme.spacing(1),\n      flexGrow: 1,\n    },\n  })\n);\n\nconst LoggedOutPlayerView: React.FC = () => {\n  const dispatch = useDispatch();\n  const classes = useStyles();\n  const [addDialogOpen, setAddDialogOpen] = React.useState<boolean>(false);\n  const [updateDialogOpen, setUpdateDialogOpen] = React.useState<boolean>(\n    false\n  );\n  const [player, setPlayer] = React.useState<Player>({\n    id: '',\n    playerName: '',\n    team: '',\n    playerNumber: 0,\n  });\n\n  const openAddDialog = (): void => {\n    setAddDialogOpen(true);\n  };\n  const closeAddDialog = (): void => {\n    setAddDialogOpen(false);\n  };\n\n  const openUpdateDialog = (playerToUpdate: Player): void => {\n    setPlayer(playerToUpdate);\n    setUpdateDialogOpen(true);\n  };\n\n  const closeUpdateDialog = (): void => {\n    setUpdateDialogOpen(false);\n  };\n\n  const handleAddPlayer = (values: PlayerInput) => {\n    closeAddDialog();\n    const newPlayer: Player = {\n      id: `${values.playerName}-${values.playerNumber}`,\n      playerName: values.playerName,\n      playerNumber: values.playerNumber,\n      team: 'none',\n    };\n    dispatch(addLoggedOutPlayer(newPlayer));\n    dispatch(addToRoster(newPlayer));\n  };\n\n  const handleUpdatePlayer = (values: Player): void => {\n    closeUpdateDialog();\n    dispatch(updatePlayer(values));\n  };\n\n  return (\n    <div className={classes.root}>\n      {getPlayers(store.getState())\n        .filter((p) => p.team === 'none')\n        .map((p) => (\n          <PlayerItem\n            key={p.id}\n            player={p}\n            handlePlayerUpdate={openUpdateDialog}\n          />\n        ))}\n\n      <PersonAddButton action={() => openAddDialog()} />\n\n      <PlayerUpdateDialog\n        modalOpen={updateDialogOpen}\n        player={player}\n        onClose={closeUpdateDialog}\n        onSubmit={handleUpdatePlayer}\n      />\n\n      <PlayerAddDialog\n        modalOpen={addDialogOpen}\n        onClose={closeAddDialog}\n        onSubmit={handleAddPlayer}\n        selectedTeam=\"none\"\n      />\n    </div>\n  );\n};\n\nexport default LoggedOutPlayerView;\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport { Avatar, Snackbar, Box, Typography, Divider } from '@material-ui/core';\nimport { makeStyles, Theme } from '@material-ui/core/styles';\nimport EventButtons from '../../EventButtons';\nimport PlayerButtons from '../../PlayerButtons';\nimport { setHeaderTitle } from '../../store/header/actions';\nimport AlertDialog from '../../components/dialog/AlertDialog';\nimport store, { getEvent, getEvents, getScore } from '../../store';\nimport { StatEvent } from '../../store/stat/types';\nimport { EventItem } from '../../store/event/types';\nimport { removeStat } from '../../store/stat/actions';\nimport { removeEvent } from '../../store/event/actions';\nimport {\n  ONEPM,\n  TWOPM,\n  THREEPM,\n  ONEPA,\n  TWOPA,\n  THREEPA,\n  TO,\n} from '../../constants/gameEvents';\nimport { reduceOne, reduceTwo, reduceThree } from '../../store/score/actions';\nimport StopButton from '../../components/button/StopButton';\nimport DeleteButton from '../../components/button/DeleteButton';\nimport { successColor, failColor, otherColor } from '../../constants/colors';\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  avatar: {\n    width: theme.spacing(4),\n    height: theme.spacing(4),\n  },\n  score: {\n    paddingLeft: theme.spacing(1),\n  },\n  gameEventList: {\n    paddingLeft: theme.spacing(1),\n  },\n  orangeSnack: {\n    backgroundColor: failColor,\n  },\n  orangeSnackText: {\n    color: '#fafafa',\n  },\n  blueSnack: {\n    backgroundColor: otherColor,\n  },\n  blueSnackText: {\n    color: '#fafafa',\n  },\n  greenSnack: {\n    backgroundColor: successColor,\n  },\n  greenSnackText: {\n    color: '#fafafa',\n  },\n  divider: {\n    marginTop: theme.spacing(1),\n    marginBottom: theme.spacing(1),\n  },\n}));\n\ninterface AvatarProps {\n  event: EventItem;\n}\n\nconst EventAvatar: React.FC<AvatarProps> = ({ event }) => {\n  const classes = useStyles();\n  switch (event.gameEvent) {\n    case ONEPM:\n      return (\n        <Avatar\n          className={classes.avatar}\n          style={{ backgroundColor: successColor }}\n        >\n          <Typography variant=\"h6\">{event.playerNumber}</Typography>\n        </Avatar>\n      );\n    case TWOPM:\n      return (\n        <Avatar\n          className={classes.avatar}\n          style={{ backgroundColor: successColor }}\n        >\n          <Typography variant=\"h6\">{event.playerNumber}</Typography>\n        </Avatar>\n      );\n    case THREEPM:\n      return (\n        <Avatar\n          className={classes.avatar}\n          style={{ backgroundColor: successColor }}\n        >\n          <Typography variant=\"h6\">{event.playerNumber}</Typography>\n        </Avatar>\n      );\n    case ONEPA:\n      return (\n        <Avatar\n          className={classes.avatar}\n          style={{ backgroundColor: failColor }}\n        >\n          <Typography variant=\"h6\">{event.playerNumber}</Typography>\n        </Avatar>\n      );\n    case TWOPA:\n      return (\n        <Avatar\n          className={classes.avatar}\n          style={{ backgroundColor: failColor }}\n        >\n          <Typography variant=\"h6\">{event.playerNumber}</Typography>\n        </Avatar>\n      );\n    case THREEPA:\n      return (\n        <Avatar\n          className={classes.avatar}\n          style={{ backgroundColor: failColor }}\n        >\n          <Typography variant=\"h6\">{event.playerNumber}</Typography>\n        </Avatar>\n      );\n    case TO:\n      return (\n        <Avatar\n          className={classes.avatar}\n          style={{ backgroundColor: failColor }}\n        >\n          <Typography variant=\"h6\">{event.playerNumber}</Typography>\n        </Avatar>\n      );\n    default:\n      return (\n        <Avatar\n          className={classes.avatar}\n          style={{ backgroundColor: otherColor }}\n        >\n          <Typography variant=\"h6\">{event.playerNumber}</Typography>\n        </Avatar>\n      );\n  }\n};\n\nconst LoggedOutRecord: React.FC = () => {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const [showPlayerButtons, setShowPlayerButtons] = React.useState<boolean>(\n    true\n  );\n  const [dialogOpen, setDialogOpen] = React.useState<boolean>(false);\n  const [greenSnack, setGreenSnack] = React.useState(false);\n  const [blueSnack, setBlueSnack] = React.useState(false);\n  const [orangeSnack, setOrangeSnack] = React.useState(false);\n\n  const confirmFinishRecording = () => {\n    setDialogOpen(true);\n  };\n\n  const closeDialog = (): void => {\n    setDialogOpen(false);\n  };\n\n  const handleGreenClose = (event?: React.SyntheticEvent, reason?: string) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n    setGreenSnack(false);\n  };\n\n  const handleOrangeClose = (event?: React.SyntheticEvent, reason?: string) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n    setOrangeSnack(false);\n  };\n\n  const handleBlueClose = (event?: React.SyntheticEvent, reason?: string) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n    setBlueSnack(false);\n  };\n\n  const handleDialogSubmit = (saveStats: boolean) => {\n    closeDialog();\n    if (saveStats) {\n      dispatch(setHeaderTitle('Stat'));\n      history.push('/loggedoutstats');\n    } else {\n      console.log('cancel');\n    }\n  };\n\n  const handleDeleteEvent = (event: EventItem) => {\n    const statEvent: StatEvent = {\n      gameEvent: event.gameEvent,\n      playerNumber: event.playerNumber,\n    };\n    dispatch(removeStat(statEvent));\n    dispatch(removeEvent(event.id));\n    switch (event.gameEvent) {\n      case ONEPM:\n        dispatch(reduceOne());\n        break;\n      case TWOPM:\n        dispatch(reduceTwo());\n        break;\n      case THREEPM:\n        dispatch(reduceThree());\n        break;\n      default:\n        break;\n    }\n  };\n\n  return (\n    <>\n      <Box display=\"flex\" flexDirection=\"row\">\n        <Box display=\"flex\" flexDirection=\"row\" marginTop={1} p={1} width=\"70%\">\n          <Typography align=\"left\" variant=\"h4\" color=\"secondary\">\n            Score:\n          </Typography>\n          <Typography align=\"left\" variant=\"h4\" className={classes.score}>\n            {getScore(store.getState())}\n          </Typography>\n        </Box>\n        <Box\n          display=\"flex\"\n          marginTop={1}\n          width=\"30%\"\n          alignItems=\"center\"\n          justifyContent=\"center\"\n        >\n          <StopButton action={confirmFinishRecording} />\n        </Box>\n      </Box>\n      <Divider />\n      {showPlayerButtons ? (\n        <PlayerButtons showPlayerButtons={setShowPlayerButtons} />\n      ) : (\n        <EventButtons\n          showPlayerButtons={setShowPlayerButtons}\n          setSnackbar={setGreenSnack}\n          setOrangeSnack={setOrangeSnack}\n          setBlueSnack={setBlueSnack}\n        />\n      )}\n      <Divider className={classes.divider} />\n\n      {showPlayerButtons &&\n        getEvents(store.getState()).map((evt) => (\n          <Box\n            key={evt.id}\n            display=\"flex\"\n            flexDirection=\"row\"\n            border={1}\n            borderColor=\"secondary.light\"\n            borderRadius={8}\n            justifyContent=\"space-between\"\n            mx={5}\n            px={1}\n          >\n            <Box\n              display=\"flex\"\n              paddingTop={0}\n              paddingBottom={0}\n              px={4}\n              alignItems=\"center\"\n            >\n              <EventAvatar event={evt} />\n              <Typography className={classes.gameEventList}>\n                {evt.gameEvent}\n              </Typography>\n            </Box>\n            <Box\n              display=\"flex\"\n              paddingTop={0}\n              paddingBottom={0}\n              px={4}\n              alignItems=\"center\"\n              justifyContent=\"center\"\n            >\n              <DeleteButton action={() => handleDeleteEvent(evt)} />\n            </Box>\n          </Box>\n        ))}\n      {getEvent(store.getState()) ? (\n        <Snackbar\n          anchorOrigin={{ vertical: 'top', horizontal: 'center' }}\n          open={greenSnack}\n          autoHideDuration={2000}\n          onClose={handleGreenClose}\n        >\n          <Box\n            className={classes.greenSnack}\n            display=\"flex\"\n            border={2}\n            width=\"30%\"\n            borderColor=\"white\"\n            borderRadius={8}\n            height={50}\n            alignItems=\"center\"\n            justifyContent=\"center\"\n          >\n            <Typography variant=\"h6\" className={classes.greenSnackText}>\n              #{getEvent(store.getState()).playerNumber}{' '}\n              {getEvent(store.getState()).gameEvent}\n            </Typography>\n          </Box>\n        </Snackbar>\n      ) : null}\n\n      {getEvent(store.getState()) ? (\n        <Snackbar\n          anchorOrigin={{ vertical: 'top', horizontal: 'center' }}\n          open={orangeSnack}\n          autoHideDuration={2000}\n          onClose={handleOrangeClose}\n        >\n          <Box\n            className={classes.orangeSnack}\n            display=\"flex\"\n            border={2}\n            width=\"30%\"\n            borderColor=\"white\"\n            borderRadius={8}\n            height={50}\n            alignItems=\"center\"\n            justifyContent=\"center\"\n          >\n            <Typography variant=\"h6\" className={classes.orangeSnackText}>\n              #{getEvent(store.getState()).playerNumber}{' '}\n              {getEvent(store.getState()).gameEvent}\n            </Typography>\n          </Box>\n        </Snackbar>\n      ) : null}\n\n      {getEvent(store.getState()) ? (\n        <Snackbar\n          anchorOrigin={{ vertical: 'top', horizontal: 'center' }}\n          open={blueSnack}\n          autoHideDuration={2000}\n          onClose={handleBlueClose}\n        >\n          <Box\n            className={classes.blueSnack}\n            display=\"flex\"\n            border={2}\n            width=\"30%\"\n            borderColor=\"white\"\n            borderRadius={8}\n            height={50}\n            alignItems=\"center\"\n            justifyContent=\"center\"\n          >\n            <Typography variant=\"h6\" className={classes.blueSnackText}>\n              #{getEvent(store.getState()).playerNumber}{' '}\n              {getEvent(store.getState()).gameEvent}\n            </Typography>\n          </Box>\n        </Snackbar>\n      ) : null}\n\n      <AlertDialog\n        dialogOpen={dialogOpen}\n        onClose={closeDialog}\n        onSubmit={handleDialogSubmit}\n      />\n    </>\n  );\n};\n\nexport default LoggedOutRecord;\n","import React from 'react';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core/styles';\nimport { useDispatch } from 'react-redux';\nimport pink from '@material-ui/core/colors/pink';\nimport blueGrey from '@material-ui/core/colors/blueGrey';\nimport { loginUser } from './store/user/actions';\nimport Header from './views/Header';\nimport Home from './views/Home';\nimport Record from './views/Record';\nimport PlayerView from './views/PlayerView';\nimport TeamView from './views/TeamView';\nimport LoggedOutStats from './views/LoggedOutStats';\nimport StatSelect from './views/StatSelect';\nimport GameStats from './views/GameStats';\nimport LoggedOutPlayerView from './views/LoggedOutPlayerView';\nimport LoggedOutRecord from './views/LoggedOutRecord';\n\nconst THEME = createMuiTheme({\n  typography: {\n    fontFamily: '\"Roboto\", \"Helvetica\", \"Arial\", sans-serif',\n    fontSize: 14,\n    fontWeightLight: 300,\n    fontWeightRegular: 400,\n    fontWeightMedium: 500,\n  },\n  palette: {\n    primary: pink,\n    secondary: blueGrey,\n  },\n});\n\nconst App: React.FC = () => {\n  const dispatch = useDispatch();\n  const [loggedIn, setLoggedIn] = React.useState<boolean>(false);\n\n  React.useEffect(() => {\n    const loggedInUser = window.localStorage.getItem('basketBallStatUser');\n    if (loggedInUser) {\n      const user = JSON.parse(loggedInUser);\n      dispatch(loginUser(user));\n      setLoggedIn(true);\n    }\n  }, [dispatch]);\n\n  return (\n    <Router>\n      <ThemeProvider theme={THEME}>\n        <Header loggedIn={loggedIn} setLoggedIn={setLoggedIn} />\n        <Switch>\n          <Route exact path=\"/\" render={() => <Home />} />\n          <Route path=\"/player\" render={() => <PlayerView />} />\n          <Route path=\"/team\" render={() => <TeamView />} />\n          <Route path=\"/stats/:id\" render={() => <GameStats />} />\n          <Route path=\"/statselect\" render={() => <StatSelect />} />\n          <Route path=\"/record\" render={() => <Record />} />\n          <Route path=\"/loggedoutstats\" render={() => <LoggedOutStats />} />\n          <Route\n            path=\"/loggedoutplayer\"\n            render={() => <LoggedOutPlayerView />}\n          />\n          <Route path=\"/loggedoutrecord\" render={() => <LoggedOutRecord />} />\n        </Switch>\n      </ThemeProvider>\n    </Router>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport App from './App';\nimport store from './store';\nimport 'fontsource-roboto';\n\nconst renderApp = () => {\n  ReactDOM.render(\n    <Provider store={store}>\n      <App />\n    </Provider>,\n    document.getElementById('root')\n  );\n};\n\nrenderApp();\nstore.subscribe(renderApp);\n"],"sourceRoot":""}
{"version":3,"sources":["store/user/actions.ts","store/user/types.ts","components/modals/LoginDialog/index.tsx","services/login.ts","store/event/reducers.ts","store/event/types.ts","store/stat/reducers.ts","constants/gameEvents.ts","store/stat/types.ts","store/player/reducers.ts","store/player/types.ts","store/user/reducers.ts","store/team/reducers.ts","store/team/types.ts","store/index.ts","utils/index.ts","services/teams.ts","services/players.ts","views/Header/index.tsx","store/team/actions.ts","store/player/actions.ts","views/Home/index.tsx","constants/colors.ts","store/event/actions.ts","store/stat/actions.ts","components/buttons/GreenButton.tsx","components/buttons/OrangeButton.tsx","components/buttons/BlueButton.tsx","components/buttons/GreyButton.tsx","EventButtons/index.tsx","components/buttons/PlayerButton.tsx","components/buttons/EmptyButton.tsx","PlayerButtons/index.tsx","views/Record/index.tsx","views/Team/PlayerItem.tsx","components/modals/PlayerAddDialog/index.tsx","components/modals/TeamAddDialog/index.tsx","components/modals/PlayerUpdateDialog/index.tsx","components/selects/TeamSelect/index.tsx","views/Team/index.tsx","views/Stats/index.tsx","App.tsx","index.tsx"],"names":["loginUser","payload","type","LoginDialog","modalOpen","onClose","onSubmit","React","useState","username","setUsername","password","setPassword","Dialog","open","DialogContent","event","preventDefault","user","noValidate","autoComplete","TextField","autoFocus","fullWidth","style","marginBottom","name","onChange","target","value","placeholder","required","size","variant","Button","color","marginRight","onClick","marginLeft","login","credentials","a","axios","post","data","initialState","gameEvent","playerNumber","undefined","eventReducer","state","action","stats","updateStat","stat","newStat","onePm","onePa","twoPm","twoPa","threePm","threePa","orb","to","drb","ast","blk","stl","statReducer","currStat","emptyStat","console","log","find","s","updatedStats","map","players","playerReducer","currPlayer","p","id","playerName","updatedPlayers","userReducer","teams","teamReducer","currTeam","teamName","rootReducer","combineReducers","lastEvent","getEvent","getUser","getToken","token","store","createStore","composeWithDevTools","applyMiddleware","thunk","setAuthHeader","headers","Authorization","getAll","getState","config","get","createTeam","team","createPlayer","player","useStyles","makeStyles","theme","createStyles","root","flexGrow","menuButton","spacing","title","list","width","fullList","avatar","orange","height","backgroundColor","grey","basketball","fontSize","Header","loggedIn","setLoggedIn","dispatch","useDispatch","classes","drawerOpen","setDrawerOpen","menuTitle","setMenuTitle","dialogOpen","setDialogOpen","closeDialog","handleLogin","values","loginService","window","localStorage","setItem","JSON","stringify","teamService","playerService","error","toggleDrawer","key","className","AppBar","position","Toolbar","IconButton","edge","aria-label","Typography","Avatar","removeItem","Drawer","anchor","role","onKeyDown","List","ListItem","component","Link","button","ListItemIcon","ListItemText","display","Home","successColor","lightGreen","failColor","deepOrange","otherColor","indigo","undoColor","unusedColor","setEvent","addStat","background","border","borderRadius","padding","margin","GreenButton","showPlayerButtons","OrangeButton","BlueButton","GreyButton","EventButtons","Grid","container","direction","justify","alignItems","Box","bgcolor","marginTop","PlayerButton","EmptyButton","disabled","PlayerButtons","Record","SetShowPlayerButtons","PlayerItem","handlePlayerUpdate","ListItemAvatar","primary","ListItemSecondaryAction","PlayerAddDialog","setPlayerName","setPlayerNumber","Number","TeamAddDialog","setTeamName","PlayerUpdateDialog","useEffect","String","updatedPlayer","formControl","minWidth","selectEmpty","TeamSelect","teamId","setTeamId","age","handleTeamChange","FormControl","InputLabel","htmlFor","Select","native","label","item","maxWidth","demo","palette","paper","TeamView","addDialogOpen","setAddDialogOpen","addTeamDialogOpen","setAddTeamDialogOpen","updateDialogOpen","setUpdateDialogOpen","setPlayer","closeAddDialog","closeAddTeamDialog","openUpdateDialog","playerToUpdate","closeUpdateDialog","handleAddPlayer","newPlayer","message","handleAddTeam","newTeam","xs","md","getPlayers","useRowStyles","borderBottom","cell","Row","row","setOpen","shootingdata","made","attempt","pct","toFixed","TableRow","TableCell","align","paddingBottom","paddingTop","colSpan","Collapse","in","timeout","unmountOnExit","Table","TableHead","TableBody","Stats","TableContainer","Paper","stickyHeader","App","createMuiTheme","loggedInUser","getItem","parse","ThemeProvider","path","render","Team","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.7e37fb94.chunk.js","sourcesContent":["import { User, LOGIN, LOGOUT } from './types';\n\nexport const logoutUser = (payload: User) => {\n  return {\n    type: LOGOUT,\n    payload,\n  };\n};\n\nexport const loginUser = (payload: User) => {\n  return {\n    type: LOGIN,\n    payload,\n  };\n};\n\n/* MALLI redux thunk action\nexport const loginUser: ActionCreator<ThunkAction<\n  Promise<LoginAction>,\n  User,\n  LoginInput,\n  LoginAction\n>> = (credentials: LoginInput) => {\n  return async (dispatch: Dispatch) => {\n    const payload = await loginService.login(credentials);\n    const loginAction: LoginAction = {\n      type: LOGIN,\n      payload,\n    };\n    return dispatch(loginAction);\n  };\n};\n\n*/\n","import { Action } from 'redux';\n\nexport interface LoginInput {\n  username: string;\n  password: string;\n}\n\ninterface LoggedInUser {\n  username: string;\n  token: string;\n}\n\nexport type User = LoggedInUser | null;\n\nexport interface UserState {\n  user: User;\n}\n\nexport const LOGIN = 'LOGIN';\nexport const LOGOUT = 'LOGOUT';\n\nexport interface LoginAction extends Action<'LOGIN'> {\n  type: typeof LOGIN;\n  payload: User;\n}\n\ninterface LogoutAction {\n  type: typeof LOGOUT;\n  payload: undefined;\n}\n\nexport type UserActionTypes = LoginAction | LogoutAction;\n","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport { LoginInput } from '../../../store/user/types';\n\ninterface Props {\n  modalOpen: boolean;\n  onClose: () => void;\n  onSubmit: (user: LoginInput) => void;\n}\n\nconst LoginDialog: React.FC<Props> = ({ modalOpen, onClose, onSubmit }) => {\n  const [username, setUsername] = React.useState<string>('');\n  const [password, setPassword] = React.useState<string>('');\n\n  const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    const user = {\n      username,\n      password,\n    };\n    setUsername('');\n    setPassword('');\n    onSubmit(user);\n  };\n\n  const handleUsernameChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setUsername(event.target.value);\n  };\n\n  const handlePasswordChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setPassword(event.target.value);\n  };\n\n  return (\n    <div>\n      <Dialog open={modalOpen} onClose={onClose}>\n        <DialogContent>\n          <form onSubmit={handleSubmit} noValidate autoComplete=\"off\">\n            <TextField\n              autoFocus={true}\n              fullWidth\n              style={{ marginBottom: 16 }}\n              name=\"username\"\n              onChange={handleUsernameChange}\n              placeholder=\"Username\"\n              required={true}\n              size=\"small\"\n              type=\"text\"\n              value={username}\n              variant=\"outlined\"\n            />\n            <TextField\n              fullWidth\n              style={{ marginBottom: 24 }}\n              name=\"password\"\n              onChange={handlePasswordChange}\n              placeholder=\"Password\"\n              required={true}\n              size=\"small\"\n              type=\"password\"\n              value={password}\n              variant=\"outlined\"\n            />\n            <Button\n              variant=\"outlined\"\n              type=\"submit\"\n              color=\"primary\"\n              style={{ marginBottom: 8, marginRight: 8 }}\n            >\n              Login\n            </Button>\n            <Button\n              variant=\"outlined\"\n              onClick={onClose}\n              color=\"secondary\"\n              style={{ marginBottom: 8, marginLeft: 8 }}\n            >\n              Cancel\n            </Button>\n          </form>\n        </DialogContent>\n      </Dialog>\n    </div>\n  );\n};\n\nexport default LoginDialog;\n","import axios from 'axios';\nimport { LoginInput } from '../store/user/types';\n\nconst baseUrl = '/api/login';\n\nconst login = async (credentials: LoginInput) => {\n  return (await axios.post(baseUrl, credentials)).data;\n};\n\nexport default { login };\n","import {\n  EventState,\n  SET_GAME_EVENT,\n  SET_PLAYER,\n  EventActionTypes,\n} from './types';\n\nconst initialState: EventState = {\n  gameEvent: '',\n  playerNumber: undefined,\n};\n\nconst eventReducer = (\n  state = initialState,\n  action: EventActionTypes\n): EventState => {\n  switch (action.type) {\n    case SET_GAME_EVENT:\n      return { ...state, gameEvent: action.payload.gameEvent };\n    case SET_PLAYER:\n      return { ...state, playerNumber: action.payload.playerNumber };\n    default:\n      return state;\n  }\n};\n\nexport default eventReducer;\n","export interface GameEvent {\n  gameEvent: string;\n}\n\nexport interface PlayerNumber {\n  playerNumber: number;\n}\n\nexport interface EventState {\n  gameEvent: string;\n  playerNumber: number | undefined;\n}\n\nexport const SET_GAME_EVENT = 'SET_GAME_EVENT';\nexport const SET_PLAYER = 'SET_PLAYER';\n\ninterface SetGameEventAction {\n  type: typeof SET_GAME_EVENT;\n  payload: GameEvent;\n}\n\ninterface SetPlayerAction {\n  type: typeof SET_PLAYER;\n  payload: PlayerNumber;\n}\n\nexport type EventActionTypes = SetGameEventAction | SetPlayerAction;\n","import { StatState, ADD_STAT, StatActionTypes, Stat } from './types';\nimport {\n  ONEPM,\n  TWOPM,\n  THREEPM,\n  ONEPA,\n  TWOPA,\n  THREEPA,\n  ORB,\n  TO,\n  DRB,\n  AST,\n  BLK,\n  STL,\n} from '../../constants/gameEvents';\n\nconst initialState: StatState = {\n  stats: [],\n};\n\nconst updateStat = (stat: Stat, event: string): Stat => {\n  const newStat = stat;\n  switch (event) {\n    case ONEPM:\n      newStat.onePm += 1;\n      newStat.onePa += 1;\n      return newStat;\n    case TWOPM:\n      newStat.twoPm += 1;\n      newStat.twoPa += 1;\n      return newStat;\n    case THREEPM:\n      newStat.threePm += 1;\n      newStat.threePa += 1;\n      return newStat;\n    case ONEPA:\n      newStat.onePa += 1;\n      return newStat;\n    case TWOPA:\n      newStat.twoPa += 1;\n      return newStat;\n    case THREEPA:\n      newStat.threePa += 1;\n      return newStat;\n    case ORB:\n      newStat.orb += 1;\n      return newStat;\n    case TO:\n      newStat.to += 1;\n      return newStat;\n    case DRB:\n      newStat.drb += 1;\n      return newStat;\n    case AST:\n      newStat.ast += 1;\n      return newStat;\n    case BLK:\n      newStat.blk += 1;\n      return newStat;\n    case STL:\n      newStat.stl += 1;\n      return newStat;\n    default:\n      return stat;\n  }\n};\n\nconst statReducer = (\n  state = initialState,\n  action: StatActionTypes\n): StatState => {\n  const emptyStat: Stat = {\n    playerNumber: undefined,\n    onePm: 0,\n    twoPm: 0,\n    threePm: 0,\n    onePa: 0,\n    twoPa: 0,\n    threePa: 0,\n    orb: 0,\n    to: 0,\n    drb: 0,\n    ast: 0,\n    blk: 0,\n    stl: 0,\n  };\n  let currStat: Stat;\n\n  switch (action.type) {\n    case ADD_STAT:\n      console.log('ADD_STAT', action.payload);\n      if (\n        state.stats.find((s) => s.playerNumber === action.payload.playerNumber)\n      ) {\n        currStat = state.stats.find(\n          (s) => s.playerNumber === action.payload.playerNumber\n        )!;\n        currStat = updateStat(currStat, action.payload.gameEvent);\n        const updatedStats = state.stats.map((s) =>\n          s.playerNumber === action.payload.playerNumber ? currStat : s\n        );\n        return { stats: [...updatedStats] };\n      }\n      currStat = emptyStat;\n      currStat.playerNumber = action.payload.playerNumber;\n      currStat = updateStat(currStat, action.payload.gameEvent);\n      return { ...state, stats: [...state.stats, currStat] };\n\n    default:\n      return state;\n  }\n};\n\nexport default statReducer;\n","export const ONEPM = '1PM';\nexport const TWOPM = '2PM';\nexport const THREEPM = '3PM';\nexport const ONEPA = '1PA';\nexport const TWOPA = '2PA';\nexport const THREEPA = '3PA';\nexport const ORB = 'ORB';\nexport const TO = 'TO';\nexport const DRB = 'DRB';\nexport const AST = 'AST';\nexport const BLK = 'BLK';\nexport const STL = 'STL';\n","export interface Stat {\n  playerNumber: number | undefined;\n  onePm: number;\n  twoPm: number;\n  threePm: number;\n  onePa: number;\n  twoPa: number;\n  threePa: number;\n  orb: number;\n  to: number;\n  drb: number;\n  ast: number;\n  blk: number;\n  stl: number;\n}\n\nexport interface LastEvent {\n  gameEvent: string;\n  playerNumber: number | undefined;\n}\n\nexport interface StatState {\n  stats: Stat[];\n}\n\nexport const ADD_STAT = 'ADD_STAT';\n\ninterface AddStatAction {\n  type: typeof ADD_STAT;\n  payload: LastEvent;\n}\n\nexport type StatActionTypes = AddStatAction;\n","import {\n  PlayerState,\n  ADD_PLAYER,\n  UPDATE_PLAYER,\n  INIT_PLAYERS,\n  PlayerActionTypes,\n  Player,\n} from './types';\n\nconst initialState: PlayerState = {\n  players: [],\n};\n\nconst playerReducer = (\n  state = initialState,\n  action: PlayerActionTypes\n): PlayerState => {\n  let currPlayer: Player;\n\n  switch (action.type) {\n    case INIT_PLAYERS:\n      return { ...state, players: [...action.payload] };\n    case ADD_PLAYER:\n      return { ...state, players: [...state.players, action.payload] };\n    case UPDATE_PLAYER:\n      if (state.players.find((p) => p.id === action.payload.id)) {\n        currPlayer = state.players.find((p) => p.id === action.payload.id)!;\n        currPlayer.playerName = action.payload.playerName;\n        currPlayer.playerNumber = action.payload.playerNumber;\n        const updatedPlayers = state.players.map((p) =>\n          p.id === action.payload.id ? currPlayer : p\n        );\n        return { ...state, players: [...updatedPlayers] };\n      }\n      return state;\n    default:\n      return state;\n  }\n};\n\nexport default playerReducer;\n","import { Action } from 'redux';\n\nexport interface Player {\n  id: string;\n  playerNumber: number | undefined;\n  playerName: string;\n}\n\nexport interface PlayerInput {\n  playerNumber: number | undefined;\n  playerName: string;\n}\n\nexport interface PlayerState {\n  players: Player[];\n}\n\nexport const ADD_PLAYER = 'ADD_PLAYER';\nexport const UPDATE_PLAYER = 'UPDATE_PLAYER';\nexport const INIT_PLAYERS = 'INIT_PLAYERS';\nexport const RESET_PLAYERS = 'RESET_PLAYERS';\n\ninterface AddPlayerAction {\n  type: typeof ADD_PLAYER;\n  payload: Player;\n}\n\ninterface UpdatePlayerAction {\n  type: typeof UPDATE_PLAYER;\n  payload: Player;\n}\n\nexport interface InitPlayersAction extends Action<'INIT_PLAYERS'> {\n  type: typeof INIT_PLAYERS;\n  payload: Player[];\n}\n\ninterface ResetPlayersAction {\n  type: typeof RESET_PLAYERS;\n}\n\nexport type PlayerActionTypes =\n  | AddPlayerAction\n  | UpdatePlayerAction\n  | InitPlayersAction\n  | ResetPlayersAction;\n","import { UserState, LOGIN, LOGOUT, UserActionTypes } from './types';\n\nconst initialState: UserState = {\n  user: null,\n};\n\nconst userReducer = (\n  state = initialState,\n  action: UserActionTypes\n): UserState => {\n  switch (action.type) {\n    case LOGIN:\n      return { ...state, user: action.payload };\n    case LOGOUT:\n      return { ...state, user: null };\n    default:\n      return state;\n  }\n};\nexport default userReducer;\n","import {\n  TeamState,\n  ADD_TEAM,\n  UPDATE_TEAM,\n  INIT_TEAMS,\n  RESET_TEAMS,\n  TeamActionTypes,\n  Team,\n} from './types';\n\nconst initialState: TeamState = {\n  teams: [],\n};\n\nconst teamReducer = (\n  state = initialState,\n  action: TeamActionTypes\n): TeamState => {\n  let currTeam: Team;\n\n  switch (action.type) {\n    case INIT_TEAMS:\n      return { ...state, teams: [...action.payload] };\n    case ADD_TEAM:\n      return { ...state, teams: [...state.teams, action.payload] };\n    case UPDATE_TEAM:\n      if (state.teams.find((p) => p.id === action.payload.id)) {\n        currTeam = state.teams.find((p) => p.id === action.payload.id)!;\n        currTeam.teamName = action.payload.teamName;\n        const updatedPlayers = state.teams.map((p) =>\n          p.id === action.payload.id ? currTeam : p\n        );\n        return { ...state, teams: [...updatedPlayers] };\n      }\n      return state;\n    case RESET_TEAMS:\n      return { ...state, teams: [] };\n    default:\n      return state;\n  }\n};\n\nexport default teamReducer;\n","import { Action } from 'redux';\n\nexport interface Team {\n  id: string;\n  teamName: string;\n}\n\nexport interface TeamInput {\n  teamName: string;\n}\n\nexport interface TeamState {\n  teams: Team[];\n}\n\nexport const ADD_TEAM = 'ADD_TEAM';\nexport const UPDATE_TEAM = 'UPDATE_TEAM';\nexport const INIT_TEAMS = 'INIT_TEAMS';\nexport const RESET_TEAMS = 'RESET_TEAMS';\n\ninterface AddTeamAction {\n  type: typeof ADD_TEAM;\n  payload: Team;\n}\n\ninterface UpdateTeamAction {\n  type: typeof UPDATE_TEAM;\n  payload: Team;\n}\n\nexport interface InitTeamsAction extends Action<'INIT_TEAMS'> {\n  type: typeof INIT_TEAMS;\n  payload: Team[];\n}\n\ninterface ResetTeamsAction {\n  type: typeof RESET_TEAMS;\n}\n\nexport type TeamActionTypes =\n  | AddTeamAction\n  | UpdateTeamAction\n  | InitTeamsAction\n  | ResetTeamsAction;\n","import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport eventReducer from './event/reducers';\nimport statReducer from './stat/reducers';\nimport playerReducer from './player/reducers';\nimport userReducer from './user/reducers';\nimport teamReducer from './team/reducers';\n\nconst rootReducer = combineReducers({\n  lastEvent: eventReducer,\n  players: playerReducer,\n  stats: statReducer,\n  user: userReducer,\n  teams: teamReducer,\n});\n\nexport const getEvent = (state: AppState) => {\n  return state.lastEvent;\n};\n\nexport const getPlayers = (state: AppState) => {\n  return state.players;\n};\n\nexport const getStats = (state: AppState) => {\n  return state.stats;\n};\n\nexport const getUser = (state: AppState) => {\n  return state.user.user;\n};\n\nexport const getTeams = (state: AppState) => {\n  return state.teams.teams;\n};\n\nexport const getToken = (state: AppState) => {\n  return state.user.user?.token;\n};\n\nexport type AppState = ReturnType<typeof rootReducer>;\n\nconst store = createStore(\n  rootReducer,\n  composeWithDevTools(applyMiddleware(thunk))\n);\n\nexport default store;\n","interface Authorization {\n  Authorization: string;\n}\n\nexport interface AxiosAuthConfig {\n  headers: Authorization;\n}\n\nexport const setAuthHeader = (token: string | undefined): AxiosAuthConfig => {\n  const tokenWithBearer = `Bearer ${token}`;\n  return { headers: { Authorization: tokenWithBearer } };\n};\n","import axios from 'axios';\nimport store, { getUser, getToken } from '../store';\nimport { Team, TeamInput } from '../store/team/types';\nimport { setAuthHeader, AxiosAuthConfig } from '../utils';\n\nconst baseUrl = '/api/teams';\n\nconst getAll = async (): Promise<Team[]> => {\n  let config: AxiosAuthConfig;\n  if (getUser(store.getState())) {\n    config = setAuthHeader(getToken(store.getState()));\n    return (await axios.get(baseUrl, config)).data;\n  }\n\n  return [];\n};\n\nconst createTeam = async (team: TeamInput): Promise<Team | undefined> => {\n  let config: AxiosAuthConfig;\n  if (getUser(store.getState())) {\n    config = setAuthHeader(getToken(store.getState()));\n    return (await axios.post(baseUrl, team, config)).data;\n  }\n\n  return undefined;\n};\n\nexport default { getAll, createTeam };\n","import axios from 'axios';\nimport store, { getUser, getToken } from '../store';\nimport { Player, PlayerInput } from '../store/player/types';\nimport { setAuthHeader, AxiosAuthConfig } from '../utils';\n\nconst baseUrl = '/api/players';\n\nconst getAll = async (): Promise<Player[]> => {\n  let config: AxiosAuthConfig;\n  if (getUser(store.getState())) {\n    config = setAuthHeader(getToken(store.getState()));\n    return (await axios.get(baseUrl, config)).data;\n  }\n  return [];\n};\n\nconst createPlayer = async (\n  player: PlayerInput\n): Promise<Player | undefined> => {\n  let config: AxiosAuthConfig;\n  if (getUser(store.getState())) {\n    config = setAuthHeader(getToken(store.getState()));\n    return (await axios.post(baseUrl, player, config)).data;\n  }\n\n  return undefined;\n};\n\nexport default { getAll, createPlayer };\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport {\n  Avatar,\n  Drawer,\n  List,\n  ListItem,\n  ListItemIcon,\n  ListItemText,\n  Button,\n} from '@material-ui/core';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport HomeIcon from '@material-ui/icons/Home';\nimport SportsBasketballIcon from '@material-ui/icons/SportsBasketball';\nimport { Link } from 'react-router-dom';\nimport { orange, grey } from '@material-ui/core/colors';\nimport LoginDialog from '../../components/modals/LoginDialog';\nimport { LoginInput } from '../../store/user/types';\nimport loginService from '../../services/login';\nimport { loginUser, logoutUser } from '../../store/user/actions';\nimport { initTeams } from '../../store/team/actions';\nimport { initPlayers } from '../../store/player/actions';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      flexGrow: 1,\n    },\n    menuButton: {\n      marginRight: theme.spacing(2),\n    },\n    title: {\n      flexGrow: 1,\n    },\n    list: {\n      width: 250,\n    },\n    fullList: {\n      width: 'auto',\n    },\n    avatar: {\n      color: orange[700],\n      width: theme.spacing(4),\n      height: theme.spacing(4),\n      backgroundColor: grey[800],\n    },\n    basketball: {\n      fontSize: 34,\n    },\n  })\n);\n\ninterface Props {\n  loggedIn: boolean;\n  setLoggedIn: (value: boolean) => void;\n}\n\nconst Header: React.FC<Props> = ({ loggedIn, setLoggedIn }) => {\n  const dispatch = useDispatch();\n  const classes = useStyles();\n  const [drawerOpen, setDrawerOpen] = React.useState<boolean>(false);\n  const [menuTitle, setMenuTitle] = React.useState<string>('');\n  const [dialogOpen, setDialogOpen] = React.useState<boolean>(false);\n\n  const openDialog = (): void => {\n    setDialogOpen(true);\n  };\n  const closeDialog = (): void => {\n    setDialogOpen(false);\n  };\n  const handleLogin = async (values: LoginInput) => {\n    closeDialog();\n    try {\n      const user = await loginService.login(values);\n      dispatch(loginUser(user));\n      window.localStorage.setItem('basketBallStatUser', JSON.stringify(user));\n      setLoggedIn(true);\n      dispatch(initTeams());\n      dispatch(initPlayers());\n    } catch (error) {\n      console.error('invalid username or password');\n    }\n  };\n  const handleLogout = () => {\n    dispatch(logoutUser(null));\n    window.localStorage.removeItem('basketBallStatUser');\n    setLoggedIn(false);\n  };\n\n  const toggleDrawer = (open: boolean) => (\n    event: React.KeyboardEvent | React.MouseEvent\n  ) => {\n    if (\n      event.type === 'keydown' &&\n      ((event as React.KeyboardEvent).key === 'Tab' ||\n        (event as React.KeyboardEvent).key === 'Shift')\n    ) {\n      return;\n    }\n    setDrawerOpen(open);\n  };\n\n  const list = () => (\n    <div\n      className={classes.list}\n      role=\"presentation\"\n      onClick={toggleDrawer(false)}\n      onKeyDown={toggleDrawer(false)}\n    >\n      <List>\n        <ListItem\n          onClick={() => setMenuTitle('Home')}\n          component={Link}\n          to=\"/\"\n          button\n        >\n          <ListItemIcon>\n            <HomeIcon />\n          </ListItemIcon>\n          <ListItemText>\n            <Typography variant=\"button\" display=\"block\" color=\"textSecondary\">\n              Home\n            </Typography>\n          </ListItemText>\n        </ListItem>\n        <ListItem\n          onClick={() => setMenuTitle('Team')}\n          component={Link}\n          to=\"/team\"\n          button\n        >\n          <ListItemIcon>\n            <HomeIcon />\n          </ListItemIcon>\n          <ListItemText>\n            <Typography variant=\"button\" display=\"block\" color=\"textSecondary\">\n              Team\n            </Typography>\n          </ListItemText>\n        </ListItem>\n        <ListItem\n          onClick={() => setMenuTitle('Record')}\n          component={Link}\n          to=\"/record\"\n          button\n        >\n          <ListItemIcon>\n            <HomeIcon />\n          </ListItemIcon>\n          <ListItemText>\n            <Typography variant=\"button\" display=\"block\" color=\"textSecondary\">\n              Record\n            </Typography>\n          </ListItemText>\n        </ListItem>\n        <ListItem\n          onClick={() => setMenuTitle('Stats')}\n          component={Link}\n          to=\"/stats\"\n          button\n        >\n          <ListItemIcon>\n            <HomeIcon />\n          </ListItemIcon>\n          <ListItemText>\n            <Typography variant=\"button\" display=\"block\" color=\"textSecondary\">\n              Stats\n            </Typography>\n          </ListItemText>\n        </ListItem>\n      </List>\n    </div>\n  );\n\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"static\">\n        <Toolbar>\n          <IconButton\n            edge=\"start\"\n            className={classes.menuButton}\n            color=\"inherit\"\n            aria-label=\"menu\"\n            onClick={toggleDrawer(true)}\n          >\n            <MenuIcon />\n          </IconButton>\n          <Typography variant=\"h5\">{menuTitle}</Typography>\n          <Typography variant=\"h6\" className={classes.title} />\n          {loggedIn ? (\n            <>\n              <Avatar className={classes.avatar}>\n                <SportsBasketballIcon className={classes.basketball} />\n              </Avatar>\n              <Button color=\"inherit\" onClick={() => handleLogout()}>\n                Logout\n              </Button>\n            </>\n          ) : (\n            <Button color=\"inherit\" onClick={() => openDialog()}>\n              Login\n            </Button>\n          )}\n        </Toolbar>\n        <Drawer anchor=\"right\" open={drawerOpen} onClose={toggleDrawer(false)}>\n          {list()}\n        </Drawer>\n      </AppBar>\n      <LoginDialog\n        modalOpen={dialogOpen}\n        onClose={closeDialog}\n        onSubmit={handleLogin}\n      />\n    </div>\n  );\n};\n\nexport default Header;\n","import { Dispatch, ActionCreator } from 'redux';\nimport { ThunkAction } from 'redux-thunk';\nimport {\n  Team,\n  ADD_TEAM,\n  UPDATE_TEAM,\n  INIT_TEAMS,\n  RESET_TEAMS,\n  InitTeamsAction,\n} from './types';\nimport teamService from '../../services/teams';\n\nexport const addTeam = (payload: Team) => {\n  return {\n    type: ADD_TEAM,\n    payload,\n  };\n};\n\nexport const updatePlayer = (payload: Team) => {\n  return {\n    type: UPDATE_TEAM,\n    payload,\n  };\n};\n\nexport const initTeams: ActionCreator<ThunkAction<\n  Promise<void>,\n  Team[],\n  null,\n  InitTeamsAction\n>> = () => {\n  return async (dispatch: Dispatch) => {\n    const payload = await teamService.getAll();\n    dispatch({\n      type: INIT_TEAMS,\n      payload,\n    });\n  };\n};\n\nexport const resetTeams = () => {\n  return {\n    type: RESET_TEAMS,\n  };\n};\n","import { Dispatch, ActionCreator } from 'redux';\nimport { ThunkAction } from 'redux-thunk';\nimport {\n  Player,\n  ADD_PLAYER,\n  UPDATE_PLAYER,\n  INIT_PLAYERS,\n  InitPlayersAction,\n} from './types';\nimport playerService from '../../services/players';\n\nexport const addPlayer = (payload: Player) => {\n  return {\n    type: ADD_PLAYER,\n    payload,\n  };\n};\n\nexport const updatePlayer = (payload: Player) => {\n  return {\n    type: UPDATE_PLAYER,\n    payload,\n  };\n};\n\nexport const initPlayers: ActionCreator<ThunkAction<\n  Promise<void>,\n  Player[],\n  null,\n  InitPlayersAction\n>> = () => {\n  return async (dispatch: Dispatch) => {\n    const payload = await playerService.getAll();\n    dispatch({\n      type: INIT_PLAYERS,\n      payload,\n    });\n  };\n};\n","import React from 'react';\n\nconst Home: React.FC = () => {\n  return <></>;\n};\n\nexport default Home;\n","import { lightGreen, deepOrange, indigo, grey } from '@material-ui/core/colors';\n\nexport const successColor = lightGreen[700];\nexport const failColor = deepOrange[700];\nexport const otherColor = indigo[700];\nexport const undoColor = grey[700];\nexport const unusedColor = grey[300];\n","import { GameEvent, PlayerNumber, SET_GAME_EVENT, SET_PLAYER } from './types';\n\nexport const setPlayer = (data: PlayerNumber) => {\n  return {\n    type: SET_PLAYER,\n    payload: data,\n  };\n};\n\nexport const setEvent = (data: GameEvent) => {\n  return {\n    type: SET_GAME_EVENT,\n    payload: data,\n  };\n};\n","import { ADD_STAT, LastEvent } from './types';\n\nexport const addStat = (data: LastEvent) => {\n  return {\n    type: ADD_STAT,\n    payload: data,\n  };\n};\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport { successColor } from '../../constants/colors';\nimport { setEvent } from '../../store/event/actions';\nimport { addStat } from '../../store/stat/actions';\nimport store, { getEvent } from '../../store';\n\nconst useStyles = makeStyles({\n  root: {\n    background: successColor,\n    border: 0,\n    borderRadius: 3,\n    color: 'white',\n    height: 100,\n    width: '100%',\n    padding: '0 30px',\n    margin: '8px',\n    fontSize: 28,\n  },\n});\n\ninterface Props {\n  gameEvent: string;\n  showPlayerButtons: (value: boolean) => void;\n}\n\nconst GreenButton: React.FC<Props> = ({ gameEvent, showPlayerButtons }) => {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const handleClick = () => {\n    showPlayerButtons(true);\n    dispatch(setEvent({ gameEvent }));\n    dispatch(addStat(getEvent(store.getState())));\n  };\n  return (\n    <Button onClick={handleClick} className={classes.root}>\n      {gameEvent}\n    </Button>\n  );\n};\n\nexport default GreenButton;\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport { failColor } from '../../constants/colors';\nimport { setEvent } from '../../store/event/actions';\nimport { addStat } from '../../store/stat/actions';\nimport store, { getEvent } from '../../store';\n\nconst useStyles = makeStyles({\n  root: {\n    background: failColor,\n    border: 0,\n    borderRadius: 3,\n    color: 'white',\n    height: 100,\n    width: '100%',\n    padding: '0 30px',\n    margin: '8px',\n    fontSize: 28,\n  },\n});\n\ninterface Props {\n  gameEvent: string;\n  showPlayerButtons: (value: boolean) => void;\n}\n\nconst OrangeButton: React.FC<Props> = ({ gameEvent, showPlayerButtons }) => {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const handleClick = () => {\n    showPlayerButtons(true);\n    dispatch(setEvent({ gameEvent }));\n    dispatch(addStat(getEvent(store.getState())));\n  };\n  return (\n    <Button onClick={handleClick} className={classes.root}>\n      {gameEvent}\n    </Button>\n  );\n};\n\nexport default OrangeButton;\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport { otherColor } from '../../constants/colors';\nimport { setEvent } from '../../store/event/actions';\nimport { addStat } from '../../store/stat/actions';\nimport store, { getEvent } from '../../store';\n\nconst useStyles = makeStyles({\n  root: {\n    background: otherColor,\n    border: 0,\n    borderRadius: 3,\n    color: 'white',\n    height: 100,\n    width: '100%',\n    padding: '0 30px',\n    margin: '8px',\n    fontSize: 28,\n  },\n});\n\ninterface Props {\n  gameEvent: string;\n  showPlayerButtons: (value: boolean) => void;\n}\n\nconst BlueButton: React.FC<Props> = ({ gameEvent, showPlayerButtons }) => {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const handleClick = () => {\n    showPlayerButtons(true);\n    dispatch(setEvent({ gameEvent }));\n    dispatch(addStat(getEvent(store.getState())));\n  };\n  return (\n    <Button onClick={handleClick} className={classes.root}>\n      {gameEvent}\n    </Button>\n  );\n};\n\nexport default BlueButton;\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport { undoColor } from '../../constants/colors';\n\nconst useStyles = makeStyles({\n  root: {\n    background: undoColor,\n    border: 0,\n    borderRadius: 3,\n    color: 'white',\n    height: 80,\n    width: '100%',\n    padding: '0 30px',\n    margin: '8px',\n    fontSize: 28,\n  },\n});\n\ninterface Props {\n  gameEvent: string;\n  showPlayerButtons: (value: boolean) => void;\n}\n\nconst GreyButton: React.FC<Props> = ({ gameEvent, showPlayerButtons }) => {\n  const classes = useStyles();\n  const handleClick = () => {\n    showPlayerButtons(true);\n  };\n  return (\n    <Button onClick={handleClick} className={classes.root}>\n      {gameEvent}\n    </Button>\n  );\n};\n\nexport default GreyButton;\n","import React from 'react';\nimport { Box, Grid } from '@material-ui/core';\nimport GreenButton from '../components/buttons/GreenButton';\nimport OrangeButton from '../components/buttons/OrangeButton';\nimport BlueButton from '../components/buttons/BlueButton';\nimport GreyButton from '../components/buttons/GreyButton';\nimport {\n  ONEPM,\n  TWOPM,\n  THREEPM,\n  ONEPA,\n  TWOPA,\n  THREEPA,\n  ORB,\n  TO,\n  DRB,\n  AST,\n  BLK,\n  STL,\n} from '../constants/gameEvents';\n\ninterface Props {\n  showPlayerButtons: (value: boolean) => void;\n}\n\nconst EventButtons: React.FC<Props> = ({ showPlayerButtons }) => {\n  return (\n    <Grid container direction=\"column\" justify=\"center\" alignItems=\"center\">\n      <Box\n        display=\"flex\"\n        bgcolor=\"white\"\n        width=\"100%\"\n        height=\"100%\"\n        marginTop={0}\n      >\n        <GreenButton gameEvent={ONEPM} showPlayerButtons={showPlayerButtons} />\n        <GreenButton gameEvent={TWOPM} showPlayerButtons={showPlayerButtons} />\n        <GreenButton\n          gameEvent={THREEPM}\n          showPlayerButtons={showPlayerButtons}\n        />\n      </Box>\n      <Box\n        display=\"flex\"\n        bgcolor=\"white\"\n        width=\"100%\"\n        height=\"100%\"\n        marginTop={0}\n      >\n        <OrangeButton gameEvent={ONEPA} showPlayerButtons={showPlayerButtons} />\n        <OrangeButton gameEvent={TWOPA} showPlayerButtons={showPlayerButtons} />\n        <OrangeButton\n          gameEvent={THREEPA}\n          showPlayerButtons={showPlayerButtons}\n        />\n      </Box>\n      <Box\n        display=\"flex\"\n        bgcolor=\"white\"\n        width=\"100%\"\n        height=\"100%\"\n        marginTop={0}\n      >\n        <BlueButton gameEvent={ORB} showPlayerButtons={showPlayerButtons} />\n        <OrangeButton gameEvent={TO} showPlayerButtons={showPlayerButtons} />\n        <BlueButton gameEvent={DRB} showPlayerButtons={showPlayerButtons} />\n      </Box>\n      <Box\n        display=\"flex\"\n        bgcolor=\"white\"\n        width=\"100%\"\n        height=\"100%\"\n        marginTop={0}\n      >\n        <BlueButton gameEvent={AST} showPlayerButtons={showPlayerButtons} />\n        <BlueButton gameEvent={BLK} showPlayerButtons={showPlayerButtons} />\n        <BlueButton gameEvent={STL} showPlayerButtons={showPlayerButtons} />\n      </Box>\n      <Box display=\"flex\" bgcolor=\"white\" width=\"100%\" marginTop={0}>\n        <GreyButton gameEvent=\"UNDO\" showPlayerButtons={showPlayerButtons} />\n      </Box>\n    </Grid>\n  );\n};\n\nexport default EventButtons;\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport { useDispatch } from 'react-redux';\nimport { otherColor } from '../../constants/colors';\nimport { setPlayer } from '../../store/event/actions';\n\nconst useStyles = makeStyles({\n  root: {\n    background: otherColor,\n    border: 0,\n    borderRadius: 3,\n    color: 'white',\n    height: 100,\n    width: '100%',\n    padding: '0 30px',\n    margin: '8px',\n    fontSize: 28,\n  },\n});\n\ninterface Props {\n  playerNumber: number;\n  showPlayerButtons: (value: boolean) => void;\n}\n\nconst PlayerButton: React.FC<Props> = ({ playerNumber, showPlayerButtons }) => {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const handleClick = () => {\n    dispatch(setPlayer({ playerNumber }));\n    showPlayerButtons(false);\n  };\n  return (\n    <Button onClick={handleClick} className={classes.root}>\n      {playerNumber}\n    </Button>\n  );\n};\n\nexport default PlayerButton;\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport { unusedColor } from '../../constants/colors';\n\nconst useStyles = makeStyles({\n  root: {\n    background: unusedColor,\n    border: 0,\n    borderRadius: 3,\n    color: 'white',\n    height: 100,\n    width: '100%',\n    padding: '0 30px',\n    margin: '8px',\n    fontSize: 28,\n  },\n});\n\nconst EmptyButton: React.FC = () => {\n  const classes = useStyles();\n\n  return (\n    <Button disabled className={classes.root}>\n      ---\n    </Button>\n  );\n};\n\nexport default EmptyButton;\n","import React from 'react';\nimport { Box, Grid } from '@material-ui/core';\nimport PlayerButton from '../components/buttons/PlayerButton';\nimport EmptyButton from '../components/buttons/EmptyButton';\nimport { playerList } from '../data/players';\nimport { Player } from '../store/player/types';\n\ninterface Props {\n  showPlayerButtons: (value: boolean) => void;\n}\n\nconst PlayerButtons: React.FC<Props> = ({ showPlayerButtons }) => {\n  const [players, SetPlayers] = React.useState<Player[]>([]);\n  /* TODO REMOVE\n  React.useEffect(() => {\n    SetPlayers(playerList);\n  }, []);\n  */\n  return (\n    <Grid container direction=\"column\" justify=\"center\" alignItems=\"center\">\n      <Box\n        display=\"flex\"\n        bgcolor=\"white\"\n        width=\"100%\"\n        height=\"100%\"\n        marginTop={0}\n      >\n        {players[0] && players[0].playerNumber ? (\n          <PlayerButton\n            playerNumber={players[0].playerNumber}\n            showPlayerButtons={showPlayerButtons}\n          />\n        ) : (\n          <EmptyButton />\n        )}\n        {players[1] && players[1].playerNumber ? (\n          <PlayerButton\n            playerNumber={players[1].playerNumber}\n            showPlayerButtons={showPlayerButtons}\n          />\n        ) : (\n          <EmptyButton />\n        )}\n        {players[2] && players[2].playerNumber ? (\n          <PlayerButton\n            playerNumber={players[2].playerNumber}\n            showPlayerButtons={showPlayerButtons}\n          />\n        ) : (\n          <EmptyButton />\n        )}\n      </Box>\n      <Box\n        display=\"flex\"\n        bgcolor=\"white\"\n        width=\"100%\"\n        height=\"100%\"\n        marginTop={0}\n      >\n        {players[3] && players[3].playerNumber ? (\n          <PlayerButton\n            playerNumber={players[3].playerNumber}\n            showPlayerButtons={showPlayerButtons}\n          />\n        ) : (\n          <EmptyButton />\n        )}\n        {players[4] && players[4].playerNumber ? (\n          <PlayerButton\n            playerNumber={players[4].playerNumber}\n            showPlayerButtons={showPlayerButtons}\n          />\n        ) : (\n          <EmptyButton />\n        )}\n        {players[5] && players[5].playerNumber ? (\n          <PlayerButton\n            playerNumber={players[5].playerNumber}\n            showPlayerButtons={showPlayerButtons}\n          />\n        ) : (\n          <EmptyButton />\n        )}\n      </Box>\n      <Box\n        display=\"flex\"\n        bgcolor=\"white\"\n        width=\"100%\"\n        height=\"100%\"\n        marginTop={0}\n      >\n        {players[6] && players[6].playerNumber ? (\n          <PlayerButton\n            playerNumber={players[6].playerNumber}\n            showPlayerButtons={showPlayerButtons}\n          />\n        ) : (\n          <EmptyButton />\n        )}\n        {players[7] && players[7].playerNumber ? (\n          <PlayerButton\n            playerNumber={players[7].playerNumber}\n            showPlayerButtons={showPlayerButtons}\n          />\n        ) : (\n          <EmptyButton />\n        )}\n        {players[8] && players[8].playerNumber ? (\n          <PlayerButton\n            playerNumber={players[8].playerNumber}\n            showPlayerButtons={showPlayerButtons}\n          />\n        ) : (\n          <EmptyButton />\n        )}\n      </Box>\n      <Box\n        display=\"flex\"\n        bgcolor=\"white\"\n        width=\"100%\"\n        height=\"100%\"\n        marginTop={0}\n      >\n        {players[9] && players[9].playerNumber ? (\n          <PlayerButton\n            playerNumber={players[9].playerNumber}\n            showPlayerButtons={showPlayerButtons}\n          />\n        ) : (\n          <EmptyButton />\n        )}\n        {players[10] && players[10].playerNumber ? (\n          <PlayerButton\n            playerNumber={players[10].playerNumber}\n            showPlayerButtons={showPlayerButtons}\n          />\n        ) : (\n          <EmptyButton />\n        )}\n        {players[11] && players[11].playerNumber ? (\n          <PlayerButton\n            playerNumber={players[11].playerNumber}\n            showPlayerButtons={showPlayerButtons}\n          />\n        ) : (\n          <EmptyButton />\n        )}\n      </Box>\n    </Grid>\n  );\n};\n\nexport default PlayerButtons;\n","import React from 'react';\nimport EventButtons from '../../EventButtons';\nimport PlayerButtons from '../../PlayerButtons';\n\nconst Record: React.FC = () => {\n  const [showPlayerButtons, SetShowPlayerButtons] = React.useState(true);\n  return (\n    <>\n      {showPlayerButtons ? (\n        <PlayerButtons showPlayerButtons={SetShowPlayerButtons} />\n      ) : (\n        <EventButtons showPlayerButtons={SetShowPlayerButtons} />\n      )}\n    </>\n  );\n};\n\nexport default Record;\n","import React from 'react';\nimport {\n  Typography,\n  ListItem,\n  ListItemAvatar,\n  Avatar,\n  ListItemText,\n  ListItemSecondaryAction,\n  IconButton,\n} from '@material-ui/core';\nimport EditIcon from '@material-ui/icons/Edit';\nimport { successColor } from '../../constants/colors';\nimport { Player } from '../../store/player/types';\n\ninterface Props {\n  player: Player;\n  handlePlayerUpdate: (player: Player) => void;\n}\n\nconst PlayerItem: React.FC<Props> = ({ player, handlePlayerUpdate }) => {\n  return (\n    <ListItem>\n      <ListItemAvatar>\n        <Avatar>\n          <Typography variant=\"h6\">{player.playerNumber}</Typography>\n        </Avatar>\n      </ListItemAvatar>\n      <ListItemText\n        primary={\n          <Typography variant=\"h5\" color=\"textSecondary\">\n            {player.playerName}\n          </Typography>\n        }\n      />\n      <ListItemSecondaryAction>\n        <IconButton edge=\"end\" onClick={() => handlePlayerUpdate(player)}>\n          <EditIcon style={{ fontSize: 32, color: successColor }} />\n        </IconButton>\n      </ListItemSecondaryAction>\n    </ListItem>\n  );\n};\n\nexport default PlayerItem;\n","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport { PlayerInput } from '../../../store/player/types';\n\ninterface Props {\n  modalOpen: boolean;\n  onClose: () => void;\n  onSubmit: (player: PlayerInput) => void;\n}\n\nconst PlayerAddDialog: React.FC<Props> = ({ modalOpen, onClose, onSubmit }) => {\n  const [playerName, setPlayerName] = React.useState<string>('');\n  const [playerNumber, setPlayerNumber] = React.useState<string>('');\n\n  const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    const player = {\n      // TODO: REMOVE id (tulee Mongosta)\n      // id: Math.floor(Math.random() * 1000000),\n      playerNumber: Number(playerNumber),\n      playerName,\n    };\n    setPlayerName('');\n    setPlayerNumber('');\n    onSubmit(player);\n  };\n\n  const handleNameChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setPlayerName(event.target.value);\n    console.log(playerName);\n  };\n\n  const handleNumberChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setPlayerNumber(event.target.value);\n    console.log(playerNumber);\n  };\n\n  return (\n    <div>\n      <Dialog open={modalOpen} onClose={onClose}>\n        <DialogContent>\n          <form onSubmit={handleSubmit} noValidate autoComplete=\"off\">\n            <TextField\n              autoFocus={true}\n              fullWidth\n              style={{ marginBottom: 16 }}\n              name=\"playerName\"\n              onChange={handleNameChange}\n              placeholder=\"Player Name\"\n              required={true}\n              size=\"small\"\n              type=\"text\"\n              value={playerName}\n              variant=\"outlined\"\n            />\n            <TextField\n              fullWidth\n              style={{ marginBottom: 24 }}\n              name=\"playerNumber\"\n              onChange={handleNumberChange}\n              placeholder=\"Player Number\"\n              required={true}\n              size=\"small\"\n              value={playerNumber}\n              variant=\"outlined\"\n            />\n            <Button\n              variant=\"outlined\"\n              type=\"submit\"\n              color=\"primary\"\n              style={{ marginBottom: 8, marginRight: 8 }}\n            >\n              Add\n            </Button>\n            <Button\n              variant=\"outlined\"\n              onClick={onClose}\n              color=\"secondary\"\n              style={{ marginBottom: 8, marginLeft: 8 }}\n            >\n              Cancel\n            </Button>\n          </form>\n        </DialogContent>\n      </Dialog>\n    </div>\n  );\n};\n\nexport default PlayerAddDialog;\n","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport { TeamInput } from '../../../store/team/types';\n\ninterface Props {\n  modalOpen: boolean;\n  onClose: () => void;\n  onSubmit: (team: TeamInput) => void;\n}\n\nconst TeamAddDialog: React.FC<Props> = ({ modalOpen, onClose, onSubmit }) => {\n  const [teamName, setTeamName] = React.useState<string>('');\n\n  const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    const team = {\n      teamName,\n    };\n    setTeamName('');\n    onSubmit(team);\n  };\n\n  const handleNameChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setTeamName(event.target.value);\n    console.log(teamName);\n  };\n\n  return (\n    <div>\n      <Dialog open={modalOpen} onClose={onClose}>\n        <DialogContent>\n          <form onSubmit={handleSubmit} noValidate autoComplete=\"off\">\n            <TextField\n              autoFocus={true}\n              fullWidth\n              style={{ marginBottom: 16 }}\n              name=\"teamName\"\n              onChange={handleNameChange}\n              placeholder=\"Team Name\"\n              required={true}\n              size=\"small\"\n              type=\"text\"\n              value={teamName}\n              variant=\"outlined\"\n            />\n            <Button\n              variant=\"outlined\"\n              type=\"submit\"\n              color=\"primary\"\n              style={{ marginBottom: 8, marginRight: 8 }}\n            >\n              Add\n            </Button>\n            <Button\n              variant=\"outlined\"\n              onClick={onClose}\n              color=\"secondary\"\n              style={{ marginBottom: 8, marginLeft: 8 }}\n            >\n              Cancel\n            </Button>\n          </form>\n        </DialogContent>\n      </Dialog>\n    </div>\n  );\n};\n\nexport default TeamAddDialog;\n","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport { Player } from '../../../store/player/types';\n\ninterface Props {\n  modalOpen: boolean;\n  onClose: () => void;\n  onSubmit: (player: Player) => void;\n  player: Player;\n}\n\nconst PlayerUpdateDialog: React.FC<Props> = ({\n  modalOpen,\n  onClose,\n  onSubmit,\n  player,\n}) => {\n  const [playerName, setPlayerName] = React.useState<string>('');\n  const [playerNumber, setPlayerNumber] = React.useState<string>('');\n\n  React.useEffect(() => {\n    setPlayerName(player.playerName);\n    setPlayerNumber(String(player.playerNumber));\n  }, [player.playerName, player.playerNumber]);\n\n  const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    const updatedPlayer: Player = {\n      id: player.id,\n      playerName,\n      playerNumber: Number(playerNumber),\n    };\n    setPlayerName('');\n    setPlayerNumber('');\n    onSubmit(updatedPlayer);\n  };\n\n  const handleNameChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setPlayerName(event.target.value);\n    console.log(playerName);\n  };\n\n  const handleNumberChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setPlayerNumber(event.target.value);\n    console.log(playerNumber);\n  };\n\n  return (\n    <div>\n      <Dialog open={modalOpen} onClose={onClose}>\n        <DialogContent>\n          <form onSubmit={handleSubmit} noValidate autoComplete=\"off\">\n            <TextField\n              autoFocus={true}\n              fullWidth\n              style={{ marginBottom: 16 }}\n              name=\"playerName\"\n              onChange={handleNameChange}\n              placeholder=\"Player Name\"\n              required={true}\n              size=\"small\"\n              type=\"text\"\n              value={playerName}\n              variant=\"outlined\"\n            />\n            <TextField\n              fullWidth\n              style={{ marginBottom: 24 }}\n              name=\"playerNumber\"\n              onChange={handleNumberChange}\n              placeholder=\"Player Number\"\n              required={true}\n              size=\"small\"\n              value={playerNumber}\n              variant=\"outlined\"\n            />\n            <Button\n              variant=\"outlined\"\n              type=\"submit\"\n              color=\"primary\"\n              style={{ marginBottom: 8, marginRight: 8 }}\n            >\n              Update\n            </Button>\n            <Button\n              variant=\"outlined\"\n              onClick={onClose}\n              color=\"secondary\"\n              style={{ marginBottom: 8, marginLeft: 8 }}\n            >\n              Cancel\n            </Button>\n          </form>\n        </DialogContent>\n      </Dialog>\n    </div>\n  );\n};\n\nexport default PlayerUpdateDialog;\n","import React from 'react';\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport NativeSelect from '@material-ui/core/NativeSelect';\n\nimport { Team } from '../../../store/team/types';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    formControl: {\n      margin: theme.spacing(1),\n      minWidth: 120,\n    },\n    selectEmpty: {\n      marginTop: theme.spacing(2),\n    },\n  })\n);\n\ninterface Props {\n  teams: Team[];\n}\n\nconst TeamSelect: React.FC<Props> = ({ teams }) => {\n  const classes = useStyles();\n  const [teamId, setTeamId] = React.useState<string>('');\n  const [state, setState] = React.useState<{\n    age: string | number;\n    name: string;\n  }>({\n    age: '',\n    name: 'hai',\n  });\n\n  const handleTeamChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setTeamId(event.target.value);\n    console.log(teamId);\n  };\n\n  const handleChange = (\n    event: React.ChangeEvent<{ name?: string; value: unknown }>\n  ) => {\n    const name = event.target.name as keyof typeof state;\n    setState({\n      ...state,\n      [name]: event.target.value,\n    });\n  };\n\n  const options = (items: Team[]) => {\n    return items.map((item) => (\n      <option key={item.id} value={item.id}>\n        {item.teamName}\n      </option>\n    ));\n  };\n\n  return (\n    <div>\n      <FormControl variant=\"outlined\" className={classes.formControl}>\n        <InputLabel htmlFor=\"outlined-age-native-simple\">Team</InputLabel>\n\n        <Select\n          native\n          value={teamId}\n          onChange={() => handleTeamChange}\n          label=\"Team\"\n        >\n          {options(teams)}\n        </Select>\n      </FormControl>\n    </div>\n  );\n};\n\nexport default TeamSelect;\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { makeStyles, Theme, createStyles } from '@material-ui/core/styles';\nimport { Grid, List, IconButton } from '@material-ui/core';\nimport AddCircleOutlineIcon from '@material-ui/icons/AddCircleOutline';\nimport GroupAddIcon from '@material-ui/icons/GroupAdd';\nimport { successColor } from '../../constants/colors';\n\nimport PlayerItem from './PlayerItem';\nimport { Player, PlayerInput } from '../../store/player/types';\nimport { Team, TeamInput } from '../../store/team/types';\nimport PlayerAddDialog from '../../components/modals/PlayerAddDialog';\nimport TeamAddDialog from '../../components/modals/TeamAddDialog';\nimport PlayerUpdateDialog from '../../components/modals/PlayerUpdateDialog';\nimport store, { getPlayers, getTeams } from '../../store';\nimport { addPlayer, updatePlayer } from '../../store/player/actions';\nimport playerService from '../../services/players';\nimport teamService from '../../services/teams';\nimport TeamSelect from '../../components/selects/TeamSelect';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      flexGrow: 1,\n      maxWidth: 752,\n    },\n    demo: {\n      backgroundColor: theme.palette.background.paper,\n    },\n  })\n);\n\nconst TeamView: React.FC = () => {\n  const dispatch = useDispatch();\n  const classes = useStyles();\n  const [addDialogOpen, setAddDialogOpen] = React.useState<boolean>(false);\n  const [addTeamDialogOpen, setAddTeamDialogOpen] = React.useState<boolean>(\n    false\n  );\n  const [updateDialogOpen, setUpdateDialogOpen] = React.useState<boolean>(\n    false\n  );\n  const [player, setPlayer] = React.useState<Player>({\n    id: '',\n    playerName: '',\n    playerNumber: undefined,\n  });\n\n  const openAddDialog = (): void => {\n    setAddDialogOpen(true);\n  };\n  const closeAddDialog = (): void => {\n    setAddDialogOpen(false);\n  };\n  const openAddTeamDialog = (): void => {\n    setAddTeamDialogOpen(true);\n  };\n  const closeAddTeamDialog = (): void => {\n    setAddTeamDialogOpen(false);\n  };\n\n  const openUpdateDialog = (playerToUpdate: Player): void => {\n    console.log('updatePlayer', playerToUpdate);\n    setPlayer(playerToUpdate);\n    setUpdateDialogOpen(true);\n  };\n\n  const closeUpdateDialog = (): void => {\n    setUpdateDialogOpen(false);\n  };\n\n  const handleAddPlayer = async (values: PlayerInput) => {\n    closeAddDialog();\n    try {\n      const newPlayer = await playerService.createPlayer(values);\n      console.log('add player', newPlayer);\n      // dispatch(addPlayer(values));\n    } catch (error) {\n      console.error(error.message);\n    }\n  };\n\n  const handleAddTeam = async (values: TeamInput) => {\n    closeAddTeamDialog();\n    try {\n      const newTeam = await teamService.createTeam(values);\n      console.log('add team', newTeam);\n      // dispatch(addTeam(values));\n    } catch (error) {\n      console.error(error.message);\n    }\n  };\n\n  const handleUpdatePlayer = (values: Player): void => {\n    closeUpdateDialog();\n    dispatch(updatePlayer(values));\n    console.log('update player', values);\n  };\n\n  return (\n    <div className={classes.root}>\n      <Grid item xs={12} md={6}>\n        <Grid container direction=\"row\" justify=\"center\" alignItems=\"center\">\n          <TeamSelect teams={getTeams(store.getState())} />\n          <IconButton onClick={() => openAddTeamDialog()}>\n            <GroupAddIcon style={{ fontSize: 48, color: successColor }} />\n          </IconButton>\n        </Grid>\n        <Grid\n          container\n          direction=\"column\"\n          justify=\"center\"\n          alignItems=\"flex-start\"\n        >\n          <List>\n            {getPlayers(store.getState()).players.map((p) => (\n              <PlayerItem\n                key={p.id}\n                player={p}\n                handlePlayerUpdate={openUpdateDialog}\n              />\n            ))}\n          </List>\n          <IconButton onClick={() => openAddDialog()}>\n            <AddCircleOutlineIcon\n              style={{ fontSize: 48, color: successColor }}\n            />\n          </IconButton>\n\n          <PlayerUpdateDialog\n            modalOpen={updateDialogOpen}\n            player={player}\n            onClose={closeUpdateDialog}\n            onSubmit={handleUpdatePlayer}\n          />\n\n          <PlayerAddDialog\n            modalOpen={addDialogOpen}\n            onClose={closeAddDialog}\n            onSubmit={handleAddPlayer}\n          />\n\n          <TeamAddDialog\n            modalOpen={addTeamDialogOpen}\n            onClose={closeAddTeamDialog}\n            onSubmit={handleAddTeam}\n          />\n        </Grid>\n      </Grid>\n    </div>\n  );\n};\n\nexport default TeamView;\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Box from '@material-ui/core/Box';\nimport Collapse from '@material-ui/core/Collapse';\nimport IconButton from '@material-ui/core/IconButton';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport KeyboardArrowDownIcon from '@material-ui/icons/KeyboardArrowDown';\nimport KeyboardArrowUpIcon from '@material-ui/icons/KeyboardArrowUp';\nimport store, { getStats } from '../../store';\nimport { Stat } from '../../store/stat/types';\n\nconst useRowStyles = makeStyles((theme) => ({\n  root: {\n    '& > *': {\n      borderBottom: 'unset',\n    },\n  },\n  cell: {\n    width: 30,\n  },\n}));\n\ninterface Props {\n  row: Stat;\n}\n\nconst Row: React.FC<Props> = ({ row }) => {\n  const [open, setOpen] = React.useState(false);\n  const classes = useRowStyles();\n\n  const shootingdata = (made: number, attempt: number): string => {\n    const pct = ((100 * made) / attempt).toFixed(0);\n    return attempt > 0 ? `${made}/${attempt}/${pct}` : '0/0/0';\n  };\n\n  return (\n    <>\n      <TableRow className={classes.root}>\n        <TableCell padding=\"none\" size=\"small\" className={classes.cell}>\n          <IconButton size=\"small\" onClick={() => setOpen(!open)}>\n            {open ? <KeyboardArrowUpIcon /> : <KeyboardArrowDownIcon />}\n          </IconButton>\n        </TableCell>\n        <TableCell\n          padding=\"none\"\n          size=\"small\"\n          className={classes.cell}\n          align=\"center\"\n        >\n          {row.playerNumber}\n        </TableCell>\n        <TableCell\n          padding=\"none\"\n          size=\"small\"\n          className={classes.cell}\n          align=\"center\"\n        >\n          {row.onePm + row.twoPm * 2 + row.threePm * 3}\n        </TableCell>\n        <TableCell\n          padding=\"none\"\n          size=\"small\"\n          className={classes.cell}\n          align=\"center\"\n        >\n          {row.ast}\n        </TableCell>\n        <TableCell\n          padding=\"none\"\n          size=\"small\"\n          className={classes.cell}\n          align=\"center\"\n        >\n          {row.stl}\n        </TableCell>\n        <TableCell\n          padding=\"none\"\n          size=\"small\"\n          className={classes.cell}\n          align=\"center\"\n        >\n          {row.orb + row.drb}\n        </TableCell>\n        <TableCell\n          padding=\"none\"\n          size=\"small\"\n          className={classes.cell}\n          align=\"center\"\n        >\n          {row.blk}\n        </TableCell>\n        <TableCell\n          padding=\"none\"\n          size=\"small\"\n          className={classes.cell}\n          align=\"center\"\n        >\n          {row.to}\n        </TableCell>\n      </TableRow>\n      <TableRow>\n        <TableCell style={{ paddingBottom: 0, paddingTop: 0 }} colSpan={12}>\n          <Collapse in={open} timeout=\"auto\" unmountOnExit>\n            <Box margin={1}>\n              <Table>\n                <TableHead>\n                  <TableRow>\n                    <TableCell\n                      padding=\"none\"\n                      className={classes.cell}\n                      align=\"center\"\n                    >\n                      1P M/A/%\n                    </TableCell>\n                    <TableCell\n                      padding=\"none\"\n                      className={classes.cell}\n                      align=\"center\"\n                    >\n                      2P M/A/%\n                    </TableCell>\n                    <TableCell\n                      padding=\"none\"\n                      className={classes.cell}\n                      align=\"center\"\n                    >\n                      3P M/A/%\n                    </TableCell>\n                    <TableCell\n                      padding=\"none\"\n                      className={classes.cell}\n                      align=\"center\"\n                    >\n                      ORB/DRB\n                    </TableCell>\n                    <TableCell\n                      padding=\"none\"\n                      className={classes.cell}\n                      align=\"center\"\n                    >\n                      EFF\n                    </TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  <TableRow>\n                    <TableCell\n                      padding=\"none\"\n                      className={classes.cell}\n                      align=\"center\"\n                    >\n                      {shootingdata(row.onePm, row.onePa)}\n                    </TableCell>\n                    <TableCell\n                      padding=\"none\"\n                      className={classes.cell}\n                      align=\"center\"\n                    >\n                      {shootingdata(row.twoPm, row.twoPa)}\n                    </TableCell>\n                    <TableCell\n                      padding=\"none\"\n                      className={classes.cell}\n                      align=\"center\"\n                    >\n                      {shootingdata(row.threePm, row.threePa)}\n                    </TableCell>\n                    <TableCell\n                      padding=\"none\"\n                      className={classes.cell}\n                      align=\"center\"\n                    >\n                      {`${row.orb} / ${row.drb}`}\n                    </TableCell>\n                    <TableCell\n                      padding=\"none\"\n                      className={classes.cell}\n                      align=\"center\"\n                    >\n                      EFF\n                    </TableCell>\n                  </TableRow>\n                </TableBody>\n              </Table>\n            </Box>\n          </Collapse>\n        </TableCell>\n      </TableRow>\n    </>\n  );\n};\n\nconst Stats: React.FC = () => {\n  const classes = useRowStyles();\n\n  return (\n    <TableContainer component={Paper}>\n      <Table stickyHeader>\n        <TableHead>\n          <TableRow>\n            <TableCell\n              padding=\"none\"\n              size=\"small\"\n              className={classes.cell}\n              align=\"center\"\n            />\n            <TableCell\n              padding=\"none\"\n              size=\"small\"\n              className={classes.cell}\n              align=\"center\"\n            >\n              ###\n            </TableCell>\n            <TableCell\n              padding=\"none\"\n              size=\"small\"\n              className={classes.cell}\n              align=\"center\"\n            >\n              PTS\n            </TableCell>\n            <TableCell\n              padding=\"none\"\n              size=\"small\"\n              className={classes.cell}\n              align=\"center\"\n            >\n              AST\n            </TableCell>\n            <TableCell\n              padding=\"none\"\n              size=\"small\"\n              className={classes.cell}\n              align=\"center\"\n            >\n              STL\n            </TableCell>\n            <TableCell\n              padding=\"none\"\n              size=\"small\"\n              className={classes.cell}\n              align=\"center\"\n            >\n              REB\n            </TableCell>\n            <TableCell\n              padding=\"none\"\n              size=\"small\"\n              className={classes.cell}\n              align=\"center\"\n            >\n              BLK\n            </TableCell>\n            <TableCell\n              padding=\"none\"\n              size=\"small\"\n              className={classes.cell}\n              align=\"center\"\n            >\n              TO\n            </TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {getStats(store.getState()).stats.map((row) => (\n            <Row key={row.playerNumber} row={row} />\n          ))}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n};\n\nexport default Stats;\n","import React from 'react';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core/styles';\nimport { useDispatch } from 'react-redux';\nimport { initPlayers } from './store/player/actions';\nimport { loginUser } from './store/user/actions';\nimport { playerList } from './data/players';\nimport Header from './views/Header';\nimport Home from './views/Home';\nimport Record from './views/Record';\nimport Team from './views/Team';\nimport Stats from './views/Stats';\n\nconst App: React.FC = () => {\n  const dispatch = useDispatch();\n  const [loggedIn, setLoggedIn] = React.useState<boolean>(false);\n  const theme = createMuiTheme();\n\n  /* TODO REMOVE\n  React.useEffect(() => {\n    \n    dispatch(initPlayers(playerList));\n  }, [dispatch]);\n  */\n\n  React.useEffect(() => {\n    const loggedInUser = window.localStorage.getItem('basketBallStatUser');\n    if (loggedInUser) {\n      const user = JSON.parse(loggedInUser);\n      dispatch(loginUser(user));\n      setLoggedIn(true);\n    }\n  }, [dispatch]);\n\n  return (\n    <Router>\n      <ThemeProvider theme={theme}>\n        <Header loggedIn={loggedIn} setLoggedIn={setLoggedIn} />\n        <Switch>\n          <Route path=\"/team\" render={() => <Team />} />\n          <Route path=\"/stats\" render={() => <Stats />} />\n          <Route path=\"/record\" render={() => <Record />} />\n          <Route path=\"/\" render={() => <Home />} />\n        </Switch>\n      </ThemeProvider>\n    </Router>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport App from './App';\nimport store from './store';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}